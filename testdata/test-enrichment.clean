(0. (Types.Instrumented
       "function AlmostWeakMap() {\n        return {\n            map: new WeakMap(),\n            fallback: new Array(),\n            get: get,\n            set: set,\n            has: has\n        }\n    }"),
 1. (Types.Instrumented "function Array() { [native code] }"),
 2. (Types.Instrumented "function ArrayBuffer() { [native code] }"),
 3. (Types.Instrumented "function Boolean() { [native code] }"),
 4. (Types.Instrumented
       "function Buffer(arg, encoding) {\n  // Common case.\n  if (typeof arg === 'number') {\n    // If less than zero, or NaN.\n    if (arg < 0 || arg !== arg)\n      arg = 0;\n    return allocate(arg);\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(arg, encoding);\n  }\n\n  // Unusual.\n  return fromObject(arg);\n}"),
 5. (Types.Instrumented "function DataView() { [native code] }"),
 6. (Types.Instrumented "function Date() { [native code] }"),
 7. (Types.Instrumented "function Error() { [native code] }"),
 8. (Types.Instrumented "function EvalError() { [native code] }"),
 9. (Types.Instrumented "function Float32Array() { [native code] }"),
 10. (Types.Instrumented "function Float64Array() { [native code] }"),
 11. (Types.Instrumented "function Function() { [native code] }"),
 12. (Types.Instrumented "function Int16Array() { [native code] }"),
 13. (Types.Instrumented "function Int32Array() { [native code] }"),
 14. (Types.Instrumented "function Int8Array() { [native code] }"),
 15. (Types.Instrumented "function Map() { [native code] }"),
 16. (Types.Instrumented "function Number() { [native code] }"),
 17. (Types.Instrumented "function Object() { [native code] }"),
 18. (Types.Instrumented "function Promise() { [native code] }"),
 19. (Types.Instrumented "function RangeError() { [native code] }"),
 20. (Types.Instrumented "function ReferenceError() { [native code] }"),
 21. (Types.Instrumented "function RegExp() { [native code] }"),
 22. (Types.Instrumented "function Set() { [native code] }"),
 23. (Types.Instrumented "function String() { [native code] }"),
 24. (Types.Instrumented "function Symbol() { [native code] }"),
 25. (Types.Instrumented "function SyntaxError() { [native code] }"),
 26. (Types.Instrumented "function TypeError() { [native code] }"),
 27. (Types.Instrumented "function URIError() { [native code] }"),
 28. (Types.Instrumented "function Uint16Array() { [native code] }"),
 29. (Types.Instrumented "function Uint32Array() { [native code] }"),
 30. (Types.Instrumented "function Uint8Array() { [native code] }"),
 31. (Types.Instrumented "function Uint8ClampedArray() { [native code] }"),
 32. (Types.Instrumented "function WeakMap() { [native code] }"),
 33. (Types.Instrumented "function WeakSet() { [native code] }"),
 34. (Types.Instrumented
        "function (immediate) {\n  if (!immediate) return;\n\n  immediate._onImmediate = undefined;\n\n  L.remove(immediate);\n\n  if (L.isEmpty(immediateQueue)) {\n    process._needImmediateCallback = false;\n  }\n}"),
 35. (Types.Instrumented
        "function (timer) {\n  if (timer && timer._repeat) {\n    timer._repeat = null;\n    clearTimeout(timer);\n  }\n}"),
 36. (Types.Instrumented
        "function (timer) {\n  if (timer && (timer[kOnTimeout] || timer._onTimeout)) {\n    timer[kOnTimeout] = timer._onTimeout = null;\n    if (timer instanceof Timeout) {\n      timer.close(); // for after === 0\n    } else {\n      exports.unenroll(timer);\n    }\n  }\n}"),
 37. (Types.Instrumented
        "function () {\n      return NativeModule.require('console');\n    }"),
 38. (Types.Instrumented "function decodeURI() { [native code] }"),
 39. (Types.Instrumented "function decodeURIComponent() { [native code] }"),
 40. (Types.Instrumented "function encodeURI() { [native code] }"),
 41. (Types.Instrumented "function encodeURIComponent() { [native code] }"),
 42. (Types.Instrumented "function escape() { [native code] }"),
 43. (Types.Instrumented "function eval() { [native code] }"),
 44. (Types.Instrumented "function isFinite() { [native code] }"),
 45. (Types.Instrumented "function isNaN() { [native code] }"),
 46. (Types.Instrumented "function parseFloat() { [native code] }"),
 47. (Types.Instrumented "function parseInt() { [native code] }"),
 48. (Types.Instrumented
        "function (callback, arg1, arg2, arg3) {\n  var i, args;\n  var len = arguments.length;\n  var immediate = new Immediate();\n\n  L.init(immediate);\n\n  switch (len) {\n    // fast cases\n    case 0:\n    case 1:\n      immediate._onImmediate = callback;\n      break;\n    case 2:\n      immediate._onImmediate = function() {\n        callback.call(immediate, arg1);\n      };\n      break;\n    case 3:\n      immediate._onImmediate = function() {\n        callback.call(immediate, arg1, arg2);\n      };\n      break;\n    case 4:\n      immediate._onImmediate = function() {\n        callback.call(immediate, arg1, arg2, arg3);\n      };\n      break;\n    // slow case\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n\n      immediate._onImmediate = function() {\n        callback.apply(immediate, args);\n      };\n      break;\n  }\n\n  if (!process._needImmediateCallback) {\n    process._needImmediateCallback = true;\n    process._immediateCallback = processImmediate;\n  }\n\n  if (process.domain)\n    immediate.domain = process.domain;\n\n  L.append(immediateQueue, immediate);\n\n  return immediate;\n}"),
 49. (Types.Instrumented
        "function (callback, repeat) {\n  repeat *= 1; // coalesce to number or NaN\n\n  if (!(repeat >= 1 && repeat <= TIMEOUT_MAX)) {\n    repeat = 1; // schedule on next tick, follows browser behaviour\n  }\n\n  var timer = new Timeout(repeat);\n  var length = arguments.length;\n  var ontimeout = callback;\n  switch (length) {\n    case 0:\n    case 1:\n    case 2:\n      break;\n    case 3:\n      ontimeout = () => callback.call(timer, arguments[2]);\n      break;\n    case 4:\n      ontimeout = () => callback.call(timer, arguments[2], arguments[3]);\n      break;\n    case 5:\n      ontimeout =\n        () => callback.call(timer, arguments[2], arguments[3], arguments[4]);\n      break;\n    default:\n      var args = new Array(length - 2);\n      for (var i = 2; i < length; i += 1)\n        args[i - 2] = arguments[i];\n      ontimeout = () => callback.apply(timer, args);\n      break;\n  }\n  timer._onTimeout = wrapper;\n  timer._repeat = ontimeout;\n\n  if (process.domain) timer.domain = process.domain;\n  exports.active(timer);\n\n  return timer;\n\n  function wrapper() {\n    timer._repeat();\n\n    // Timer might be closed - no point in restarting it\n    if (!timer._repeat)\n      return;\n\n    // If timer is unref'd (or was - it's permanently removed from the list.)\n    if (this._handle) {\n      this._handle.start(repeat, 0);\n    } else {\n      timer._idleTimeout = repeat;\n      exports.active(timer);\n    }\n  }\n}"),
 50. (Types.Instrumented
        "function (callback, after) {\n  after *= 1; // coalesce to number or NaN\n\n  if (!(after >= 1 && after <= TIMEOUT_MAX)) {\n    after = 1; // schedule on next tick, follows browser behaviour\n  }\n\n  var timer = new Timeout(after);\n  var length = arguments.length;\n  var ontimeout = callback;\n  switch (length) {\n    // fast cases\n    case 0:\n    case 1:\n    case 2:\n      break;\n    case 3:\n      ontimeout = () => callback.call(timer, arguments[2]);\n      break;\n    case 4:\n      ontimeout = () => callback.call(timer, arguments[2], arguments[3]);\n      break;\n    case 5:\n      ontimeout =\n        () => callback.call(timer, arguments[2], arguments[3], arguments[4]);\n      break;\n    // slow case\n    default:\n      var args = new Array(length - 2);\n      for (var i = 2; i < length; i++)\n        args[i - 2] = arguments[i];\n      ontimeout = () => callback.apply(timer, args);\n      break;\n  }\n  timer._onTimeout = ontimeout;\n\n  if (process.domain) timer.domain = process.domain;\n\n  exports.active(timer);\n\n  return timer;\n}"),
 51. (Types.Instrumented "function unescape() { [native code] }"),
 52. (Types.Instrumented "function from() { [native code] }"),
 53. (Types.Instrumented "function isArray() { [native code] }"),
 54. (Types.Instrumented "function observe() { [native code] }"),
 55. (Types.Instrumented "function of() { [native code] }"),
 56. (Types.Instrumented "function unobserve() { [native code] }"),
 57. (Types.Instrumented "function isView() { [native code] }"),
 58. (Types.Instrumented
        "function byteLength(string, encoding) {\n  if (string instanceof Buffer)\n    return string.length;\n\n  if (typeof string !== 'string')\n    string = '' + string;\n\n  var len = string.length;\n  if (len === 0)\n    return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return binding.byteLengthUtf8(string);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ByteLength(string, len);\n\n      default:\n        // The C++ binding defaulted to UTF8, we should too.\n        if (loweredCase)\n          return binding.byteLengthUtf8(string);\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}"),
 59. (Types.Instrumented
        "function compare(a, b) {\n  if (!(a instanceof Buffer) ||\n      !(b instanceof Buffer)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) {\n    return 0;\n  }\n\n  return binding.compare(a, b);\n}"),
 60. (Types.Instrumented
        "function (list, length) {\n  if (!Array.isArray(list))\n    throw new TypeError('list argument must be an Array of Buffers.');\n\n  if (list.length === 0)\n    return new Buffer(0);\n\n  if (length === undefined) {\n    length = 0;\n    for (var i = 0; i < list.length; i++)\n      length += list[i].length;\n  } else {\n    length = length >>> 0;\n  }\n\n  var buffer = new Buffer(length);\n  var pos = 0;\n  for (var i = 0; i < list.length; i++) {\n    var buf = list[i];\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n}"),
 61. (Types.Instrumented
        "function isBuffer(b) {\n  return b instanceof Buffer;\n}"),
 62. (Types.Instrumented
        "function (encoding) {\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n      case 'raw':\n        return true;\n\n      default:\n        if (loweredCase)\n          return false;\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}"),
 63. (Types.Instrumented "function UTC() { [native code] }"),
 64. (Types.Instrumented "function now() { [native code] }"),
 65. (Types.Instrumented "function parse() { [native code] }"),
 66. (Types.Instrumented "function captureStackTrace() { [native code] }"),
 67. (Types.Instrumented "function from() { [native code] }"),
 68. (Types.Instrumented "function of() { [native code] }"),
 69. (Types.Instrumented "function () {}"),
 70. (Types.Instrumented "function () { [native code] }"),
 71. (Types.Instrumented "function () { [native code] }"),
 72. (Types.Instrumented "function () { [native code] }"),
 73. (Types.Instrumented "function () { [native code] }"),
 74. (Types.Instrumented "function parse() { [native code] }"),
 75. (Types.Instrumented "function stringify() { [native code] }"),
 76. (Types.Instrumented "function abs() { [native code] }"),
 77. (Types.Instrumented "function acos() { [native code] }"),
 78. (Types.Instrumented "function acosh() { [native code] }"),
 79. (Types.Instrumented "function asin() { [native code] }"),
 80. (Types.Instrumented "function asinh() { [native code] }"),
 81. (Types.Instrumented "function atan() { [native code] }"),
 82. (Types.Instrumented "function atan2() { [native code] }"),
 83. (Types.Instrumented "function atanh() { [native code] }"),
 84. (Types.Instrumented "function cbrt() { [native code] }"),
 85. (Types.Instrumented "function ceil() { [native code] }"),
 86. (Types.Instrumented "function clz32() { [native code] }"),
 87. (Types.Instrumented "function cos() { [native code] }"),
 88. (Types.Instrumented "function cosh() { [native code] }"),
 89. (Types.Instrumented "function exp() { [native code] }"),
 90. (Types.Instrumented "function expm1() { [native code] }"),
 91. (Types.Instrumented "function floor() { [native code] }"),
 92. (Types.Instrumented "function fround() { [native code] }"),
 93. (Types.Instrumented "function hypot() { [native code] }"),
 94. (Types.Instrumented "function imul() { [native code] }"),
 95. (Types.Instrumented "function log() { [native code] }"),
 96. (Types.Instrumented "function log10() { [native code] }"),
 97. (Types.Instrumented "function log1p() { [native code] }"),
 98. (Types.Instrumented "function log2() { [native code] }"),
 99. (Types.Instrumented "function max() { [native code] }"),
 100. (Types.Instrumented "function min() { [native code] }"),
 101. (Types.Instrumented "function pow() { [native code] }"),
 102. (Types.Instrumented "function random() { [native code] }"),
 103. (Types.Instrumented "function round() { [native code] }"),
 104. (Types.Instrumented "function sign() { [native code] }"),
 105. (Types.Instrumented "function sin() { [native code] }"),
 106. (Types.Instrumented "function sinh() { [native code] }"),
 107. (Types.Instrumented "function sqrt() { [native code] }"),
 108. (Types.Instrumented "function tan() { [native code] }"),
 109. (Types.Instrumented "function tanh() { [native code] }"),
 110. (Types.Instrumented "function trunc() { [native code] }"),
 111. (Types.Instrumented "function isFinite() { [native code] }"),
 112. (Types.Instrumented "function isInteger() { [native code] }"),
 113. (Types.Instrumented "function isNaN() { [native code] }"),
 114. (Types.Instrumented "function isSafeInteger() { [native code] }"),
 115. (Types.Instrumented "function assign() { [native code] }"),
 116. (Types.Instrumented "function create() { [native code] }"),
 117. (Types.Instrumented "function defineProperties() { [native code] }"),
 118. (Types.Instrumented "function defineProperty() { [native code] }"),
 119. (Types.Instrumented "function deliverChangeRecords() { [native code] }"),
 120. (Types.Instrumented "function freeze() { [native code] }"),
 121. (Types.Instrumented "function getNotifier() { [native code] }"),
 122. (Types.Instrumented
         "function getOwnPropertyDescriptor() { [native code] }"),
 123. (Types.Instrumented "function getOwnPropertyNames() { [native code] }"),
 124. (Types.Instrumented
         "function getOwnPropertySymbols() { [native code] }"),
 125. (Types.Instrumented "function getPrototypeOf() { [native code] }"),
 126. (Types.Instrumented "function is() { [native code] }"),
 127. (Types.Instrumented "function isExtensible() { [native code] }"),
 128. (Types.Instrumented "function isFrozen() { [native code] }"),
 129. (Types.Instrumented "function isSealed() { [native code] }"),
 130. (Types.Instrumented "function keys() { [native code] }"),
 131. (Types.Instrumented "function observe() { [native code] }"),
 132. (Types.Instrumented "function preventExtensions() { [native code] }"),
 133. (Types.Instrumented "function seal() { [native code] }"),
 134. (Types.Instrumented "function setPrototypeOf() { [native code] }"),
 135. (Types.Instrumented "function unobserve() { [native code] }"),
 136. (Types.Instrumented "function accept() { [native code] }"),
 137. (Types.Instrumented "function all() { [native code] }"),
 138. (Types.Instrumented "function defer() { [native code] }"),
 139. (Types.Instrumented "function race() { [native code] }"),
 140. (Types.Instrumented "function reject() { [native code] }"),
 141. (Types.Instrumented "function resolve() { [native code] }"),
 142. (Types.Instrumented "function RegExpGetLastMatch() { [native code] }"),
 143. (Types.Instrumented "function () { [native code] }"),
 144. (Types.Instrumented
         "function RegExpGetRightContext() { [native code] }"),
 145. (Types.Instrumented "function () { [native code] }"),
 146. (Types.Instrumented "function () { [native code] }"),
 147. (Types.Instrumented "function RegExpGetLastParen() { [native code] }"),
 148. (Types.Instrumented "function foo() { [native code] }"),
 149. (Types.Instrumented "function foo() { [native code] }"),
 150. (Types.Instrumented "function foo() { [native code] }"),
 151. (Types.Instrumented "function foo() { [native code] }"),
 152. (Types.Instrumented "function foo() { [native code] }"),
 153. (Types.Instrumented "function foo() { [native code] }"),
 154. (Types.Instrumented "function foo() { [native code] }"),
 155. (Types.Instrumented "function foo() { [native code] }"),
 156. (Types.Instrumented "function foo() { [native code] }"),
 157. (Types.Instrumented "function () { [native code] }"),
 158. (Types.Instrumented "function () { [native code] }"),
 159. (Types.Instrumented "function RegExpGetLeftContext() { [native code] }"),
 160. (Types.Instrumented "function fromCharCode() { [native code] }"),
 161. (Types.Instrumented "function fromCodePoint() { [native code] }"),
 162. (Types.Instrumented "function raw() { [native code] }"),
 163. (Types.Instrumented "function for() { [native code] }"),
 164. (Types.Instrumented "function keyFor() { [native code] }"),
 165. (Types.Instrumented
         "function EventEmitter() {\n  EventEmitter.init.call(this);\n}"),
 166. (Types.Instrumented "function _debugEnd() { [native code] }"),
 167. (Types.Instrumented "function _debugPause() { [native code] }"),
 168. (Types.Instrumented "function _debugProcess() { [native code] }"),
 169. (Types.Instrumented
         "function (er) {\n      var caught;\n\n      if (process.domain && process.domain._errorHandler)\n        caught = process.domain._errorHandler(er) || caught;\n\n      if (!caught)\n        caught = process.emit('uncaughtException', er);\n\n      // If someone handled it, then great.  otherwise, die in C++ land\n      // since that means that we'll exit the process, emit the 'exit' event\n      if (!caught) {\n        try {\n          if (!process._exiting) {\n            process._exiting = true;\n            process.emit('exit', 1);\n          }\n        } catch (er) {\n          // nothing to be done about it at this point.\n        }\n\n      // if we handled an error, then make sure any ticks get processed\n      } else {\n        NativeModule.require('timers').setImmediate(process._tickCallback);\n      }\n\n      return caught;\n    }"),
 170. (Types.Instrumented "function _getActiveHandles() { [native code] }"),
 171. (Types.Instrumented "function _getActiveRequests() { [native code] }"),
 172. (Types.Instrumented "function _kill() { [native code] }"),
 173. (Types.Instrumented "function _linkedBinding() { [native code] }"),
 174. (Types.Instrumented
         "function () {\n      rawDebug(format.apply(null, arguments));\n    }"),
 175. (Types.Instrumented "function _setupDomainUse() { [native code] }"),
 176. (Types.Instrumented
         "function _startProfilerIdleNotifier() { [native code] }"),
 177. (Types.Instrumented
         "function _stopProfilerIdleNotifier() { [native code] }"),
 178. (Types.Instrumented
         "function _tickCallback() {\n      var callback, args, tock;\n\n      do {\n        while (tickInfo[kIndex] < tickInfo[kLength]) {\n          tock = nextTickQueue[tickInfo[kIndex]++];\n          callback = tock.callback;\n          args = tock.args;\n          // Using separate callback execution functions helps to limit the\n          // scope of DEOPTs caused by using try blocks and allows direct\n          // callback invocation with small numbers of arguments to avoid the\n          // performance hit associated with using `fn.apply()`\n          if (args === undefined) {\n            nextTickCallbackWith0Args(callback);\n          } else {\n            switch (args.length) {\n              case 1:\n                nextTickCallbackWith1Arg(callback, args[0]);\n                break;\n              case 2:\n                nextTickCallbackWith2Args(callback, args[0], args[1]);\n                break;\n              case 3:\n                nextTickCallbackWith3Args(callback, args[0], args[1], args[2]);\n                break;\n              default:\n                nextTickCallbackWithManyArgs(callback, args);\n            }\n          }\n          if (1e4 < tickInfo[kIndex])\n            tickDone();\n        }\n        tickDone();\n        _runMicrotasks();\n        emitPendingUnhandledRejections();\n      } while (tickInfo[kLength] !== 0);\n    }"),
 179. (Types.Instrumented
         "function _tickDomainCallback() {\n      var callback, domain, args, tock;\n\n      do {\n        while (tickInfo[kIndex] < tickInfo[kLength]) {\n          tock = nextTickQueue[tickInfo[kIndex]++];\n          callback = tock.callback;\n          domain = tock.domain;\n          args = tock.args;\n          if (domain)\n            domain.enter();\n          // Using separate callback execution functions helps to limit the\n          // scope of DEOPTs caused by using try blocks and allows direct\n          // callback invocation with small numbers of arguments to avoid the\n          // performance hit associated with using `fn.apply()`\n          if (args === undefined) {\n            nextTickCallbackWith0Args(callback);\n          } else {\n            switch (args.length) {\n              case 1:\n                nextTickCallbackWith1Arg(callback, args[0]);\n                break;\n              case 2:\n                nextTickCallbackWith2Args(callback, args[0], args[1]);\n                break;\n              case 3:\n                nextTickCallbackWith3Args(callback, args[0], args[1], args[2]);\n                break;\n              default:\n                nextTickCallbackWithManyArgs(callback, args);\n            }\n          }\n          if (1e4 < tickInfo[kIndex])\n            tickDone();\n          if (domain)\n            domain.exit();\n        }\n        tickDone();\n        _runMicrotasks();\n        emitPendingUnhandledRejections();\n      } while (tickInfo[kLength] !== 0);\n    }"),
 180. (Types.Instrumented "function abort() { [native code] }"),
 181. (Types.Instrumented
         "function (x, msg) {\n      if (!x) throw new Error(msg || 'assertion error');\n    }"),
 182. (Types.Instrumented "function binding() { [native code] }"),
 183. (Types.Instrumented "function chdir() { [native code] }"),
 184. (Types.Instrumented "function cwd() { [native code] }"),
 185. (Types.Instrumented "function dlopen() { [native code] }"),
 186. (Types.Instrumented
         "function (code) {\n      if (code || code === 0)\n        process.exitCode = code;\n\n      if (!process._exiting) {\n        process._exiting = true;\n        process.emit('exit', process.exitCode || 0);\n      }\n      process.reallyExit(process.exitCode || 0);\n    }"),
 187. (Types.Instrumented "function getegid() { [native code] }"),
 188. (Types.Instrumented "function geteuid() { [native code] }"),
 189. (Types.Instrumented "function getgid() { [native code] }"),
 190. (Types.Instrumented "function getgroups() { [native code] }"),
 191. (Types.Instrumented "function getuid() { [native code] }"),
 192. (Types.Instrumented "function hrtime() { [native code] }"),
 193. (Types.Instrumented "function initgroups() { [native code] }"),
 194. (Types.Instrumented
         "function (pid, sig) {\n      var err;\n\n      if (pid != (pid | 0)) {\n        throw new TypeError('invalid pid');\n      }\n\n      // preserve null signal\n      if (0 === sig) {\n        err = process._kill(pid, 0);\n      } else {\n        sig = sig || 'SIGTERM';\n        if (startup.lazyConstants()[sig] &&\n            sig.slice(0, 3) === 'SIG') {\n          err = process._kill(pid, startup.lazyConstants()[sig]);\n        } else {\n          throw new Error('Unknown signal: ' + sig);\n        }\n      }\n\n      if (err) {\n        var errnoException = NativeModule.require('util')._errnoException;\n        throw errnoException(err, 'kill');\n      }\n\n      return true;\n    }"),
 195. (Types.Instrumented "function memoryUsage() { [native code] }"),
 196. (Types.Instrumented
         "function nextTick(callback) {\n      // on the way out, don't bother. it won't get fired anyway.\n      if (process._exiting)\n        return;\n\n      var args;\n      if (arguments.length > 1) {\n        args = [];\n        for (var i = 1; i < arguments.length; i++)\n          args.push(arguments[i]);\n      }\n\n      nextTickQueue.push(new TickObject(callback, args));\n      tickInfo[kLength]++;\n    }"),
 197. (Types.Instrumented
         "function () {\n      process.stdin.resume();\n      return process.stdin;\n    }"),
 198. (Types.Instrumented "function reallyExit() { [native code] }"),
 199. (Types.Instrumented "function setegid() { [native code] }"),
 200. (Types.Instrumented "function seteuid() { [native code] }"),
 201. (Types.Instrumented "function setgid() { [native code] }"),
 202. (Types.Instrumented "function setgroups() { [native code] }"),
 203. (Types.Instrumented "function setuid() { [native code] }"),
 204. (Types.Instrumented
         "function () {\n      if (stderr) return stderr;\n      stderr = createWritableStdioStream(2);\n      stderr.destroy = stderr.destroySoon = function(er) {\n        er = er || new Error('process.stderr cannot be closed.');\n        stderr.emit('error', er);\n      };\n      if (stderr.isTTY) {\n        process.on('SIGWINCH', function() {\n          stderr._refreshSize();\n        });\n      }\n      return stderr;\n    }"),
 205. (Types.Instrumented
         "function () {\n      if (stdin) return stdin;\n\n      var tty_wrap = process.binding('tty_wrap');\n      var fd = 0;\n\n      switch (tty_wrap.guessHandleType(fd)) {\n        case 'TTY':\n          var tty = NativeModule.require('tty');\n          stdin = new tty.ReadStream(fd, {\n            highWaterMark: 0,\n            readable: true,\n            writable: false\n          });\n          break;\n\n        case 'FILE':\n          var fs = NativeModule.require('fs');\n          stdin = new fs.ReadStream(null, { fd: fd, autoClose: false });\n          break;\n\n        case 'PIPE':\n        case 'TCP':\n          var net = NativeModule.require('net');\n\n          // It could be that process has been started with an IPC channel\n          // sitting on fd=0, in such case the pipe for this fd is already\n          // present and creating a new one will lead to the assertion failure\n          // in libuv.\n          if (process._channel && process._channel.fd === fd) {\n            stdin = new net.Socket({\n              handle: process._channel,\n              readable: true,\n              writable: false\n            });\n          } else {\n            stdin = new net.Socket({\n              fd: fd,\n              readable: true,\n              writable: false\n            });\n          }\n          // Make sure the stdin can't be `.end()`-ed\n          stdin._writableState.ended = true;\n          break;\n\n        default:\n          // Probably an error on in uv_guess_handle()\n          throw new Error('Implement me. Unknown stdin file type!');\n      }\n\n      // For supporting legacy API we put the FD here.\n      stdin.fd = fd;\n\n      // stdin starts out life in a paused state, but node doesn't\n      // know yet.  Explicitly to readStop() it to put it in the\n      // not-reading state.\n      if (stdin._handle && stdin._handle.readStop) {\n        stdin._handle.reading = false;\n        stdin._readableState.reading = false;\n        stdin._handle.readStop();\n      }\n\n      // if the user calls stdin.pause(), then we need to stop reading\n      // immediately, so that the process can close down.\n      stdin.on('pause', function() {\n        if (!stdin._handle)\n          return;\n        stdin._readableState.reading = false;\n        stdin._handle.reading = false;\n        stdin._handle.readStop();\n      });\n\n      return stdin;\n    }"),
 206. (Types.Instrumented
         "function () {\n      if (stdout) return stdout;\n      stdout = createWritableStdioStream(1);\n      stdout.destroy = stdout.destroySoon = function(er) {\n        er = er || new Error('process.stdout cannot be closed.');\n        stdout.emit('error', er);\n      };\n      if (stdout.isTTY) {\n        process.on('SIGWINCH', function() {\n          stdout._refreshSize();\n        });\n      }\n      return stdout;\n    }"),
 207. (Types.Instrumented "function umask() { [native code] }"),
 208. (Types.Instrumented "function uptime() { [native code] }"),
 209. (Types.Instrumented "function concat() { [native code] }"),
 210. (Types.Instrumented "function copyWithin() { [native code] }"),
 211. (Types.Instrumented "function entries() { [native code] }"),
 212. (Types.Instrumented "function every() { [native code] }"),
 213. (Types.Instrumented "function fill() { [native code] }"),
 214. (Types.Instrumented "function filter() { [native code] }"),
 215. (Types.Instrumented "function find() { [native code] }"),
 216. (Types.Instrumented "function findIndex() { [native code] }"),
 217. (Types.Instrumented "function forEach() { [native code] }"),
 218. (Types.Instrumented "function indexOf() { [native code] }"),
 219. (Types.Instrumented "function join() { [native code] }"),
 220. (Types.Instrumented "function keys() { [native code] }"),
 221. (Types.Instrumented "function lastIndexOf() { [native code] }"),
 222. (Types.Instrumented "function map() { [native code] }"),
 223. (Types.Instrumented "function pop() { [native code] }"),
 224. (Types.Instrumented "function push() { [native code] }"),
 225. (Types.Instrumented "function reduce() { [native code] }"),
 226. (Types.Instrumented "function reduceRight() { [native code] }"),
 227. (Types.Instrumented "function reverse() { [native code] }"),
 228. (Types.Instrumented "function shift() { [native code] }"),
 229. (Types.Instrumented "function slice() { [native code] }"),
 230. (Types.Instrumented "function some() { [native code] }"),
 231. (Types.Instrumented "function sort() { [native code] }"),
 232. (Types.Instrumented "function splice() { [native code] }"),
 233. (Types.Instrumented "function toLocaleString() { [native code] }"),
 234. (Types.Instrumented "function toString() { [native code] }"),
 235. (Types.Instrumented "function unshift() { [native code] }"),
 236. (Types.Instrumented "function get byteLength() { [native code] }"),
 237. (Types.Instrumented "function slice() { [native code] }"),
 238. (Types.Instrumented "function toString() { [native code] }"),
 239. (Types.Instrumented "function valueOf() { [native code] }"),
 240. (Types.Instrumented "function asciiSlice() { [native code] }"),
 241. (Types.Instrumented "function asciiWrite() { [native code] }"),
 242. (Types.Instrumented "function base64Slice() { [native code] }"),
 243. (Types.Instrumented "function base64Write() { [native code] }"),
 244. (Types.Instrumented "function binarySlice() { [native code] }"),
 245. (Types.Instrumented "function binaryWrite() { [native code] }"),
 246. (Types.Instrumented
         "function compare(b) {\n  if (!(b instanceof Buffer))\n    throw new TypeError('Argument must be a Buffer');\n\n  if (this === b)\n    return 0;\n\n  return binding.compare(this, b);\n}"),
 247. (Types.Instrumented "function copy() { [native code] }"),
 248. (Types.Instrumented
         "function equals(b) {\n  if (!(b instanceof Buffer))\n    throw new TypeError('Argument must be a Buffer');\n\n  if (this === b)\n    return true;\n\n  return binding.compare(this, b) === 0;\n}"),
 249. (Types.Instrumented
         "function fill(val, start, end) {\n  start = start >> 0;\n  end = (end === undefined) ? this.length : end >> 0;\n\n  if (start < 0 || end > this.length)\n    throw new RangeError('out of range index');\n  if (end <= start)\n    return this;\n\n  if (typeof val !== 'string') {\n    val = val >>> 0;\n  } else if (val.length === 1) {\n    var code = val.charCodeAt(0);\n    if (code < 256)\n      val = code;\n  }\n\n  binding.fill(this, val, start, end);\n\n  return this;\n}"),
 250. (Types.Instrumented
         "function deprecated() {\n    warned = exports._printDeprecationMessage(msg, warned);\n    return fn.apply(this, arguments);\n  }"),
 251. (Types.Instrumented "function hexSlice() { [native code] }"),
 252. (Types.Instrumented "function hexWrite() { [native code] }"),
 253. (Types.Instrumented
         "function indexOf(val, byteOffset, encoding) {\n  if (byteOffset > 0x7fffffff)\n    byteOffset = 0x7fffffff;\n  else if (byteOffset < -0x80000000)\n    byteOffset = -0x80000000;\n  byteOffset >>= 0;\n\n  if (typeof val === 'string') {\n    if (encoding === undefined) {\n      return binding.indexOfString(this, val, byteOffset, encoding);\n    }\n    return slowIndexOf(this, val, byteOffset, encoding);\n  } else if (val instanceof Buffer) {\n    return binding.indexOfBuffer(this, val, byteOffset, encoding);\n  } else if (typeof val === 'number') {\n    return binding.indexOfNumber(this, val, byteOffset);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}"),
 254. (Types.Instrumented
         "function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max)\n      str += ' ... ';\n  }\n  return '<' + this.constructor.name + ' ' + str + '>';\n}"),
 255. (Types.Instrumented
         "function () {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }"),
 256. (Types.Instrumented
         "function () {\n    if (!(this instanceof Buffer))\n      return undefined;\n    if (this.byteLength === 0 ||\n        this.byteLength === this.buffer.byteLength) {\n      return undefined;\n    }\n    return this.buffer;\n  }"),
 257. (Types.Instrumented
         "function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 8, this.length);\n  return binding.readDoubleBE(this, offset);\n}"),
 258. (Types.Instrumented
         "function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 8, this.length);\n  return binding.readDoubleLE(this, offset);\n}"),
 259. (Types.Instrumented
         "function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n  return binding.readFloatBE(this, offset);\n}"),
 260. (Types.Instrumented
         "function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n  return binding.readFloatLE(this, offset);\n}"),
 261. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val;\n}"),
 262. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val;\n}"),
 263. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3]);\n}"),
 264. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24);\n}"),
 265. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 1, this.length);\n  var val = this[offset];\n  return !(val & 0x80) ? val : (0xff - val + 1) * -1;\n}"),
 266. (Types.Instrumented
         "function (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100))\n    val += this[offset + --i] * mul;\n  mul *= 0x80;\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n}"),
 267. (Types.Instrumented
         "function (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul;\n  mul *= 0x80;\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n}"),
 268. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1];\n}"),
 269. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8);\n}"),
 270. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3]);\n}"),
 271. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000);\n}"),
 272. (Types.Instrumented
         "function (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkOffset(offset, 1, this.length);\n  return this[offset];\n}"),
 273. (Types.Instrumented
         "function (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100))\n    val += this[offset + --byteLength] * mul;\n\n  return val;\n}"),
 274. (Types.Instrumented
         "function (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul;\n\n  return val;\n}"),
 275. (Types.Instrumented
         "function deprecated() {\n    warned = exports._printDeprecationMessage(msg, warned);\n    return fn.apply(this, arguments);\n  }"),
 276. (Types.Instrumented
         "function slice(start, end) {\n  const buffer = this.subarray(start, end);\n  Object.setPrototypeOf(buffer, Buffer.prototype);\n  return buffer;\n}"),
 277. (Types.Instrumented
         "function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this, 0)\n  };\n}"),
 278. (Types.Instrumented
         "function () {\n  if (arguments.length === 0) {\n    var result = this.utf8Slice(0, this.length);\n  } else {\n    var result = slowToString.apply(this, arguments);\n  }\n  if (result === undefined)\n    throw new Error('toString failed');\n  return result;\n}"),
 279. (Types.Instrumented "function ucs2Slice() { [native code] }"),
 280. (Types.Instrumented "function ucs2Write() { [native code] }"),
 281. (Types.Instrumented "function utf8Slice() { [native code] }"),
 282. (Types.Instrumented "function utf8Write() { [native code] }"),
 283. (Types.Instrumented
         "function (string, offset, length, encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined)\n        encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n\n  // XXX legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    writeWarned = internalUtil.printDeprecationMessage(writeMsg, writeWarned);\n    var swap = encoding;\n    encoding = offset;\n    offset = length >>> 0;\n    length = swap;\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining)\n    length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0))\n    throw new RangeError('attempt to write outside buffer bounds');\n\n  if (!encoding)\n    encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return this.hexWrite(string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return this.utf8Write(string, offset, length);\n\n      case 'ascii':\n        return this.asciiWrite(string, offset, length);\n\n      case 'binary':\n        return this.binaryWrite(string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return this.base64Write(string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return this.ucs2Write(string, offset, length);\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}"),
 284. (Types.Instrumented
         "function writeDoubleBE(val, offset, noAssert) {\n  val = +val;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkFloat(this, val, offset, 8);\n  binding.writeDoubleBE(this, val, offset);\n  return offset + 8;\n}"),
 285. (Types.Instrumented
         "function writeDoubleLE(val, offset, noAssert) {\n  val = +val;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkFloat(this, val, offset, 8);\n  binding.writeDoubleLE(this, val, offset);\n  return offset + 8;\n}"),
 286. (Types.Instrumented
         "function writeFloatBE(val, offset, noAssert) {\n  val = +val;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkFloat(this, val, offset, 4);\n  binding.writeFloatBE(this, val, offset);\n  return offset + 4;\n}"),
 287. (Types.Instrumented
         "function writeFloatLE(val, offset, noAssert) {\n  val = +val;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkFloat(this, val, offset, 4);\n  binding.writeFloatLE(this, val, offset);\n  return offset + 4;\n}"),
 288. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = value;\n  return offset + 2;\n}"),
 289. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value;\n  this[offset + 1] = (value >>> 8);\n  return offset + 2;\n}"),
 290. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = value;\n  return offset + 4;\n}"),
 291. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value;\n  this[offset + 1] = (value >>> 8);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 3] = (value >>> 24);\n  return offset + 4;\n}"),
 292. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80);\n  this[offset] = value;\n  return offset + 1;\n}"),
 293. (Types.Instrumented
         "function (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1));\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0)\n      sub = 1;\n    this[offset + i] = ((value / mul) >> 0) - sub;\n  }\n\n  return offset + byteLength;\n}"),
 294. (Types.Instrumented
         "function (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1));\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0)\n      sub = 1;\n    this[offset + i] = ((value / mul) >> 0) - sub;\n  }\n\n  return offset + byteLength;\n}"),
 295. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = value;\n  return offset + 2;\n}"),
 296. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value;\n  this[offset + 1] = (value >>> 8);\n  return offset + 2;\n}"),
 297. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = value;\n  return offset + 4;\n}"),
 298. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = (value >>> 24);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 1] = (value >>> 8);\n  this[offset] = value;\n  return offset + 4;\n}"),
 299. (Types.Instrumented
         "function (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value;\n  return offset + 1;\n}"),
 300. (Types.Instrumented
         "function (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value;\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0;\n\n  return offset + byteLength;\n}"),
 301. (Types.Instrumented
         "function (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value;\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0;\n\n  return offset + byteLength;\n}"),
 302. (Types.Instrumented "function get buffer() { [native code] }"),
 303. (Types.Instrumented "function get byteLength() { [native code] }"),
 304. (Types.Instrumented "function get byteOffset() { [native code] }"),
 305. (Types.Instrumented "function getFloat32() { [native code] }"),
 306. (Types.Instrumented "function getFloat64() { [native code] }"),
 307. (Types.Instrumented "function getInt16() { [native code] }"),
 308. (Types.Instrumented "function getInt32() { [native code] }"),
 309. (Types.Instrumented "function getInt8() { [native code] }"),
 310. (Types.Instrumented "function getUint16() { [native code] }"),
 311. (Types.Instrumented "function getUint32() { [native code] }"),
 312. (Types.Instrumented "function getUint8() { [native code] }"),
 313. (Types.Instrumented "function setFloat32() { [native code] }"),
 314. (Types.Instrumented "function setFloat64() { [native code] }"),
 315. (Types.Instrumented "function setInt16() { [native code] }"),
 316. (Types.Instrumented "function setInt32() { [native code] }"),
 317. (Types.Instrumented "function setInt8() { [native code] }"),
 318. (Types.Instrumented "function setUint16() { [native code] }"),
 319. (Types.Instrumented "function setUint32() { [native code] }"),
 320. (Types.Instrumented "function setUint8() { [native code] }"),
 321. (Types.Instrumented "function getDate() { [native code] }"),
 322. (Types.Instrumented "function getDay() { [native code] }"),
 323. (Types.Instrumented "function getFullYear() { [native code] }"),
 324. (Types.Instrumented "function getHours() { [native code] }"),
 325. (Types.Instrumented "function getMilliseconds() { [native code] }"),
 326. (Types.Instrumented "function getMinutes() { [native code] }"),
 327. (Types.Instrumented "function getMonth() { [native code] }"),
 328. (Types.Instrumented "function getSeconds() { [native code] }"),
 329. (Types.Instrumented "function getTime() { [native code] }"),
 330. (Types.Instrumented "function getTimezoneOffset() { [native code] }"),
 331. (Types.Instrumented "function getUTCDate() { [native code] }"),
 332. (Types.Instrumented "function getUTCDay() { [native code] }"),
 333. (Types.Instrumented "function getUTCFullYear() { [native code] }"),
 334. (Types.Instrumented "function getUTCHours() { [native code] }"),
 335. (Types.Instrumented "function getUTCMilliseconds() { [native code] }"),
 336. (Types.Instrumented "function getUTCMinutes() { [native code] }"),
 337. (Types.Instrumented "function getUTCMonth() { [native code] }"),
 338. (Types.Instrumented "function getUTCSeconds() { [native code] }"),
 339. (Types.Instrumented "function getYear() { [native code] }"),
 340. (Types.Instrumented "function setDate() { [native code] }"),
 341. (Types.Instrumented "function setFullYear() { [native code] }"),
 342. (Types.Instrumented "function setHours() { [native code] }"),
 343. (Types.Instrumented "function setMilliseconds() { [native code] }"),
 344. (Types.Instrumented "function setMinutes() { [native code] }"),
 345. (Types.Instrumented "function setMonth() { [native code] }"),
 346. (Types.Instrumented "function setSeconds() { [native code] }"),
 347. (Types.Instrumented "function setTime() { [native code] }"),
 348. (Types.Instrumented "function setUTCDate() { [native code] }"),
 349. (Types.Instrumented "function setUTCFullYear() { [native code] }"),
 350. (Types.Instrumented "function setUTCHours() { [native code] }"),
 351. (Types.Instrumented "function setUTCMilliseconds() { [native code] }"),
 352. (Types.Instrumented "function setUTCMinutes() { [native code] }"),
 353. (Types.Instrumented "function setUTCMonth() { [native code] }"),
 354. (Types.Instrumented "function setUTCSeconds() { [native code] }"),
 355. (Types.Instrumented "function setYear() { [native code] }"),
 356. (Types.Instrumented "function toDateString() { [native code] }"),
 357. (Types.Instrumented "function toGMTString() { [native code] }"),
 358. (Types.Instrumented "function toISOString() { [native code] }"),
 359. (Types.Instrumented "function toJSON() { [native code] }"),
 360. (Types.Instrumented "function toLocaleDateString() { [native code] }"),
 361. (Types.Instrumented "function toLocaleString() { [native code] }"),
 362. (Types.Instrumented "function toLocaleTimeString() { [native code] }"),
 363. (Types.Instrumented "function toString() { [native code] }"),
 364. (Types.Instrumented "function toTimeString() { [native code] }"),
 365. (Types.Instrumented "function toUTCString() { [native code] }"),
 366. (Types.Instrumented "function valueOf() { [native code] }"),
 367. (Types.Instrumented "function toString() { [native code] }"),
 368. (Types.Instrumented "function get buffer() { [native code] }"),
 369. (Types.Instrumented "function get byteLength() { [native code] }"),
 370. (Types.Instrumented "function get byteOffset() { [native code] }"),
 371. (Types.Instrumented "function copyWithin() { [native code] }"),
 372. (Types.Instrumented "function every() { [native code] }"),
 373. (Types.Instrumented "function fill() { [native code] }"),
 374. (Types.Instrumented "function filter() { [native code] }"),
 375. (Types.Instrumented "function find() { [native code] }"),
 376. (Types.Instrumented "function findIndex() { [native code] }"),
 377. (Types.Instrumented "function forEach() { [native code] }"),
 378. (Types.Instrumented "function indexOf() { [native code] }"),
 379. (Types.Instrumented "function join() { [native code] }"),
 380. (Types.Instrumented "function lastIndexOf() { [native code] }"),
 381. (Types.Instrumented "function get length() { [native code] }"),
 382. (Types.Instrumented "function map() { [native code] }"),
 383. (Types.Instrumented "function reduce() { [native code] }"),
 384. (Types.Instrumented "function reduceRight() { [native code] }"),
 385. (Types.Instrumented "function reverse() { [native code] }"),
 386. (Types.Instrumented "function set() { [native code] }"),
 387. (Types.Instrumented "function slice() { [native code] }"),
 388. (Types.Instrumented "function some() { [native code] }"),
 389. (Types.Instrumented "function sort() { [native code] }"),
 390. (Types.Instrumented "function subarray() { [native code] }"),
 391. (Types.Instrumented "function toLocaleString() { [native code] }"),
 392. (Types.Instrumented "function toString() { [native code] }"),
 393. (Types.Instrumented "function ArrayValues() { [native code] }"),
 394. (Types.Instrumented "function get buffer() { [native code] }"),
 395. (Types.Instrumented "function get byteLength() { [native code] }"),
 396. (Types.Instrumented "function get byteOffset() { [native code] }"),
 397. (Types.Instrumented "function get length() { [native code] }"),
 398. (Types.Instrumented "function subarray() { [native code] }"),
 399. (Types.Instrumented "function apply() { [native code] }"),
 400. (Types.Instrumented "function bind() { [native code] }"),
 401. (Types.Instrumented "function call() { [native code] }"),
 402. (Types.Instrumented "function toString() { [native code] }"),
 403. (Types.Instrumented "function get buffer() { [native code] }"),
 404. (Types.Instrumented "function get byteLength() { [native code] }"),
 405. (Types.Instrumented "function get byteOffset() { [native code] }"),
 406. (Types.Instrumented "function get length() { [native code] }"),
 407. (Types.Instrumented "function subarray() { [native code] }"),
 408. (Types.Instrumented "function get buffer() { [native code] }"),
 409. (Types.Instrumented "function get byteLength() { [native code] }"),
 410. (Types.Instrumented "function get byteOffset() { [native code] }"),
 411. (Types.Instrumented "function get length() { [native code] }"),
 412. (Types.Instrumented "function subarray() { [native code] }"),
 413. (Types.Instrumented "function get buffer() { [native code] }"),
 414. (Types.Instrumented "function get byteLength() { [native code] }"),
 415. (Types.Instrumented "function get byteOffset() { [native code] }"),
 416. (Types.Instrumented "function get length() { [native code] }"),
 417. (Types.Instrumented "function subarray() { [native code] }"),
 418. (Types.Instrumented "function supportedLocalesOf() { [native code] }"),
 419. (Types.Instrumented "function supportedLocalesOf() { [native code] }"),
 420. (Types.Instrumented "function supportedLocalesOf() { [native code] }"),
 421. (Types.Instrumented "function supportedLocalesOf() { [native code] }"),
 422. (Types.Instrumented "function clear() { [native code] }"),
 423. (Types.Instrumented "function delete() { [native code] }"),
 424. (Types.Instrumented "function entries() { [native code] }"),
 425. (Types.Instrumented "function forEach() { [native code] }"),
 426. (Types.Instrumented "function get() { [native code] }"),
 427. (Types.Instrumented "function has() { [native code] }"),
 428. (Types.Instrumented "function keys() { [native code] }"),
 429. (Types.Instrumented "function set() { [native code] }"),
 430. (Types.Instrumented "function get size() { [native code] }"),
 431. (Types.Instrumented "function values() { [native code] }"),
 432. (Types.Instrumented "function toExponential() { [native code] }"),
 433. (Types.Instrumented "function toFixed() { [native code] }"),
 434. (Types.Instrumented "function toLocaleString() { [native code] }"),
 435. (Types.Instrumented "function toPrecision() { [native code] }"),
 436. (Types.Instrumented "function toString() { [native code] }"),
 437. (Types.Instrumented "function valueOf() { [native code] }"),
 438. (Types.Instrumented "function __defineGetter__() { [native code] }"),
 439. (Types.Instrumented "function __defineSetter__() { [native code] }"),
 440. (Types.Instrumented "function __lookupGetter__() { [native code] }"),
 441. (Types.Instrumented "function __lookupSetter__() { [native code] }"),
 442. (Types.Instrumented "function get __proto__() { [native code] }"),
 443. (Types.Instrumented "function set __proto__() { [native code] }"),
 444. (Types.Instrumented "function hasOwnProperty() { [native code] }"),
 445. (Types.Instrumented "function isPrototypeOf() { [native code] }"),
 446. (Types.Instrumented "function propertyIsEnumerable() { [native code] }"),
 447. (Types.Instrumented "function toLocaleString() { [native code] }"),
 448. (Types.Instrumented "function toString() { [native code] }"),
 449. (Types.Instrumented "function valueOf() { [native code] }"),
 450. (Types.Instrumented "function catch() { [native code] }"),
 451. (Types.Instrumented "function chain() { [native code] }"),
 452. (Types.Instrumented "function then() { [native code] }"),
 453. (Types.Instrumented "function compile() { [native code] }"),
 454. (Types.Instrumented "function exec() { [native code] }"),
 455. (Types.Instrumented "function test() { [native code] }"),
 456. (Types.Instrumented "function toString() { [native code] }"),
 457. (Types.Instrumented "function add() { [native code] }"),
 458. (Types.Instrumented "function clear() { [native code] }"),
 459. (Types.Instrumented "function delete() { [native code] }"),
 460. (Types.Instrumented "function entries() { [native code] }"),
 461. (Types.Instrumented "function forEach() { [native code] }"),
 462. (Types.Instrumented "function has() { [native code] }"),
 463. (Types.Instrumented "function values() { [native code] }"),
 464. (Types.Instrumented "function get size() { [native code] }"),
 465. (Types.Instrumented "function anchor() { [native code] }"),
 466. (Types.Instrumented "function big() { [native code] }"),
 467. (Types.Instrumented "function blink() { [native code] }"),
 468. (Types.Instrumented "function bold() { [native code] }"),
 469. (Types.Instrumented "function charAt() { [native code] }"),
 470. (Types.Instrumented "function charCodeAt() { [native code] }"),
 471. (Types.Instrumented "function codePointAt() { [native code] }"),
 472. (Types.Instrumented "function concat() { [native code] }"),
 473. (Types.Instrumented "function endsWith() { [native code] }"),
 474. (Types.Instrumented "function fixed() { [native code] }"),
 475. (Types.Instrumented "function fontcolor() { [native code] }"),
 476. (Types.Instrumented "function fontsize() { [native code] }"),
 477. (Types.Instrumented "function includes() { [native code] }"),
 478. (Types.Instrumented "function indexOf() { [native code] }"),
 479. (Types.Instrumented "function italics() { [native code] }"),
 480. (Types.Instrumented "function lastIndexOf() { [native code] }"),
 481. (Types.Instrumented "function link() { [native code] }"),
 482. (Types.Instrumented "function localeCompare() { [native code] }"),
 483. (Types.Instrumented "function match() { [native code] }"),
 484. (Types.Instrumented "function normalize() { [native code] }"),
 485. (Types.Instrumented "function repeat() { [native code] }"),
 486. (Types.Instrumented "function replace() { [native code] }"),
 487. (Types.Instrumented "function search() { [native code] }"),
 488. (Types.Instrumented "function slice() { [native code] }"),
 489. (Types.Instrumented "function small() { [native code] }"),
 490. (Types.Instrumented "function split() { [native code] }"),
 491. (Types.Instrumented "function startsWith() { [native code] }"),
 492. (Types.Instrumented "function strike() { [native code] }"),
 493. (Types.Instrumented "function sub() { [native code] }"),
 494. (Types.Instrumented "function substr() { [native code] }"),
 495. (Types.Instrumented "function substring() { [native code] }"),
 496. (Types.Instrumented "function sup() { [native code] }"),
 497. (Types.Instrumented "function toLocaleLowerCase() { [native code] }"),
 498. (Types.Instrumented "function toLocaleUpperCase() { [native code] }"),
 499. (Types.Instrumented "function toLowerCase() { [native code] }"),
 500. (Types.Instrumented "function toString() { [native code] }"),
 501. (Types.Instrumented "function toUpperCase() { [native code] }"),
 502. (Types.Instrumented "function trim() { [native code] }"),
 503. (Types.Instrumented "function trimLeft() { [native code] }"),
 504. (Types.Instrumented "function trimRight() { [native code] }"),
 505. (Types.Instrumented "function valueOf() { [native code] }"),
 506. (Types.Instrumented "function toString() { [native code] }"),
 507. (Types.Instrumented "function valueOf() { [native code] }"),
 508. (Types.Instrumented "function get buffer() { [native code] }"),
 509. (Types.Instrumented "function get byteLength() { [native code] }"),
 510. (Types.Instrumented "function get byteOffset() { [native code] }"),
 511. (Types.Instrumented "function get length() { [native code] }"),
 512. (Types.Instrumented "function subarray() { [native code] }"),
 513. (Types.Instrumented "function get buffer() { [native code] }"),
 514. (Types.Instrumented "function get byteLength() { [native code] }"),
 515. (Types.Instrumented "function get byteOffset() { [native code] }"),
 516. (Types.Instrumented "function get length() { [native code] }"),
 517. (Types.Instrumented "function subarray() { [native code] }"),
 518. (Types.Instrumented "function get buffer() { [native code] }"),
 519. (Types.Instrumented "function get byteLength() { [native code] }"),
 520. (Types.Instrumented "function get byteOffset() { [native code] }"),
 521. (Types.Instrumented "function get length() { [native code] }"),
 522. (Types.Instrumented "function subarray() { [native code] }"),
 523. (Types.Instrumented "function get buffer() { [native code] }"),
 524. (Types.Instrumented "function get byteLength() { [native code] }"),
 525. (Types.Instrumented "function get byteOffset() { [native code] }"),
 526. (Types.Instrumented "function get length() { [native code] }"),
 527. (Types.Instrumented "function subarray() { [native code] }"),
 528. (Types.Instrumented "function delete() { [native code] }"),
 529. (Types.Instrumented "function get() { [native code] }"),
 530. (Types.Instrumented "function has() { [native code] }"),
 531. (Types.Instrumented "function set() { [native code] }"),
 532. (Types.Instrumented "function add() { [native code] }"),
 533. (Types.Instrumented "function delete() { [native code] }"),
 534. (Types.Instrumented "function has() { [native code] }"),
 535. (Types.Instrumented
         "function () {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    domain = domain || require('domain');\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = {};\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}"),
 536. (Types.Instrumented
         "function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n}"),
 537. (Types.Instrumented
         "function () {\n          stderr._refreshSize();\n        }"),
 538. (Types.Instrumented
         "function (type, listener) {\n      if (isSignal(type) &&\n          !signalWraps.hasOwnProperty(type)) {\n        var Signal = process.binding('signal_wrap').Signal;\n        var wrap = new Signal();\n\n        wrap.unref();\n\n        wrap.onsignal = function() { process.emit(type); };\n\n        var signum = startup.lazyConstants()[type];\n        var err = wrap.start(signum);\n        if (err) {\n          wrap.close();\n          var errnoException = NativeModule.require('util')._errnoException;\n          throw errnoException(err, 'uv_signal_start');\n        }\n\n        signalWraps[type] = wrap;\n      }\n    }"),
 539. (Types.Instrumented
         "function (type, listener) {\n      if (signalWraps.hasOwnProperty(type) && this.listenerCount(type) === 0) {\n        signalWraps[type].close();\n        delete signalWraps[type];\n      }\n    }"),
 540. (Types.Instrumented "function breakType() { [native code] }"),
 541. (Types.Instrumented "function resolvedOptions() { [native code] }"),
 542. (Types.Instrumented "function breakType() { [native code] }"),
 543. (Types.Instrumented "function resolvedOptions() { [native code] }"),
 544. (Types.Instrumented "function breakType() { [native code] }"),
 545. (Types.Instrumented "function breakType() { [native code] }"),
 546. (Types.Instrumented "function resolvedOptions() { [native code] }"),
 547. (Types.Instrumented "function breakType() { [native code] }"),
 548. (Types.Instrumented "function breakType() { [native code] }"),
 549. (Types.Instrumented "function breakType() { [native code] }"),
 550. (Types.Instrumented "function breakType() { [native code] }"),
 551. (Types.Instrumented "function breakType() { [native code] }"),
 552. (Types.Instrumented "function breakType() { [native code] }"),
 553. (Types.Instrumented "function resolvedOptions() { [native code] }"),
 554. (Types.Instrumented
         "function addListener(type, listener) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('listener must be a function');\n\n  events = this._events;\n  if (!events) {\n    events = this._events = {};\n    this._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      this.emit('newListener', type,\n                listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = this._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++this._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(this);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        console.error('(node) warning: possible EventEmitter memory ' +\n                      'leak detected. %d %s listeners added. ' +\n                      'Use emitter.setMaxListeners() to increase limit.',\n                      existing.length, type);\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n}"),
 555. (Types.Instrumented
         "function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event.');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  if (domain && this !== process) {\n    domain.enter();\n    needDomainExit = true;\n  }\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n}"),
 556. (Types.Instrumented
         "function getMaxListeners() {\n  return $getMaxListeners(this);\n}"),
 557. (Types.Instrumented
         "function listenerCount(type) {\n  const events = this._events;\n\n  if (events) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}"),
 558. (Types.Instrumented
         "function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener];\n    else\n      ret = arrayClone(evlistener, evlistener.length);\n  }\n\n  return ret;\n}"),
 559. (Types.Instrumented
         "function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n}"),
 560. (Types.Instrumented
         "function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = {};\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = {};\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = {};\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    }"),
 561. (Types.Instrumented
         "function removeListener(type, listener) {\n      var list, events, position, i;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('listener must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = {};\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = {};\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, listener);\n      }\n\n      return this;\n    }"),
 562. (Types.Instrumented
         "function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n}"),
 563. (Types.Instrumented
         "function Action(options) {\n    options = options || {};\n    this.optionStrings = options.optionStrings || [];\n    this.dest = options.dest;\n    this.nargs = options.nargs !== undefined ? options.nargs : null;\n    this.constant = options.constant !== undefined ? options.constant : null;\n    this.defaultValue = options.defaultValue;\n    this.type = options.type !== undefined ? options.type : null;\n    this.choices = options.choices !== undefined ? options.choices : null;\n    this.required = options.required !== undefined ? options.required: false;\n    this.help = options.help !== undefined ? options.help : null;\n    this.metavar = options.metavar !== undefined ? options.metavar : null;\n\n    if (!(this.optionStrings instanceof Array)) {\n        throw new Error('optionStrings should be an array');\n    }\n    if (this.required !== undefined && typeof(this.required) !== 'boolean') {\n        throw new Error('required should be a boolean');\n    }\n}"),
 564. (Types.Instrumented
         "function ArgumentParser(options) {\n  options = options || {};\n  options.prefixChars = (options.prefixChars || '-');\n  options.addHelp = (options.addHelp === undefined || !!options.addHelp);\n  options.parents = (options.parents || []);\n\n  options.argumentDefault = options.argumentDefault || null;\n  // default program name\n  options.prog = (options.prog || Path.basename(process.argv[1]));\n\n  ActionContainer.call(this, options);\n\n  this.prog = options.prog;\n  this.usage = options.usage;\n  this.epilog = options.epilog;\n  this.version = options.version;\n\n  this.debug = (options.debug === true);\n\n  this.formatterClass = (options.formatterClass || HelpFormatter);\n\n  this._positionals = this.addArgumentGroup({title: 'Positional arguments'});\n  this._optionals = this.addArgumentGroup({title: 'Optional arguments'});\n  this._subparsers = null;\n\n  // register types\n  var FUNCTION_IDENTITY = function (o) {\n    return o;\n  };\n  this.register('type', 'auto', FUNCTION_IDENTITY);\n  this.register('type', null, FUNCTION_IDENTITY);\n  this.register('type', 'int', function (x) {\n    var result = parseInt(x, 10);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid integer.');\n    }\n    return result;\n  });\n  this.register('type', 'float', function (x) {\n    var result = parseFloat(x);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid float.');\n    }\n    return result;\n  });\n  this.register('type', 'string', function (x) {\n    return '' + x;\n  });\n\n  // add help and version arguments if necessary\n  if (options.addHelp) {\n    this.addArgument(\n      ['-h', '--help'],\n      {\n        action: 'help',\n        help: 'Show this help message and exit.'\n      }\n    );\n  }\n  if (this.version !== undefined) {\n    this.addArgument(\n      ['-v', '--version'],\n      {\n        action: 'version',\n        version: this.version,\n        help: \"Show program's version number and exit.\"\n      }\n    );\n  }\n\n  // add parent arguments and defaults\n  options.parents.forEach(function (parent) {\n    this._addContainerActions(parent);\n    if (parent._defaults !== undefined) {\n      for (var defaultKey in parent._defaults) {\n        if (parent._defaults.hasOwnProperty(defaultKey)) {\n          this._defaults[defaultKey] = parent._defaults[defaultKey];\n        }\n      }\n    }\n  });\n\n}"),
 565. (Types.Instrumented
         "function HelpFormatter(options) {\n  options = options || {};\n\n  this._prog = options.prog;\n\n  this._maxHelpPosition = options.maxHelpPosition || 24;\n  this._width = (options.width || ((process.env.COLUMNS || 80) - 2));\n\n  this._currentIndent = 0;\n  this._indentIncriment = options.indentIncriment || 2;\n  this._level = 0;\n  this._actionMaxLength = 0;\n\n  this._rootSection = new Section(null);\n  this._currentSection = this._rootSection;\n\n  this._whitespaceMatcher = new RegExp('\\\\s+', 'g');\n  this._longBreakMatcher = new RegExp($$.EOL + $$.EOL + $$.EOL + '+', 'g');\n}"),
 566. (Types.Instrumented
         "function Namespace(options) {\n  _.extend(this, options);\n}"),
 567. (Types.Instrumented
         "function applyASTHandler(instResult, astHandler, sandbox) {\n    if (astHandler && instResult.instAST) {\n        var info = astHandler(instResult.instAST);\n        if (info) {\n            instResult.code = sandbox.Constants.JALANGI_VAR + \".ast_info = \" + JSON.stringify(info) + \";\\n\" + instResult.code;\n        }\n    }\n    return instResult.code;\n}"),
 568. (Types.Instrumented
         "function createFilenameForScript(url) {\n    // TODO make this much more robust\n    console.log(\"url:\" + url);\n    var parsed = urlParser.parse(url);\n    if (inlineRegexp.test(url)) {\n        return parsed.hash.substring(1) + \".js\";\n    } else {\n        return parsed.pathname.substring(parsed.pathname.lastIndexOf(\"/\") + 1);\n    }\n}"),
 569. (Types.Instrumented
         "function genInitParamsCode(initParams) {\n    var initParamsObj = {};\n    if (initParams) {\n        initParams.forEach(function (keyVal) {\n            var split = keyVal.split(':');\n            if (split.length !== 2) {\n                throw new Error(\"invalid initParam \" + keyVal);\n            }\n            initParamsObj[split[0]] = split[1];\n        });\n    }\n    return \"<script>J$.initParams = \" + JSON.stringify(initParamsObj) + \";</script>\";\n}"),
 570. (Types.Instrumented
         "function getFooterString(jalangiRoot) {\n    var footerSources = require(\"../footers\").footerSources;\n    var footerCode = \"\";\n    footerSources.forEach(function (src) {\n        if (jalangiRoot) {\n            src = path.join(jalangiRoot, src);\n        }\n        if (endsWith(src, \".js\")) {\n            footerCode += \"<script type=\\\"text/javascript\\\">\";\n            footerCode += fs.readFileSync(src);\n            footerCode += \"</script>\";\n        } else {\n            footerCode += fs.readFileSync(src);\n        }\n    });\n\n    return footerCode;\n}"),
 571. (Types.Instrumented
         "function getHeaderCode(root) {\n    if (!headerCode) {\n        headerCodeInit(root);\n    }\n    return headerCode;\n}"),
 572. (Types.Instrumented
         "function getHeaderCodeAsScriptTags(root) {\n    var ret = \"\";\n    headerSources.forEach(function (src) {\n        if (root) {\n            src = path.join(root, src);\n        }\n        src = path.resolve(src);\n        ret += \"<script src=\\\"\" + src + \"\\\"></script>\";\n    });\n    return ret;\n}"),
 573. (Types.Instrumented
         "function getInlinedScripts(analyses, initParams, extraAppScripts, EXTRA_SCRIPTS_DIR, jalangiRoot) {\n    if (!headerCode) {\n        headerSources.forEach(function (src) {\n            if (jalangiRoot) {\n                src = path.join(jalangiRoot, src);\n            }\n            headerCode += \"<script type=\\\"text/javascript\\\">\";\n            headerCode += fs.readFileSync(src);\n            headerCode += \"</script>\";\n        });\n\n        if (analyses) {\n            headerCode += genInitParamsCode(initParams);\n            analyses.forEach(function (src) {\n                src = path.resolve(src);\n                headerCode += \"<script type=\\\"text/javascript\\\">\";\n                headerCode += fs.readFileSync(src);\n                headerCode += \"</script>\";\n            });\n        }\n\n        if (extraAppScripts.length > 0) {\n            // we need to inject script tags for the extra app scripts,\n            // which have been copied into the app directory\n            extraAppScripts.forEach(function (script) {\n                var scriptSrc = path.join(EXTRA_SCRIPTS_DIR, path.basename(script));\n                headerCode += \"<script type=\\\"text/javascript\\\">\";\n                headerCode += fs.readFileSync(scriptSrc);\n                headerCode += \"</script>\";\n            });\n        }\n    }\n    return headerCode;\n}"),
 574. (Types.Instrumented
         "function isInlineScript(url) {\n    return inlineRegexp.test(url);\n}"),
 575. (Types.Instrumented
         "function setHeaders() {\n    if (!headersSet) {\n        headerSources = headerSources.concat(require(\"../headers\").headerSources);\n        exports.headerSources = headerSources;\n        headersSet = true;\n    }\n}"),
 576. (Types.Instrumented
         "function Node() {\n  _classCallCheck(this, Node);\n}"),
 577. (Types.Instrumented
         "function Parser(options, input, startPos) {\n  this.options = options;\n  this.loadPlugins(this.options.plugins);\n  this.sourceFile = this.options.sourceFile || null;\n  this.isKeyword = keywords[this.options.ecmaVersion >= 6 ? 6 : 5];\n  this.isReservedWord = reservedWords[this.options.ecmaVersion];\n  this.input = input;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = Math.max(0, this.input.lastIndexOf(\"\\n\", startPos));\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = tt.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = null;\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.strict = this.inModule = this.options.sourceType === \"module\";\n\n  // Flags to track whether we are in a function, a generator.\n  this.inFunction = this.inGenerator = false;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && this.options.allowHashBang && this.input.slice(0, 2) === \"#!\") this.skipLineComment(2);\n}"),
 578. (Types.Instrumented
         "function SourceLocation(p, start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) this.source = p.sourceFile;\n}"),
 579. (Types.Instrumented
         "function TokContext(token, isExpr, preserveSpace, override) {\n  _classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = isExpr;\n  this.preserveSpace = preserveSpace;\n  this.override = override;\n}"),
 580. (Types.Instrumented
         "function Token(p) {\n  _classCallCheck(this, Token);\n\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations) this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n  if (p.options.ranges) this.range = [p.start, p.end];\n}"),
 581. (Types.Instrumented
         "function TokenType(label) {\n  var conf = arguments[1] === undefined ? {} : arguments[1];\n\n  _classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n}"),
 582. (Types.Instrumented
         "function getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}"),
 583. (Types.Instrumented
         "function isIdentifierChar(code, astral) {\n  if (code < 48) {\n    return code === 36;\n  }if (code < 58) {\n    return true;\n  }if (code < 65) {\n    return false;\n  }if (code < 91) {\n    return true;\n  }if (code < 97) {\n    return code === 95;\n  }if (code < 123) {\n    return true;\n  }if (code <= 65535) {\n    return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));\n  }if (astral === false) {\n    return false;\n  }return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}"),
 584. (Types.Instrumented
         "function isIdentifierStart(code, astral) {\n  if (code < 65) {\n    return code === 36;\n  }if (code < 91) {\n    return true;\n  }if (code < 97) {\n    return code === 95;\n  }if (code < 123) {\n    return true;\n  }if (code <= 65535) {\n    return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }if (astral === false) {\n    return false;\n  }return isInAstralSet(code, astralIdentifierStartCodes);\n}"),
 585. (Types.Instrumented
         "function isNewLine(code) {\n  return code === 10 || code === 13 || code === 8232 || code == 8233;\n}"),
 586. (Types.Instrumented
         "function parse(input, options) {\n  var p = parser(options, input);\n  var startPos = p.options.locations ? [p.pos, p.curPosition()] : p.pos;\n  p.nextToken();\n  return p.parseTopLevel(p.options.program || p.startNodeAt(startPos));\n}"),
 587. (Types.Instrumented
         "function parseExpressionAt(input, pos, options) {\n  var p = parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression();\n}"),
 588. (Types.Instrumented
         "function tokenizer(input, options) {\n  return parser(options, input);\n}"),
 589. (Types.Instrumented
         "function generate($node, options) {\r\n        var defaultOptions = getDefaultOptions(), result, pair;\r\n\r\n        if (options != null) {\r\n            //NOTE: Obsolete options\r\n            //\r\n            //   `options.indent`\r\n            //   `options.base`\r\n            //\r\n            // Instead of them, we can use `option.format.indent`.\r\n            if (typeof options.indent === 'string') {\r\n                defaultOptions.format.indent.style = options.indent;\r\n            }\r\n            if (typeof options.base === 'number') {\r\n                defaultOptions.format.indent.base = options.base;\r\n            }\r\n            options = updateDeeply(defaultOptions, options);\r\n            _.indentUnit = options.format.indent.style;\r\n            if (typeof options.base === 'string') {\r\n                _.indent = options.base;\r\n            } else {\r\n                _.indent = stringRepeat(_.indentUnit, options.format.indent.base);\r\n            }\r\n        } else {\r\n            options = defaultOptions;\r\n            _.indentUnit = options.format.indent.style;\r\n            _.indent = stringRepeat(_.indentUnit, options.format.indent.base);\r\n        }\r\n        json = options.format.json;\r\n        renumber = options.format.renumber;\r\n        hexadecimal = json ? false : options.format.hexadecimal;\r\n        quotes = json ? 'double' : options.format.quotes;\r\n        escapeless = options.format.escapeless;\r\n\r\n        _.newline = options.format.newline;\r\n        _.optSpace = options.format.space;\r\n\r\n        if (options.format.compact)\r\n            _.newline = _.optSpace = _.indentUnit = _.indent = '';\r\n\r\n        _.space = _.optSpace ? _.optSpace : ' ';\r\n        parentheses = options.format.parentheses;\r\n        semicolons = options.format.semicolons;\r\n        safeConcatenation = options.format.safeConcatenation;\r\n        directive = options.directive;\r\n        parse = json ? null : options.parse;\r\n        extra = options;\r\n\r\n        if (extra.verbatim)\r\n            ExprGen = createExprGenWithExtras();\r\n\r\n        else\r\n            ExprGen = ExprRawGen;\r\n\r\n        return run($node);\r\n    }"),
 590. (Types.Instrumented
         "function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n\n  // ToDo conflict handler\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  this._regexpNegativeNumber = new RegExp('^-\\\\d+$|^-\\\\d*\\\\.\\\\d+$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n}"),
 591. (Types.Instrumented
         "function (parser, namespace, values, optionString) {\n    throw new Error('.call() not defined');// Not Implemented error\n}"),
 592. (Types.Instrumented
         "function () {\n    if (this.optionStrings.length > 0) {\n        return this.optionStrings.join('/');\n    } else if (this.metavar !== undefined && this.metavar !== $$.SUPPRESS) {\n        return this.metavar;\n    } else if (this.dest !== undefined && this.dest !== $$.SUPPRESS) {\n        return this.dest;\n    }\n    return null;\n}"),
 593. (Types.Instrumented
         "function () {\n    return !this.isPositional();\n}"),
 594. (Types.Instrumented
         "function () {\n    return (this.optionStrings.length === 0);\n}"),
 595. (Types.Instrumented
         "function (action) {\n  if (action.isOptional()) {\n    this._optionals._addAction(action);\n  } else {\n    this._positionals._addAction(action);\n  }\n  return action;\n}"),
 596. (Types.Instrumented
         "function (action, value) {\n  // converted value must be one of the choices (if specified)\n  var choices = action.choices;\n  if (!!choices &&\n      !choices[value] &&\n      (_.isFunction(choices.indexOf) && choices.indexOf(value) === -1)) {\n\n    if (!_.isString(choices)) {\n      if (_.isObject(choices)) {\n        choices =  _.keys(action.choices).join(', ');\n      }\n      else {\n        choices =  action.choices.join(', ');\n      }\n    }\n    var message = _.str.sprintf(\n      'Invalid choice: %(value)s (choose from [%(choices)s])',\n      {value: value, choices: choices}\n    );\n    throw argumentErrorHelper(action, message);\n  }\n}"),
 597. (Types.Instrumented
         "function () {\n  var FormatterClass = this.formatterClass;\n  var formatter = new FormatterClass({prog: this.prog});\n  return formatter;\n}"),
 598. (Types.Instrumented
         "function (action) {\n  // in all examples below, we have to allow for '--' args\n  // which are represented as '-' in the pattern\n  var regexpNargs;\n\n  switch (action.nargs) {\n    // the default (null) is assumed to be a single argument\n    case undefined:\n    case null:\n      regexpNargs = '(-*A-*)';\n      break;\n    // allow zero or more arguments\n    case $$.OPTIONAL:\n      regexpNargs = '(-*A?-*)';\n      break;\n    // allow zero or more arguments\n    case $$.ZERO_OR_MORE:\n      regexpNargs = '(-*[A-]*)';\n      break;\n    // allow one or more arguments\n    case $$.ONE_OR_MORE:\n      regexpNargs = '(-*A[A-]*)';\n      break;\n    // allow any number of options or arguments\n    case $$.REMAINDER:\n      regexpNargs = '([-AO]*)';\n      break;\n    // allow one argument followed by any number of options or arguments\n    case $$.PARSER:\n      regexpNargs = '(-*A[-AO]*)';\n      break;\n    // all others should be integers\n    default:\n      regexpNargs = '(-*' + _.str.repeat('-*A', action.nargs) + '-*)';\n  }\n\n  // if this is an optional action, -- is not allowed\n  if (action.isOptional()) {\n    regexpNargs = regexpNargs.replace(/-\\*/g, '');\n    regexpNargs = regexpNargs.replace(/-/g, '');\n  }\n\n  // return the pattern\n  return regexpNargs;\n}"),
 599. (Types.Instrumented
         "function (optionString) {\n  var result = [];\n  var chars = this.prefixChars;\n  var optionPrefix;\n  var argExplicit;\n  var action;\n  var actionOptionString;\n\n  // option strings starting with two prefix characters are only split at\n  // the '='\n  if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) >= 0) {\n    if (optionString.indexOf('=') >= 0) {\n      var optionStringSplit = optionString.split('=', 1);\n\n      optionPrefix = optionStringSplit[0];\n      argExplicit = optionStringSplit[1];\n    } else {\n      optionPrefix = optionString;\n      argExplicit = null;\n    }\n\n    for (actionOptionString in this._optionStringActions) {\n      if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        action = this._optionStringActions[actionOptionString];\n        result.push([action, actionOptionString, argExplicit]);\n      }\n    }\n\n  // single character options can be concatenated with their arguments\n  // but multiple character options always have to have their argument\n  // separate\n  } else if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) < 0) {\n    optionPrefix = optionString;\n    argExplicit = null;\n    var optionPrefixShort = optionString.substr(0, 2);\n    var argExplicitShort = optionString.substr(2);\n\n    for (actionOptionString in this._optionStringActions) {\n      action = this._optionStringActions[actionOptionString];\n      if (actionOptionString === optionPrefixShort) {\n        result.push([action, actionOptionString, argExplicitShort]);\n      } else if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        result.push([action, actionOptionString, argExplicit]);\n      }\n    }\n\n  // shouldn't ever get here\n  } else {\n    throw new Error(_.str.sprintf(\n        'Unexpected option string: %(argument)s.',\n        {argument: optionString}\n    ));\n  }\n  // return the collected option tuples\n  return result;\n}"),
 600. (Types.Instrumented
         "function () {\n  return this._actions.filter(function (action, actionIndex) {\n    return action.isOptional();\n  });\n}"),
 601. (Types.Instrumented
         "function () {\n  return this._actions.filter(function (action, actionIndex) {\n    return action.isPositional();\n  });\n}"),
 602. (Types.Instrumented
         "function (action, argString) {\n  var result;\n\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (!_.isFunction(typeFunction)) {\n    var message = _.str.sprintf(\n      '%(callback)s is not callable',\n      {callback: typeFunction}\n    );\n    throw argumentErrorHelper(action, message);\n  }\n\n  // convert the value to the appropriate type\n  try {\n    result = typeFunction(argString);\n\n    // ArgumentTypeErrors indicate errors\n  } catch (e) {\n\n    throw argumentErrorHelper(\n      action,\n      _.str.sprintf('Invalid %(type)s value: %(value)s', {\n        type: action.type,\n        value: argString\n      })\n    );\n  }\n  // return the converted value\n  return result;\n}"),
 603. (Types.Instrumented
         "function (action, argStrings) {\n  var self = this;\n\n  // for everything but PARSER args, strip out '--'\n  if (action.nargs !== $$.PARSER && action.nargs !== $$.REMAINDER) {\n    argStrings = argStrings.filter(function (arrayElement) {\n      return arrayElement !== '--';\n    });\n  }\n\n  var value, argString;\n\n  // optional argument produces a default when not present\n  if (argStrings.length === 0 && action.nargs === $$.OPTIONAL) {\n    \n    value = (action.isOptional()) ? action.constant: action.defaultValue;\n\n    if (typeof(value) === 'string') {\n      value = this._getValue(action, value);\n      this._checkValue(action, value);\n    }\n\n  // when nargs='*' on a positional, if there were no command-line\n  // args, use the default if it is anything other than None\n  } else if (argStrings.length === 0 &&\n        action.nargs === $$.ZERO_OR_MORE &&\n        action.isOptional()) {\n\n    value = (action.defaultValue || argStrings);\n    this._checkValue(action, value);\n\n  // single argument or optional argument produces a single value\n  } else if (argStrings.length === 1 &&\n        (!action.nargs || action.nargs === $$.OPTIONAL)) {\n\n    argString = argStrings[0];\n    value = this._getValue(action, argString);\n    this._checkValue(action, value);\n\n  // REMAINDER arguments convert all values, checking none\n  } else if (action.nargs === $$.REMAINDER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n\n  // PARSER arguments convert all values, but check only the first\n  } else if (action.nargs === $$.PARSER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    this._checkValue(action, value[0]);\n\n  // all other types of nargs produce a list\n  } else {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    value.forEach(function (v) {\n      self._checkValue(action, v);\n    });\n  }\n\n  // return the converted value\n  return value;\n}"),
 604. (Types.Instrumented
         "function (action, regexpArgStrings) {\n\n  // match the pattern for this action to the arg strings\n  var regexpNargs = new RegExp(this._getNargsPattern(action));\n  var matches = regexpArgStrings.match(regexpNargs);\n  var message;\n\n  // throw an exception if we weren't able to find a match\n  if (!matches) {\n    switch (action.nargs) {\n      case undefined:\n      case null:\n        message = 'Expected one argument.';\n        break;\n      case $$.OPTIONAL:\n        message = 'Expected at most one argument.';\n        break;\n      case $$.ONE_OR_MORE:\n        message = 'Expected at least one argument.';\n        break;\n      default:\n        message = 'Expected %(count)s argument(s)';\n    }\n\n    throw argumentErrorHelper(\n      action,\n      _.str.sprintf(message, {count: action.nargs}\n    ));\n  }\n  // return the number of arguments matched\n  return matches[1].length;\n}"),
 605. (Types.Instrumented
         "function (actions, regexpArgStrings) {\n  // progressively shorten the actions list by slicing off the\n  // final actions until we find a match\n  var self = this;\n  var result = [];\n  var actionSlice, pattern, matches;\n  var i, j;\n   \n  var getLength = function (string) {\n    return string.length;\n  };\n\n  for (i = actions.length; i > 0; i -= 1) {\n    pattern = '';\n    actionSlice = actions.slice(0, i);\n    for (j in actionSlice) {\n      pattern += self._getNargsPattern(actionSlice[j]);\n    }\n\n    pattern = new RegExp(pattern);\n    matches = regexpArgStrings.match(pattern);\n\n    if (matches && matches.length > 0) {\n      // need only groups\n      matches = matches.splice(1);\n      result = result.concat(matches.map(getLength));\n      break;\n    }\n  }\n\n  // return the list of arg string counts\n  return result;\n}"),
 606. (Types.Instrumented
         "function (argStrings, namespace) {\n  var self = this;\n\n  var extras = [];\n\n  // replace arg strings that are file references\n  // ToDo read args from files\n\n  // map all mutually exclusive arguments to the other arguments\n  // they can't occur with\n  // ToDo mutually_exclusive_group\n  var actionConflicts = {};\n  \n  // find all option indices, and determine the arg_string_pattern\n  // which has an 'O' if there is an option at an index,\n  // an 'A' if there is an argument, or a '-' if there is a '--'\n  var optionStringIndices = {};\n\n  var argStringPatternParts = [];\n\n  argStrings.forEach(function (argString, argStringIndex) {\n    if (argString === '--'){\n      argStringPatternParts.push('-');\n      while (argStringIndex < argStrings.length) {\n        argStringPatternParts.push('A');\n        argStringIndex++;\n      }\n    }\n    // otherwise, add the arg to the arg strings\n    // and note the index if it was an option\n    else {\n      var pattern;\n      var optionTuple = self._parseOptional(argString);\n      if (!optionTuple) {\n        pattern = 'A';\n      }\n      else {\n        optionStringIndices[argStringIndex] = optionTuple;\n        pattern = 'O';\n      }\n      argStringPatternParts.push(pattern);\n    }\n  });\n  var argStringsPattern = argStringPatternParts.join('');\n\n  var seenActions = [];\n  var seenNonDefaultActions = [];\n\n\n  function takeAction(action, argumentStrings, optionString){\n    seenActions.push(action);\n    var argumentValues = self._getValues(action, argumentStrings);\n\n    // error if this argument is not allowed with other previously\n    // seen arguments, assuming that actions that use the default\n    // value don't really count as \"present\"\n    if (argumentValues !== action.default){\n      seenNonDefaultActions.push(action);\n      if (!!actionConflicts[action]) {\n        for (var i=0; i < actionConflicts[action].length; i++) {\n          var actionConflict = actionConflicts[action][i];\n          if (seenNonDefaultActions.indexOf(actionConflict)>0){\n            throw argumentErrorHelper(\n              action,\n               _.str.sprintf(\n                'Not allowed with argument \"%(argument)s\".',\n                {argument: actionConflict.getName()}\n              )\n            );\n          }\n        }\n      }\n    }\n\n    if (argumentValues !== $$.SUPPRESS) {\n      action.call(self, namespace, argumentValues, optionString);\n    }\n  }\n\n  function consumeOptional(startIndex){\n    // get the optional identified at this index\n    var optionTuple = optionStringIndices[startIndex];\n    var action = optionTuple[0];\n    var optionString = optionTuple[1];\n    var explicitArg = optionTuple[2];\n\n    // identify additional optionals in the same arg string\n    // (e.g. -xyz is the same as -x -y -z if no args are required)\n    var actionTuples = [];\n\n    var args, argCount, start, stop;\n\n    while(true){\n      if (!action){\n        extras.push(argStrings[startIndex]);\n        return startIndex + 1;\n      }\n      if (!!explicitArg){\n        argCount = self._matchArgument(action, 'A');\n\n        // if the action is a single-dash option and takes no\n        // arguments, try to parse more single-dash options out\n        // of the tail of the option string\n        var chars = self.prefixChars;\n        if (argCount === 0 && chars.indexOf(optionString[1]) < 0){\n          actionTuples.push([action, [], optionString]);\n          optionString = optionString[0] + explicitArg[0];\n          var newExplicitArg = explicitArg.slice(1) || null;\n          var optionalsMap = self._optionStringActions;\n\n          if (_.keys(optionalsMap).indexOf(optionString) >= 0){\n            action = optionalsMap[optionString];\n            explicitArg = newExplicitArg;\n          }\n          else{\n            var msg = 'ignored explicit argument %r';\n            throw argumentErrorHelper(action, msg);\n          }\n        }\n        // if the action expect exactly one argument, we've\n        // successfully matched the option; exit the loop\n        else if (argCount === 1){\n          stop = startIndex + 1;\n          args = [explicitArg];\n          actionTuples.push([action, args, optionString]);\n          break;\n        }\n        // error if a double-dash option did not use the\n        // explicit argument\n        else{\n          var message = 'ignored explicit argument %r';\n          throw argumentErrorHelper(action, _.str.sprintf(message, explicitArg));\n        }\n      }\n      // if there is no explicit argument, try to match the\n      // optional's string arguments with the following strings\n      // if successful, exit the loop\n      else{\n  \n        start = startIndex + 1;\n        var selectedPatterns = argStringsPattern.substr(start);\n\n        argCount = self._matchArgument(action, selectedPatterns);\n        stop = start + argCount;\n\n\n        args = argStrings.slice(start, stop);\n    \n        actionTuples.push([action, args, optionString]);\n        break;\n      }\n\n    }\n\n    // add the Optional to the list and return the index at which\n    // the Optional's string args stopped\n    if (actionTuples.length < 1) {\n      throw new Error('length should be > 0');\n    }\n    for (var i=0; i < actionTuples.length; i++) {\n      takeAction.apply(self, actionTuples[i]);\n    }\n    return stop;\n  }\n\n  // the list of Positionals left to be parsed; this is modified\n  // by consume_positionals()\n  var positionals = self._getPositionalActions();\n\n  function consumePositionals(startIndex){\n    // match as many Positionals as possible\n    var selectedPattern = argStringsPattern.substr(startIndex);\n    var argCounts = self._matchArgumentsPartial(positionals, selectedPattern);\n\n    // slice off the appropriate arg strings for each Positional\n    // and add the Positional and its args to the list\n    if (argCounts.length > 0) {\n      _.zip(positionals, argCounts).forEach(function(item) {\n        var action = item[0];\n        var argCount = item[1];\n        var args = argStrings.slice(startIndex, startIndex + argCount);\n\n        startIndex += argCount;\n        takeAction(action, args);\n      });\n    }\n\n    // slice off the Positionals that we just parsed and return the\n    // index at which the Positionals' string args stopped\n    positionals = positionals.slice(argCounts.length);\n    return startIndex;\n  }\n\n  // consume Positionals and Optionals alternately, until we have\n  // passed the last option string\n  var startIndex = 0;\n  var position;\n\n  var maxOptionStringIndex = -1;\n  if (!!optionStringIndices){\n    for (position in optionStringIndices) {\n      maxOptionStringIndex = Math.max(maxOptionStringIndex, parseInt(position, 10));\n    }\n  }\n\n  var positionalsEndIndex, nextOptionStringIndex;\n\n  while (startIndex <= maxOptionStringIndex){\n    // consume any Positionals preceding the next option\n    nextOptionStringIndex = null;\n    for (position in optionStringIndices){\n      position = parseInt(position, 10);\n      if (position >= startIndex) {\n        if (nextOptionStringIndex !== null) {\n          nextOptionStringIndex = Math.min(nextOptionStringIndex, position);\n        }\n        else {\n          nextOptionStringIndex = position;\n        }\n      }\n    }\n\n    if (startIndex !== nextOptionStringIndex){\n      positionalsEndIndex = consumePositionals(startIndex);\n      // only try to parse the next optional if we didn't consume\n      // the option string during the positionals parsing\n      if (positionalsEndIndex > startIndex){\n        startIndex = positionalsEndIndex;\n        continue;\n      }\n      else{\n        startIndex = positionalsEndIndex;\n      }\n    }\n    \n    // if we consumed all the positionals we could and we're not\n    // at the index of an option string, there were extra arguments\n    if (!optionStringIndices[startIndex]){\n      var strings = argStrings.slice(startIndex, nextOptionStringIndex);\n      extras = extras.concat(strings);\n      startIndex = nextOptionStringIndex;\n    }\n    // consume the next optional and any arguments for it\n    startIndex = consumeOptional(startIndex);\n  }\n\n  // consume any positionals following the last Optional\n  var stopIndex = consumePositionals(startIndex);\n\n  // if we didn't consume all the argument strings, there were extras\n  extras = extras.concat(_.rest(argStrings, stopIndex));\n\n  // if we didn't use all the Positional objects, there were too few\n  // arg strings supplied.\n  if (positionals.length > 0){\n    self.error('too few arguments');\n  }\n\n  // make sure all required actions were present\n  self._actions.forEach(function(action){\n    if (action.required){\n      if (_.indexOf(seenActions, action) < 0){\n        self.error(_.str.sprintf('Argument \"%(name)s\" is required', {name: action.getName()}));\n      }\n    }\n  });\n\n  // make sure all required groups had one option present\n  // ToDo mutually_exclusive_group\n\n  // return the updated namespace and the extra arguments\n  return [namespace, extras];\n}"),
 607. (Types.Instrumented
         "function (argString) {\n  var action, optionString, argExplicit, optionTuples;\n\n  // if it's an empty string, it was meant to be a positional\n  if (!argString) {\n    return null;\n  }\n\n  // if it doesn't start with a prefix, it was meant to be positional\n  if (this.prefixChars.indexOf(argString[0]) < 0) {\n    return null;\n  }\n\n  // if the option string is present in the parser, return the action\n  if (!!this._optionStringActions[argString]) {\n    return [this._optionStringActions[argString], argString, null];\n  }\n\n  // if it's just a single character, it was meant to be positional\n  if (argString.length === 1) {\n    return null;\n  }\n\n  // if the option string before the \"=\" is present, return the action\n  if (argString.indexOf('=') >= 0) {\n    var argStringSplit = argString.split('=');\n    optionString = argStringSplit[0];\n    argExplicit = argStringSplit[1];\n\n    if (!!this._optionStringActions[optionString]) {\n      action = this._optionStringActions[optionString];\n      return [action, optionString, argExplicit];\n    }\n  }\n\n  // search through all possible prefixes of the option string\n  // and all actions in the parser for possible interpretations\n  optionTuples = this._getOptionTuples(argString);\n\n  // if multiple actions match, the option string was ambiguous\n  if (optionTuples.length > 1) {\n    var optionStrings = optionTuples.map(function (optionTuple) {\n      return optionTuple[1];\n    });\n    this.error(_.str.sprintf(\n          'Ambiguous option: \"%(argument)s\" could match %(values)s.',\n          {argument: argString, values: optionStrings.join(', ')}\n    ));\n  // if exactly one action matched, this segmentation is good,\n  // so return the parsed action\n  } else if (optionTuples.length === 1) {\n    return optionTuples[0];\n  }\n\n  // if it was not found as an option, but it looks like a negative\n  // number, it was meant to be positional\n  // unless there are negative-number-like options\n  if (argString.match(this._regexpNegativeNumber) &&\n      !this._hasNegativeNumberOptionals) {\n    return null;\n  }\n  // if it contains a space, it was meant to be a positional\n  if (argString.search(' ') >= 0) {\n    return null;\n  }\n\n  // it was meant to be an optional but there is no such option\n  // in this parser (though it might be a valid option in a subparser)\n  return [null, argString, null];\n}"),
 608. (Types.Instrumented
         "function (message, stream) {\n  if (!stream) {\n    stream = process.stdout;\n  }\n  if (message) {\n    stream.write('' + message);\n  }\n}"),
 609. (Types.Instrumented
         "function (options) {\n  if (!!this._subparsers) {\n    this.error('Cannot have multiple subparser arguments.');\n  }\n\n  options = options || {};\n  options.debug = (this.debug === true);\n  options.optionStrings = [];\n  options.parserClass = (options.parserClass || ArgumentParser);\n\n\n  if (!!options.title || !!options.description) {\n\n    this._subparsers = this.addArgumentGroup({\n      title: (options.title || 'subcommands'),\n      description: options.description\n    });\n    delete options.title;\n    delete options.description;\n\n  } else {\n    this._subparsers = this._positionals;\n  }\n\n  // prog defaults to the usage message of this parser, skipping\n  // optional arguments and with no \"usage:\" prefix\n  if (!options.prog) {\n    var formatter = this._getFormatter();\n    var positionals = this._getPositionalActions();\n    formatter.addUsage(this.usage, positionals, [], '');\n    options.prog = _.str.strip(formatter.formatHelp());\n  }\n\n  // create the parsers action and add it to the positionals list\n  var ParsersClass = this._popActionClass(options, 'parsers');\n  var action = new ParsersClass(options);\n  this._subparsers._addAction(action);\n\n  // return the created parsers action\n  return action;\n}"),
 610. (Types.Instrumented
         "function (err) {\n  if (err instanceof Error) {\n    if (this.debug === true) {\n      throw err;\n    }\n    err = err.err;\n  }\n\n  var msg = _.str.sprintf(\n      '%(prog)s: error: %(err)s',\n      {prog: this.prog, err: err}) + $$.EOL;\n\n  if (this.debug === true) {\n    throw new Error(msg);\n  }\n\n  this.printUsage(process.stderr);\n\n  return this.exit(2, msg);\n}"),
 611. (Types.Instrumented
         "function (status, message) {\n  if (!!message) {\n    if (status === 0) {\n      this._printMessage(message);\n    }\n    else {\n      this._printMessage(message, process.stderr);\n    }\n  }\n\n  process.exit(status);\n}"),
 612. (Types.Instrumented
         "function () {\n  var formatter = this._getFormatter();\n\n  // usage\n  formatter.addUsage(this.usage, this._actions, []);\n\n  // description\n  formatter.addText(this.description);\n\n  // positionals, optionals and user-defined groups\n  this._actionGroups.forEach(function (actionGroup, actionIndex) {\n    formatter.startSection(actionGroup.title);\n    formatter.addText(actionGroup.description);\n    formatter.addArguments(actionGroup._groupActions);\n    formatter.endSection();\n  });\n\n  // epilog\n  formatter.addText(this.epilog);\n\n  // determine help from format above\n  return formatter.formatHelp();\n}"),
 613. (Types.Instrumented
         "function () {\n  var formatter = this._getFormatter();\n  formatter.addUsage(this.usage, this._actions, []);\n  return formatter.formatHelp();\n}"),
 614. (Types.Instrumented
         "function (args, namespace) {\n  var argv;\n  var result = this.parseKnownArgs(args, namespace);\n\n  args = result[0];\n  argv = result[1];\n  if (argv && argv.length > 0) {\n    this.error(\n      _.str.sprintf('Unrecognized arguments: %(args)s.', {\n        args: argv.join(' ')\n      })\n    );\n  }\n  return args;\n}"),
 615. (Types.Instrumented
         "function (args, namespace) {\n  var self = this;\n\n  // args default to the system args\n  args = args || process.argv.slice(2);\n\n  // default Namespace built from parser defaults\n  namespace = namespace || new Namespace();\n\n  self._actions.forEach(function(action) {\n    if (action.dest !== $$.SUPPRESS) {\n      if (_.indexOf(namespace, action.dest) === -1) {\n        if (action.defaultValue !== $$.SUPPRESS) {\n          var defaultValue = action.defaultValue;\n          if (_.isString(action.defaultValue)){\n            defaultValue = self._getValue(action, defaultValue);\n          }\n          namespace[action.dest] = defaultValue;\n        }\n      }\n    }\n  });\n\n  _.keys(self._defaults).forEach(function(dest){\n    namespace[dest] = self._defaults[dest];\n  });\n\n  // parse the arguments and exit if there are any errors\n  try {\n    var res = this._parseKnownArgs(args, namespace);\n    \n    namespace = res[0];\n    args = res[1];\n    if (_.indexOf(Namespace, $$._UNRECOGNIZED_ARGS_ATTR)  !== -1) {\n      args = _.union(args, namespace[$$._UNRECOGNIZED_ARGS_ATTR]);\n      delete namespace[$$._UNRECOGNIZED_ARGS_ATTR];\n    }\n    return [namespace, args];\n  } catch (e) {\n    this.error(e);\n  }\n}"),
 616. (Types.Instrumented
         "function () {\n  this._printMessage(this.formatHelp());\n}"),
 617. (Types.Instrumented
         "function () {\n  this._printMessage(this.formatUsage());\n}"),
 618. (Types.Instrumented
         "function (func, args) {\n  this._currentSection.addItem([func, args]);\n}"),
 619. (Types.Instrumented
         "function () {\n  this._currentIndent -= this._indentIncriment;\n  this._level -= 1;\n  if (this._currentIndent < 0) {\n    throw new Error('Indent decreased below 0.');\n  }\n}"),
 620. (Types.Instrumented
         "function (action) {\n  var actionProperty;\n  var actionValue;\n\n  var params = {prog: this._prog};\n\n  for (actionProperty in action) {\n    if (action.hasOwnProperty(actionProperty)) {\n      actionValue = action[actionProperty];\n\n      if (actionValue !== $$.SUPPRESS) {\n        params[actionProperty] = actionValue;\n      }\n    }\n  }\n\n  var choices = params.choices;\n  if (!!choices && !_.isString(choices)) {\n    if (_.isObject(choices)){\n      params.choices = _.keys(choices).join(', ');\n    }\n    else {\n      params.choices = choices.join(', ');\n    }\n  }\n\n  return _.str.sprintf(this._getHelpString(action), params);\n}"),
 621. (Types.Instrumented
         "function (text, width, indent) {\n  var lines = this._splitLines(text, width);\n  lines.forEach(function (line) {\n    line = indent + line;\n  });\n  return lines.join($$.EOL);\n}"),
 622. (Types.Instrumented
         "function (action) {\n  var self = this;\n\n  var helpText;\n  var helpLines;\n  var parts;\n  var indentFirst;\n\n  // determine the required width and the entry label\n  var helpPosition = Math.min(this._actionMaxLength + 2, this._maxHelpPosition);\n  var helpWidth = this._width - helpPosition;\n  var actionWidth = helpPosition - this._currentIndent - 2;\n  var actionHeader = this._formatActionInvocation(action);\n\n  // no help; start on same line and add a final newline\n  if (!action.help) {\n    actionHeader = _.str.repeat(' ', this._currentIndent) + actionHeader + $$.EOL;\n\n  // short action name; start on the same line and pad two spaces\n  } else if (actionHeader.length <= actionWidth) {\n    actionHeader = _.str.repeat(' ', this._currentIndent) +\n        actionHeader +\n        '  ' +\n        _.str.repeat(' ', actionWidth - actionHeader.length);\n    indentFirst = 0;\n\n  // long action name; start on the next line\n  } else {\n    actionHeader = _.str.repeat(' ', this._currentIndent) + actionHeader + $$.EOL;\n    indentFirst = helpPosition;\n  }\n\n  // collect the pieces of the action help\n  parts = [actionHeader];\n\n  // if there was help for the action, add lines of help text\n  if (!!action.help) {\n    helpText = this._expandHelp(action);\n    helpLines = this._splitLines(helpText, helpWidth);\n    parts.push(_.str.repeat(' ', indentFirst) + helpLines[0] + $$.EOL);\n    helpLines.slice(1).forEach(function (line) {\n      parts.push(_.str.repeat(' ', helpPosition) + line + $$.EOL);\n    });\n\n  // or add a newline if the description doesn't end with one\n  } else if (actionHeader.charAt(actionHeader.length-1) !== $$.EOL) {\n    parts.push($$.EOL);\n  }\n  // if there are any sub-actions, add their help as well\n  if (!!action._getSubactions) {\n    this._indent();\n    action._getSubactions().forEach(function (subaction) {\n      parts.push(self._formatAction(subaction));\n    });\n    this._dedent();\n  }\n  // return a single string\n  return this._joinParts(parts);\n}"),
 623. (Types.Instrumented
         "function (action) {\n  if (!action.isOptional()) {\n    var format_func = this._metavarFormatter(action, action.dest);\n    var metavars = format_func(1);\n    return metavars[0];\n  } else {\n    var parts = [];\n    var argsDefault;\n    var argsString;\n\n    // if the Optional doesn't take a value, format is: -s, --long\n    if (action.nargs === 0) {\n      parts = parts.concat(action.optionStrings);\n\n    // if the Optional takes a value, format is: -s ARGS, --long ARGS\n    } else {\n      argsDefault = action.dest.toUpperCase();\n      argsString = this._formatArgs(action, argsDefault);\n      action.optionStrings.forEach(function (optionString) {\n        parts.push(optionString + ' ' + argsString);\n      });\n    }\n    return parts.join(', ');\n  }\n}"),
 624. (Types.Instrumented
         "function (actions, groups) {\n  // find group indices and identify actions in groups\n  var groupActions = [];\n  var inserts = [];\n  var self = this;\n\n  groups.forEach(function (group) {\n    var end;\n    var i;\n\n    var start = actions.indexOf(group._groupActions[0]);\n    if (start >= 0) {\n      end = start + group._groupActions.length;\n\n      if (actions.slice(start, end) === group._groupActions) {\n        group._groupActions.forEach(function (action) {\n          groupActions.push(action);\n        });\n\n        if (!group.required) {\n          if (!!inserts[start]) {\n            inserts[start] += ' [';\n          }\n          else {\n            inserts[start] = '[';\n          }\n          inserts[end] = ']';\n        } else {\n          if (!!inserts[start]) {\n            inserts[start] += ' (';\n          }\n          else {\n            inserts[start] = '(';\n          }\n          inserts[end] = ')';\n        }\n        for (i = start + 1; i < end; i += 1) {\n          inserts[i] = '|';\n        }\n      }\n    }\n  });\n\n  // collect all actions format strings\n  var parts = [];\n  \n  actions.forEach(function (action, actionIndex) {\n    var part;\n    var optionString;\n    var argsDefault;\n    var argsString;\n\n    // suppressed arguments are marked with None\n    // remove | separators for suppressed arguments\n    if (action.help === $$.SUPPRESS) {\n      parts.push(null);\n      if (inserts[actionIndex] === '|') {\n        inserts.splice(actionIndex, actionIndex);\n      } else if (inserts[actionIndex + 1] === '|') {\n        inserts.splice(actionIndex + 1, actionIndex + 1);\n      }\n\n      // produce all arg strings\n    } else if (!action.isOptional()) {\n      part = self._formatArgs(action, action.dest);\n\n      // if it's in a group, strip the outer []\n      if (groupActions.indexOf(action) >= 0) {\n        if (part[0] === '[' && part[part.length - 1] === ']') {\n          part = part.slice(1, -1);\n        }\n      }\n      // add the action string to the list\n      parts.push(part);\n\n    // produce the first way to invoke the option in brackets\n    } else {\n      optionString = action.optionStrings[0];\n\n      // if the Optional doesn't take a value, format is: -s or --long\n      if (action.nargs === 0) {\n        part = '' + optionString;\n\n      // if the Optional takes a value, format is: -s ARGS or --long ARGS\n      } else {\n        argsDefault = action.dest.toUpperCase();\n        argsString = self._formatArgs(action, argsDefault);\n        part = optionString + ' ' + argsString;\n      }\n      // make it look optional if it's not required or in a group\n      if (!action.required && groupActions.indexOf(action) < 0) {\n        part = '[' + part + ']';\n      }\n      // add the action string to the list\n      parts.push(part);\n    }\n  });\n\n  // insert things at the necessary indices\n  inserts.reverse().forEach(function (insert, insertIndex) {\n    parts = parts.slice(0, insertIndex).concat(\n        [insert],\n        parts.slice(insertIndex + 1, parts.length - 1)\n    );\n  });\n\n  // join all the action items with spaces\n  var text = parts.filter(function (part) {\n    return !!part;\n  }).join(' ');\n\n  // clean up separators for mutually exclusive groups\n  var regexpOpen = '[\\\\[(]';\n  var regexpClose = '[\\\\])]';\n  text = text.replace('(' + regexpOpen + ') ', '\\\\1');\n  text = text.replace(' (' + regexpClose + ')', '\\\\1');\n  text = text.replace(regexpOpen + ' *' + regexpClose, '');\n  text = text.replace('\\\\(([^|]*)\\\\)', '\\\\1');\n  text = _.str.strip(text);\n\n  // return the text\n  return text;\n}"),
 625. (Types.Instrumented
         "function (action, metavarDefault) {\n  var result;\n  var metavars;\n\n  var buildMetavar = this._metavarFormatter(action, metavarDefault);\n\n  switch (action.nargs) {\n    case undefined:\n    case null:\n      metavars = buildMetavar(1);\n      result = '' + metavars[0];\n      break;\n    case $$.OPTIONAL:\n      metavars = buildMetavar(1);\n      result = '[' + metavars[0] + ']';\n      break;\n    case $$.ZERO_OR_MORE:\n      metavars = buildMetavar(2);\n      result = '[' + metavars[0] + '[' + metavars[1] + ' ...]]';\n      break;\n    case $$.ONE_OR_MORE:\n      metavars = buildMetavar(2);\n      result = '' + metavars[0] + '[' + metavars[1] + ' ...]';\n      break;\n    case $$.REMAINDER:\n      result = '...';\n      break;\n    case $$.PARSER:\n      metavars = buildMetavar(1);\n      result = metavars[0] + ' ...';\n      break;\n    default:\n      metavars = buildMetavar(action.nargs);\n      result = metavars.join(' ');\n  }\n  return result;\n}"),
 626. (Types.Instrumented
         "function (text) {\n  text = _.str.sprintf(text, {prog: this._prog});\n  var textWidth = this._width - this._currentIndent;\n  var indentIncriment = _.str.repeat(' ', this._currentIndent);\n  return this._fillText(text, textWidth, indentIncriment) + $$.EOL + $$.EOL;\n}"),
 627. (Types.Instrumented
         "function (usage, actions, groups, prefix) {\n  if (!prefix && !_.isString(prefix)) {\n      prefix = 'usage: ';\n  }\n\n  actions = actions || [];\n  groups = groups || [];\n\n\n  // if usage is specified, use that\n  if (usage) {\n    usage = _.str.sprintf(usage, {prog: this._prog});\n\n    // if no optionals or positionals are available, usage is just prog\n  } else if (!usage && actions.length === 0) {\n    usage = _.str.sprintf('%(prog)s' , {prog: this._prog});\n\n    // if optionals and positionals are available, calculate usage\n  } else if (!usage) {\n    var prog = _.str.sprintf('%(prog)s' , {prog: this._prog});\n    var optionals = [];\n    var positionals = [];\n    var actionUsage;\n    var textWidth;\n\n    // split optionals from positionals\n    actions.forEach(function (action) {\n      if (action.isOptional()) {\n        optionals.push(action);\n      } else {\n        positionals.push(action);\n      }\n    });\n\n    // build full usage string\n    actionUsage = this._formatActionsUsage([].concat(optionals, positionals), groups);\n    usage = [prog, actionUsage].join(' ');\n\n    // wrap the usage parts if it's too long\n    textWidth = this._width - this._currentIndent;\n    if ((prefix.length + usage.length) > textWidth) {\n\n      // break usage into wrappable parts\n      var regexpPart = new RegExp('\\\\(.*?\\\\)+|\\\\[.*?\\\\]+|\\\\S+', 'g');\n      var optionalUsage = this._formatActionsUsage(optionals, groups);\n      var positionalUsage = this._formatActionsUsage(positionals, groups);\n\n\n      var optionalParts = optionalUsage.match(regexpPart);\n      var positionalParts = positionalUsage.match(regexpPart) || [];\n\n      if (optionalParts.join(' ') !== optionalUsage) {\n        throw new Error('assert \"optionalParts.join(\\' \\') === optionalUsage\"');\n      }\n      if (positionalParts.join(' ') !== positionalUsage) {\n        throw new Error('assert \"positionalParts.join(\\' \\') === positionalUsage\"');\n      }\n\n      // helper for wrapping lines\n      var _getLines = function (parts, indent, prefix) {\n        var lines = [];\n        var line = [];\n\n        var lineLength = !!prefix ? prefix.length - 1: indent.length - 1;\n\n        parts.forEach(function (part) {\n          if (lineLength + 1 + part.length > textWidth) {\n            lines.push(indent + line.join(' '));\n            line = [];\n            lineLength = indent.length - 1;\n          }\n          line.push(part);\n          lineLength += part.length + 1;\n        });\n\n        if (line) {\n          lines.push(indent + line.join(' '));\n        }\n        if (prefix) {\n          lines[0] = lines[0].substr(indent.length);\n        }\n        return lines;\n      };\n\n      var lines, indent, parts;\n      // if prog is short, follow it with optionals or positionals\n      if (prefix.length + prog.length <= 0.75 * textWidth) {\n        indent = _.str.repeat(' ', (prefix.length + prog.length + 1));\n        if (optionalParts) {\n          lines = [].concat(\n            _getLines([prog].concat(optionalParts), indent, prefix),\n            _getLines(positionalParts, indent)\n          );\n        } else if (positionalParts) {\n          lines = _getLines([prog].concat(positionalParts), indent, prefix);\n        } else {\n          lines = [prog];\n        }\n\n        // if prog is long, put it on its own line\n      } else {\n        indent = _.str.repeat(' ', prefix.length);\n        parts = optionalParts + positionalParts;\n        lines = _getLines(parts, indent);\n        if (lines.length > 1) {\n          lines = [].concat(\n            _getLines(optionalParts, indent),\n            _getLines(positionalParts, indent)\n          );\n        }\n        lines = [prog] + lines;\n      }\n      // join lines into usage\n      usage = lines.join($$.EOL);\n    }\n  }\n\n  // prefix with 'usage:'\n  return prefix + usage + $$.EOL + $$.EOL;\n}"),
 628. (Types.Instrumented "function (action) {\n  return action.help;\n}"),
 629. (Types.Instrumented
         "function () {\n  this._currentIndent += this._indentIncriment;\n  this._level += 1;\n}"),
 630. (Types.Instrumented
         "function (partStrings) {\n  return partStrings.filter(function (part) {\n    return (!!part && part !== $$.SUPPRESS);\n  }).join('');\n}"),
 631. (Types.Instrumented
         "function (action, metavarDefault) {\n  var result;\n\n  if (!!action.metavar || action.metavar === '') {\n    result = action.metavar;\n  } else if (!!action.choices) {\n    var choices = action.choices;\n    if (!_.isString(choices)) {\n      if (_.isObject(choices)){\n        choices = _.keys(choices).join(',');\n      }\n      else\n      {\n        choices = choices.join(',');\n      }\n    }\n    result = '{' + choices + '}';\n  } else {\n    result = metavarDefault;\n  }\n  return function (size) {\n    if (Array.isArray(result)) {\n      return result;\n    } else {\n      var metavars = [];\n      for (var i = 0; i < size; i += 1) {\n        metavars.push(result);\n      }\n      return metavars;\n    }\n  };\n}"),
 632. (Types.Instrumented
         "function (text, width) {\n  var lines = [];\n  var delimiters = [\" \", \".\", \",\", \"!\", \"?\"];\n  var re = new RegExp('[' + delimiters.join('') + '][^' + delimiters.join('') + ']*$');\n\n  text = text.replace(/[\\n\\|\\t]/g, ' ');\n\n  text = _.str.strip(text);\n  text = text.replace(this._whitespaceMatcher, ' ');\n\n  // Wraps the single paragraph in text (a string) so every line\n  // is at most width characters long.\n  text.split($$.EOL).forEach(function (line) {\n    if (width >= line.length) {\n      lines.push(line);\n      return;\n    }\n\n    var wrapStart = 0;\n    var wrapEnd = width;\n    var delimiterIndex = 0;\n    while (wrapEnd <= line.length) {\n      if (wrapEnd !== line.length && delimiters.indexOf(line[wrapEnd] < -1)) {\n        delimiterIndex = (re.exec(line.substring(wrapStart, wrapEnd)) || {}).index;\n        wrapEnd = wrapStart + delimiterIndex + 1;\n      }\n      lines.push(line.substring(wrapStart, wrapEnd));\n      wrapStart = wrapEnd;\n      wrapEnd += width;\n    }\n    if (wrapStart < line.length) {\n      lines.push(line.substring(wrapStart, wrapEnd));\n    }\n  });\n\n  return lines;\n}"),
 633. (Types.Instrumented
         "function (action) {\n  if (action.help !== $$.SUPPRESS) {\n    var self = this;\n\n    // find all invocations\n    var invocations = [this._formatActionInvocation(action)];\n    var invocationLength = invocations[0].length;\n\n    var actionLength;\n\n    if (!!action._getSubactions) {\n      this._indent();\n      action._getSubactions().forEach(function (subaction) {\n\n        var invocationNew = self._formatActionInvocation(subaction);\n        invocations.push(invocationNew);\n        invocationLength = Math.max(invocationLength, invocationNew.length);\n\n      });\n      this._dedent();\n    }\n\n    // update the maximum item length\n    actionLength = invocationLength + this._currentIndent;\n    this._actionMaxLength = Math.max(this._actionMaxLength, actionLength);\n\n    // add the item to the list\n    this._addItem(this._formatAction, [action]);\n  }\n}"),
 634. (Types.Instrumented
         "function (actions) {\n  var self = this;\n  actions.forEach(function (action) {\n    self.addArgument(action);\n  });\n}"),
 635. (Types.Instrumented
         "function (text) {\n  if (!!text && text !== $$.SUPPRESS) {\n    this._addItem(this._formatText, [text]);\n  }\n}"),
 636. (Types.Instrumented
         "function (usage, actions, groups, prefix) {\n  if (usage !== $$.SUPPRESS) {\n    this._addItem(this._formatUsage, [usage, actions, groups, prefix]);\n  }\n}"),
 637. (Types.Instrumented
         "function () {\n  this._currentSection = this._currentSection._parent;\n  this._dedent();\n}"),
 638. (Types.Instrumented
         "function () {\n  var help = this._rootSection.formatHelp(this);\n  if (help) {\n    help = help.replace(this._longBreakMatcher, $$.EOL + $$.EOL);\n    help = _.str.strip(help, $$.EOL) + $$.EOL;\n  }\n  return help;\n}"),
 639. (Types.Instrumented
         "function (heading) {\n  this._indent();\n  var section = new Section(this._currentSection, heading);\n  var func = section.formatHelp.bind(section);\n  this._addItem(func, [this]);\n  this._currentSection = section;\n}"),
 640. (Types.Instrumented
         "function (key, defaultValue) {\n  return !this[key] ? defaultValue: this[key];\n}"),
 641. (Types.Instrumented "function (key) {\n  return !!this[key];\n}"),
 642. (Types.Instrumented
         "function (key, value) {\n  if (typeof (key) === 'object') {\n    _.extend(this, key);\n  } else {\n    if (value !== null) {\n      this[key] = value;\n    } else {\n      delete this[key];\n    }\n  }\n  return this;\n}"),
 643. (Types.Instrumented
         "function (key, defaultValue) {\n  var value = this[key];\n  if (value !== null) {\n    delete this[key];\n    return value;\n  } else {\n    return defaultValue;\n  }\n}"),
 644. (Types.Instrumented
         "function (tokType) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma) this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    this.next();\n    return true;\n  }\n}"),
 645. (Types.Instrumented
         "function (prevType) {\n  var parent = undefined;\n  if (prevType === tt.colon && (parent = this.curContext()).token == \"{\") return !parent.isExpr;\n  if (prevType === tt._return) return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof) return true;\n  if (prevType == tt.braceL) return this.curContext() === types.b_stat;\n  return !this.exprAllowed;\n}"),
 646. (Types.Instrumented
         "function () {\n  return this.type === tt.eof || this.type === tt.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n}"),
 647. (Types.Instrumented
         "function (expr, isBinding, checkClashes) {\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && (reservedWords.strictBind(expr.name) || reservedWords.strict(expr.name))) this.raise(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      if (checkClashes) {\n        if (has(checkClashes, expr.name)) this.raise(expr.start, \"Argument name clash in strict mode\");\n        checkClashes[expr.name] = true;\n      }\n      break;\n\n    case \"MemberExpression\":\n      if (isBinding) this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\");\n      break;\n\n    case \"ObjectPattern\":\n      for (var i = 0; i < expr.properties.length; i++) {\n        this.checkLVal(expr.properties[i].value, isBinding, checkClashes);\n      }break;\n\n    case \"ArrayPattern\":\n      for (var i = 0; i < expr.elements.length; i++) {\n        var elem = expr.elements[i];\n        if (elem) this.checkLVal(elem, isBinding, checkClashes);\n      }\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, isBinding, checkClashes);\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, isBinding, checkClashes);\n      break;\n\n    default:\n      this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n}"),
 648. (Types.Instrumented
         "function (prop, propHash) {\n  if (this.options.ecmaVersion >= 6) return;\n  var key = prop.key,\n      name = undefined;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;break;\n    case \"Literal\":\n      name = String(key.value);break;\n    default:\n      return;\n  }\n  var kind = prop.kind || \"init\",\n      other = undefined;\n  if (has(propHash, name)) {\n    other = propHash[name];\n    var isGetSet = kind !== \"init\";\n    if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init)) this.raise(key.start, \"Redefinition of property\");\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n}"),
 649. (Types.Instrumented
         "function () {\n  return this.context[this.context.length - 1];\n}"),
 650. (Types.Instrumented
         "function () {\n  return new Position(this.curLine, this.pos - this.lineStart);\n}"),
 651. (Types.Instrumented
         "function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n}"),
 652. (Types.Instrumented
         "function (name) {\n  return this.value === name && this.eat(tt.name);\n}"),
 653. (Types.Instrumented
         "function (type) {\n  this.eat(type) || this.unexpected();\n}"),
 654. (Types.Instrumented
         "function (name) {\n  if (!this.eatContextual(name)) this.unexpected();\n}"),
 655. (Types.Instrumented
         "function (name, f) {\n  this[name] = f(this[name]);\n}"),
 656. (Types.Instrumented
         "function (node, type) {\n  node.type = type;\n  node.end = this.lastTokEnd;\n  if (this.options.locations) node.loc.end = this.lastTokEndLoc;\n  if (this.options.ranges) node.range[1] = this.lastTokEnd;\n  return node;\n}"),
 657. (Types.Instrumented
         "function (node, type, pos) {\n  if (this.options.locations) {\n    node.loc.end = pos[1];pos = pos[0];\n  }\n  node.type = type;\n  node.end = pos;\n  if (this.options.ranges) node.range[1] = pos;\n  return node;\n}"),
 658. (Types.Instrumented
         "function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n}"),
 659. (Types.Instrumented
         "function (type, val) {\n  this.end = this.pos;\n  if (this.options.locations) this.endLoc = this.curPosition();\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n}"),
 660. (Types.Instrumented
         "function () {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 55295 || code >= 57344) return code;\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 56613888;\n}"),
 661. (Types.Instrumented
         "function () {\n  this.next();\n  return new Token(this);\n}"),
 662. (Types.Instrumented
         "function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n\n    // Punctuation tokens.\n    case 40:\n      ++this.pos;return this.finishToken(tt.parenL);\n    case 41:\n      ++this.pos;return this.finishToken(tt.parenR);\n    case 59:\n      ++this.pos;return this.finishToken(tt.semi);\n    case 44:\n      ++this.pos;return this.finishToken(tt.comma);\n    case 91:\n      ++this.pos;return this.finishToken(tt.bracketL);\n    case 93:\n      ++this.pos;return this.finishToken(tt.bracketR);\n    case 123:\n      ++this.pos;return this.finishToken(tt.braceL);\n    case 125:\n      ++this.pos;return this.finishToken(tt.braceR);\n    case 58:\n      ++this.pos;return this.finishToken(tt.colon);\n    case 63:\n      ++this.pos;return this.finishToken(tt.question);\n\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) break;\n      ++this.pos;\n      return this.finishToken(tt.backQuote);\n\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number\n      }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n      // 1-9\n      return this.readNumber(false);\n\n    // Quotes produce strings.\n    case 34:case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // '/'\n      return this.readToken_slash();\n\n    case 37:case 42:\n      // '%*'\n      return this.readToken_mult_modulo(code);\n\n    case 124:case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n\n    case 94:\n      // '^'\n      return this.readToken_caret();\n\n    case 43:case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n\n    case 60:case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n\n    case 61:case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n\n    case 126:\n      // '~'\n      return this.finishOp(tt.prefix, 1);\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n}"),
 663. (Types.Instrumented
         "function (node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n}"),
 664. (Types.Instrumented "function () {\n  return [types.b_stat];\n}"),
 665. (Types.Instrumented
         "function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    return true;\n  }\n}"),
 666. (Types.Instrumented
         "function (name) {\n  return this.type === tt.name && this.value === name;\n}"),
 667. (Types.Instrumented
         "function (stmt) {\n  return this.options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n}"),
 668. (Types.Instrumented
         "function (plugins) {\n  for (var _name in plugins) {\n    var plugin = exports.plugins[_name];\n    if (!plugin) throw new Error(\"Plugin '\" + _name + \"' not found\");\n    plugin(this, plugins[_name]);\n  }\n}"),
 669. (Types.Instrumented
         "function () {\n  return this.options.locations ? [this.start, this.startLoc] : this.start;\n}"),
 670. (Types.Instrumented
         "function () {\n  if (this.options.onToken) this.options.onToken(new Token(this));\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n}"),
 671. (Types.Instrumented
         "function () {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n  this.start = this.pos;\n  if (this.options.locations) this.startLoc = this.curPosition();\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof);\n\n  if (curContext.override) return curContext.override(this);else this.readToken(this.fullCharCodeAtPos());\n}"),
 672. (Types.Instrumented
         "function (node, params) {\n  this.initFunction(node);\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n}"),
 673. (Types.Instrumented
         "function () {\n  if (this.options.ecmaVersion < 6) return this.parseIdent();\n  switch (this.type) {\n    case tt.name:\n      return this.parseIdent();\n\n    case tt.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(tt.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\");\n\n    case tt.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n}"),
 674. (Types.Instrumented
         "function (close, allowEmpty, allowTrailingComma) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (first) first = false;else this.expect(tt.comma);\n    if (allowEmpty && this.type === tt.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break;\n    } else if (this.type === tt.ellipsis) {\n      elts.push(this.parseRest());\n      this.expect(close);\n      break;\n    } else {\n      elts.push(this.parseMaybeDefault());\n    }\n  }\n  return elts;\n}"),
 675. (Types.Instrumented
         "function (allowStrict) {\n  var node = this.startNode(),\n      first = true,\n      oldStrict = undefined;\n  node.body = [];\n  this.expect(tt.braceL);\n  while (!this.eat(tt.braceR)) {\n    var stmt = this.parseStatement(true);\n    node.body.push(stmt);\n    if (first && allowStrict && this.isUseStrict(stmt)) {\n      oldStrict = this.strict;\n      this.setStrict(this.strict = true);\n    }\n    first = false;\n  }\n  if (oldStrict === false) this.setStrict(false);\n  return this.finishNode(node, \"BlockStatement\");\n}"),
 676. (Types.Instrumented
         "function (node, keyword) {\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null;else if (this.type !== tt.name) this.unexpected();else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  for (var i = 0; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n}"),
 677. (Types.Instrumented
         "function (node, isStatement) {\n  this.next();\n  node.id = this.type === tt.name ? this.parseIdent() : isStatement ? this.unexpected() : null;\n  node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  var classBody = this.startNode();\n  classBody.body = [];\n  this.expect(tt.braceL);\n  while (!this.eat(tt.braceR)) {\n    if (this.eat(tt.semi)) continue;\n    var method = this.startNode();\n    var isGenerator = this.eat(tt.star);\n    this.parsePropertyName(method);\n    if (this.type !== tt.parenL && !method.computed && method.key.type === \"Identifier\" && method.key.name === \"static\") {\n      if (isGenerator) this.unexpected();\n      method[\"static\"] = true;\n      isGenerator = this.eat(tt.star);\n      this.parsePropertyName(method);\n    } else {\n      method[\"static\"] = false;\n    }\n    method.kind = \"method\";\n    if (!method.computed && !isGenerator) {\n      if (method.key.type === \"Identifier\") {\n        if (this.type !== tt.parenL && (method.key.name === \"get\" || method.key.name === \"set\")) {\n          method.kind = method.key.name;\n          this.parsePropertyName(method);\n        } else if (!method[\"static\"] && method.key.name === \"constructor\") {\n          method.kind = \"constructor\";\n        }\n      } else if (!method[\"static\"] && method.key.type === \"Literal\" && method.key.value === \"constructor\") {\n        method.kind = \"constructor\";\n      }\n    }\n    method.value = this.parseMethod(isGenerator);\n    classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n}"),
 678. (Types.Instrumented
         "function (node, isGenerator) {\n  node.blocks = [];\n  while (this.type === tt._for) {\n    var block = this.startNode();\n    this.next();\n    this.expect(tt.parenL);\n    block.left = this.parseBindingAtom();\n    this.checkLVal(block.left, true);\n    this.expectContextual(\"of\");\n    block.right = this.parseExpression();\n    this.expect(tt.parenR);\n    node.blocks.push(this.finishNode(block, \"ComprehensionBlock\"));\n  }\n  node.filter = this.eat(tt._if) ? this.parseParenExpression() : null;\n  node.body = this.parseExpression();\n  this.expect(isGenerator ? tt.parenR : tt.bracketR);\n  node.generator = isGenerator;\n  return this.finishNode(node, \"ComprehensionExpression\");\n}"),
 679. (Types.Instrumented
         "function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n}"),
 680. (Types.Instrumented
         "function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(tt._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6) this.eat(tt.semi);else this.semicolon();\n  return this.finishNode(node, \"DoWhileStatement\");\n}"),
 681. (Types.Instrumented
         "function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n}"),
 682. (Types.Instrumented
         "function (node) {\n  this.next();\n  // export * from '...'\n  if (this.eat(tt.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n  if (this.eat(tt._default)) {\n    // export default ...\n    var expr = this.parseMaybeAssign();\n    var needsSemi = true;\n    if (expr.type == \"FunctionExpression\" || expr.type == \"ClassExpression\") {\n      needsSemi = false;\n      if (expr.id) {\n        expr.type = expr.type == \"FunctionExpression\" ? \"FunctionDeclaration\" : \"ClassDeclaration\";\n      }\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  }\n  // export var|const|let|function|class ...\n  if (this.type.keyword) {\n    node.declaration = this.parseStatement(true);\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n}"),
 683. (Types.Instrumented
         "function () {\n  var nodes = [],\n      first = true;\n  // export { x, y as z } [from '...']\n  this.expect(tt.braceL);\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma);\n      if (this.afterTrailingComma(tt.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.local = this.parseIdent(this.type === tt._default);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes;\n}"),
 684. (Types.Instrumented
         "function (refShorthandDefaultPos) {\n  var node = undefined;\n  switch (this.type) {\n    case tt._this:\n    case tt._super:\n      var type = this.type === tt._this ? \"ThisExpression\" : \"Super\";\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, type);\n\n    case tt._yield:\n      if (this.inGenerator) this.unexpected();\n\n    case tt.name:\n      var start = this.markPosition();\n      var id = this.parseIdent(this.type !== tt.name);\n      if (!this.canInsertSemicolon() && this.eat(tt.arrow)) {\n        return this.parseArrowExpression(this.startNodeAt(start), [id]);\n      }\n      return id;\n\n    case tt.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = { pattern: value.pattern, flags: value.flags };\n      return node;\n\n    case tt.num:case tt.string:\n      return this.parseLiteral(this.value);\n\n    case tt._null:case tt._true:case tt._false:\n      node = this.startNode();\n      node.value = this.type === tt._null ? null : this.type === tt._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n\n    case tt.parenL:\n      return this.parseParenAndDistinguishExpression();\n\n    case tt.bracketL:\n      node = this.startNode();\n      this.next();\n      // check whether this is array comprehension or regular array\n      if (this.options.ecmaVersion >= 7 && this.type === tt._for) {\n        return this.parseComprehension(node, false);\n      }\n      node.elements = this.parseExprList(tt.bracketR, true, true, refShorthandDefaultPos);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case tt.braceL:\n      return this.parseObj(false, refShorthandDefaultPos);\n\n    case tt._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, false);\n\n    case tt._class:\n      return this.parseClass(this.startNode(), false);\n\n    case tt._new:\n      return this.parseNew();\n\n    case tt.backQuote:\n      return this.parseTemplate();\n\n    default:\n      this.unexpected();\n  }\n}"),
 685. (Types.Instrumented
         "function (close, allowTrailingComma, allowEmpty, refShorthandDefaultPos) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(tt.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) break;\n    } else first = false;\n\n    if (allowEmpty && this.type === tt.comma) {\n      elts.push(null);\n    } else {\n      if (this.type === tt.ellipsis) elts.push(this.parseSpread(refShorthandDefaultPos));else elts.push(this.parseMaybeAssign(false, refShorthandDefaultPos));\n    }\n  }\n  return elts;\n}"),
 686. (Types.Instrumented
         "function (left, leftStart, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== tt._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(leftStart);\n      node.left = left;\n      node.operator = this.value;\n      var op = this.type;\n      this.next();\n      var start = this.markPosition();\n      node.right = this.parseExprOp(this.parseMaybeUnary(), start, prec, noIn);\n      this.finishNode(node, op === tt.logicalOR || op === tt.logicalAND ? \"LogicalExpression\" : \"BinaryExpression\");\n      return this.parseExprOp(node, leftStart, minPrec, noIn);\n    }\n  }\n  return left;\n}"),
 687. (Types.Instrumented
         "function (noIn, refShorthandDefaultPos) {\n  var start = this.markPosition();\n  var expr = this.parseMaybeUnary(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  return this.parseExprOp(expr, start, -1, noIn);\n}"),
 688. (Types.Instrumented
         "function (refShorthandDefaultPos) {\n  var start = this.markPosition();\n  var expr = this.parseExprAtom(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  return this.parseSubscripts(expr, start);\n}"),
 689. (Types.Instrumented
         "function (noIn, refShorthandDefaultPos) {\n  var start = this.markPosition();\n  var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);\n  if (this.type === tt.comma) {\n    var node = this.startNodeAt(start);\n    node.expressions = [expr];\n    while (this.eat(tt.comma)) node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n}"),
 690. (Types.Instrumented
         "function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n}"),
 691. (Types.Instrumented
         "function (node, init) {\n  node.init = init;\n  this.expect(tt.semi);\n  node.test = this.type === tt.semi ? null : this.parseExpression();\n  this.expect(tt.semi);\n  node.update = this.type === tt.parenR ? null : this.parseExpression();\n  this.expect(tt.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n}"),
 692. (Types.Instrumented
         "function (node, init) {\n  var type = this.type === tt._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(tt.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type);\n}"),
 693. (Types.Instrumented
         "function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.expect(tt.parenL);\n  if (this.type === tt.semi) return this.parseFor(node, null);\n  if (this.type === tt._var || this.type === tt._let || this.type === tt._const) {\n    var _init = this.startNode(),\n        varKind = this.type;\n    this.next();\n    this.parseVar(_init, true, varKind);\n    this.finishNode(_init, \"VariableDeclaration\");\n    if ((this.type === tt._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && _init.declarations.length === 1 && !(varKind !== tt._var && _init.declarations[0].init)) return this.parseForIn(node, _init);\n    return this.parseFor(node, _init);\n  }\n  var refShorthandDefaultPos = { start: 0 };\n  var init = this.parseExpression(true, refShorthandDefaultPos);\n  if (this.type === tt._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n    this.toAssignable(init);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else if (refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n  return this.parseFor(node, init);\n}"),
 694. (Types.Instrumented
         "function (node, isStatement, allowExpressionBody) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) node.generator = this.eat(tt.star);\n  if (isStatement || this.type === tt.name) node.id = this.parseIdent();\n  this.expect(tt.parenL);\n  node.params = this.parseBindingList(tt.parenR, false, false);\n  this.parseFunctionBody(node, allowExpressionBody);\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n}"),
 695. (Types.Instrumented
         "function (node, allowExpression) {\n  var isExpression = allowExpression && this.type !== tt.braceL;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.inFunction,\n        oldInGen = this.inGenerator,\n        oldLabels = this.labels;\n    this.inFunction = true;this.inGenerator = node.generator;this.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.inFunction = oldInFunc;this.inGenerator = oldInGen;this.labels = oldLabels;\n  }\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  if (this.strict || !isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) {\n    var nameHash = {},\n        oldStrict = this.strict;\n    this.strict = true;\n    if (node.id) this.checkLVal(node.id, true);\n    for (var i = 0; i < node.params.length; i++) {\n      this.checkLVal(node.params[i], true, nameHash);\n    }this.strict = oldStrict;\n  }\n}"),
 696. (Types.Instrumented
         "function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n}"),
 697. (Types.Instrumented
         "function (liberal) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") liberal = false;\n  if (this.type === tt.name) {\n    if (!liberal && (!this.options.allowReserved && this.isReservedWord(this.value) || this.strict && reservedWords.strict(this.value) && (this.options.ecmaVersion >= 6 || this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1))) this.raise(this.start, \"The keyword '\" + this.value + \"' is reserved\");\n    node.name = this.value;\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, \"Identifier\");\n}"),
 698. (Types.Instrumented
         "function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(tt._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, \"IfStatement\");\n}"),
 699. (Types.Instrumented
         "function (node) {\n  this.next();\n  // import '...'\n  if (this.type === tt.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n    node.kind = \"\";\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n}"),
 700. (Types.Instrumented
         "function () {\n  var nodes = [],\n      first = true;\n  if (this.type === tt.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(tt.comma)) return nodes;\n  }\n  if (this.type === tt.star) {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n  this.expect(tt.braceL);\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma);\n      if (this.afterTrailingComma(tt.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.imported = this.parseIdent(true);\n    node.local = this.eatContextual(\"as\") ? this.parseIdent() : node.imported;\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportSpecifier\"));\n  }\n  return nodes;\n}"),
 701. (Types.Instrumented
         "function (node, maybeName, expr) {\n  for (var i = 0; i < this.labels.length; ++i) {\n    if (this.labels[i].name === maybeName) this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  }var kind = this.type.isLoop ? \"loop\" : this.type === tt._switch ? \"switch\" : null;\n  this.labels.push({ name: maybeName, kind: kind });\n  node.body = this.parseStatement(true);\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n}"),
 702. (Types.Instrumented
         "function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\");\n}"),
 703. (Types.Instrumented
         "function (noIn, refShorthandDefaultPos) {\n  if (this.type == tt._yield && this.inGenerator) return this.parseYield();\n\n  var failOnShorthandAssign = undefined;\n  if (!refShorthandDefaultPos) {\n    refShorthandDefaultPos = { start: 0 };\n    failOnShorthandAssign = true;\n  } else {\n    failOnShorthandAssign = false;\n  }\n  var start = this.markPosition();\n  var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos);\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(start);\n    node.operator = this.value;\n    node.left = this.type === tt.eq ? this.toAssignable(left) : left;\n    refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n  return left;\n}"),
 704. (Types.Instrumented
         "function (noIn, refShorthandDefaultPos) {\n  var start = this.markPosition();\n  var expr = this.parseExprOps(noIn, refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  if (this.eat(tt.question)) {\n    var node = this.startNodeAt(start);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(tt.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n}"),
 705. (Types.Instrumented
         "function (startPos, left) {\n  startPos = startPos || this.markPosition();\n  left = left || this.parseBindingAtom();\n  if (!this.eat(tt.eq)) return left;\n  var node = this.startNodeAt(startPos);\n  node.operator = \"=\";\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n}"),
 706. (Types.Instrumented
         "function (refShorthandDefaultPos) {\n  if (this.type.prefix) {\n    var node = this.startNode(),\n        update = this.type === tt.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary();\n    if (refShorthandDefaultPos && refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);\n    if (update) this.checkLVal(node.argument);else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") this.raise(node.start, \"Deleting local variable in strict mode\");\n    return this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  }\n  var start = this.markPosition();\n  var expr = this.parseExprSubscripts(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  while (this.type.postfix && !this.canInsertSemicolon()) {\n    var node = this.startNodeAt(start);\n    node.operator = this.value;\n    node.prefix = false;\n    node.argument = expr;\n    this.checkLVal(expr);\n    this.next();\n    expr = this.finishNode(node, \"UpdateExpression\");\n  }\n  return expr;\n}"),
 707. (Types.Instrumented
         "function (isGenerator) {\n  var node = this.startNode();\n  this.initFunction(node);\n  this.expect(tt.parenL);\n  node.params = this.parseBindingList(tt.parenR, false, false);\n  var allowExpressionBody = undefined;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = isGenerator;\n    allowExpressionBody = true;\n  } else {\n    allowExpressionBody = false;\n  }\n  this.parseFunctionBody(node, allowExpressionBody);\n  return this.finishNode(node, \"FunctionExpression\");\n}"),
 708. (Types.Instrumented
         "function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\") this.raise(node.property.start, \"The only valid meta property for new is new.target\");\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  var start = this.markPosition();\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true);\n  if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, false);else node.arguments = empty;\n  return this.finishNode(node, \"NewExpression\");\n}"),
 709. (Types.Instrumented
         "function (isPattern, refShorthandDefaultPos) {\n  var node = this.startNode(),\n      first = true,\n      propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma);\n      if (this.afterTrailingComma(tt.braceR)) break;\n    } else first = false;\n\n    var prop = this.startNode(),\n        isGenerator = undefined,\n        start = undefined;\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refShorthandDefaultPos) start = this.markPosition();\n      if (!isPattern) isGenerator = this.eat(tt.star);\n    }\n    this.parsePropertyName(prop);\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault() : this.parseMaybeAssign(false, refShorthandDefaultPos);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator);\n    } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && (this.type != tt.comma && this.type != tt.braceR)) {\n      if (isGenerator || isPattern) this.unexpected();\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      prop.kind = \"init\";\n      if (isPattern) {\n        if (this.isKeyword(prop.key.name) || this.strict && (reservedWords.strictBind(prop.key.name) || reservedWords.strict(prop.key.name)) || !this.options.allowReserved && this.isReservedWord(prop.key.name)) this.raise(prop.key.start, \"Binding \" + prop.key.name);\n        prop.value = this.parseMaybeDefault(start, prop.key);\n      } else if (this.type === tt.eq && refShorthandDefaultPos) {\n        if (!refShorthandDefaultPos.start) refShorthandDefaultPos.start = this.start;\n        prop.value = this.parseMaybeDefault(start, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else this.unexpected();\n\n    this.checkPropClash(prop, propHash);\n    node.properties.push(this.finishNode(prop, \"Property\"));\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n}"),
 710. (Types.Instrumented
         "function () {\n  var start = this.markPosition(),\n      val = undefined;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    if (this.options.ecmaVersion >= 7 && this.type === tt._for) {\n      return this.parseComprehension(this.startNodeAt(start), true);\n    }\n\n    var innerStart = this.markPosition(),\n        exprList = [],\n        first = true;\n    var refShorthandDefaultPos = { start: 0 },\n        spreadStart = undefined,\n        innerParenStart = undefined;\n    while (this.type !== tt.parenR) {\n      first ? first = false : this.expect(tt.comma);\n      if (this.type === tt.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseRest());\n        break;\n      } else {\n        if (this.type === tt.parenL && !innerParenStart) {\n          innerParenStart = this.start;\n        }\n        exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos));\n      }\n    }\n    var innerEnd = this.markPosition();\n    this.expect(tt.parenR);\n\n    if (!this.canInsertSemicolon() && this.eat(tt.arrow)) {\n      if (innerParenStart) this.unexpected(innerParenStart);\n      return this.parseArrowExpression(this.startNodeAt(start), exprList);\n    }\n\n    if (!exprList.length) this.unexpected(this.lastTokStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStart);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEnd);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(start);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n}"),
 711. (Types.Instrumented
         "function () {\n  this.expect(tt.parenL);\n  var val = this.parseExpression();\n  this.expect(tt.parenR);\n  return val;\n}"),
 712. (Types.Instrumented
         "function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tt.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(tt.bracketR);\n      return;\n    } else {\n      prop.computed = false;\n    }\n  }\n  prop.key = this.type === tt.num || this.type === tt.string ? this.parseExprAtom() : this.parseIdent(true);\n}"),
 713. (Types.Instrumented
         "function () {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected();\n  return this.finishNode(node, \"RestElement\");\n}"),
 714. (Types.Instrumented
         "function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) this.raise(this.start, \"'return' outside of function\");\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null;else {\n    node.argument = this.parseExpression();this.semicolon();\n  }\n  return this.finishNode(node, \"ReturnStatement\");\n}"),
 715. (Types.Instrumented
         "function (refShorthandDefaultPos) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(refShorthandDefaultPos);\n  return this.finishNode(node, \"SpreadElement\");\n}"),
 716. (Types.Instrumented
         "function (declaration, topLevel) {\n  var starttype = this.type,\n      node = this.startNode();\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case tt._break:case tt._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case tt._debugger:\n      return this.parseDebuggerStatement(node);\n    case tt._do:\n      return this.parseDoStatement(node);\n    case tt._for:\n      return this.parseForStatement(node);\n    case tt._function:\n      if (!declaration && this.options.ecmaVersion >= 6) this.unexpected();\n      return this.parseFunctionStatement(node);\n    case tt._class:\n      if (!declaration) this.unexpected();\n      return this.parseClass(node, true);\n    case tt._if:\n      return this.parseIfStatement(node);\n    case tt._return:\n      return this.parseReturnStatement(node);\n    case tt._switch:\n      return this.parseSwitchStatement(node);\n    case tt._throw:\n      return this.parseThrowStatement(node);\n    case tt._try:\n      return this.parseTryStatement(node);\n    case tt._let:case tt._const:\n      if (!declaration) this.unexpected(); // NOTE: falls through to _var\n    case tt._var:\n      return this.parseVarStatement(node, starttype);\n    case tt._while:\n      return this.parseWhileStatement(node);\n    case tt._with:\n      return this.parseWithStatement(node);\n    case tt.braceL:\n      return this.parseBlock();\n    case tt.semi:\n      return this.parseEmptyStatement(node);\n    case tt._export:\n    case tt._import:\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        if (!this.inModule) this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n      }\n      return starttype === tt._import ? this.parseImport(node) : this.parseExport(node);\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      var maybeName = this.value,\n          expr = this.parseExpression();\n      if (starttype === tt.name && expr.type === \"Identifier\" && this.eat(tt.colon)) return this.parseLabeledStatement(node, maybeName, expr);else return this.parseExpressionStatement(node, expr);\n  }\n}"),
 717. (Types.Instrumented
         "function (base, start, noCalls) {\n  if (this.eat(tt.dot)) {\n    var node = this.startNodeAt(start);\n    node.object = base;\n    node.property = this.parseIdent(true);\n    node.computed = false;\n    return this.parseSubscripts(this.finishNode(node, \"MemberExpression\"), start, noCalls);\n  } else if (this.eat(tt.bracketL)) {\n    var node = this.startNodeAt(start);\n    node.object = base;\n    node.property = this.parseExpression();\n    node.computed = true;\n    this.expect(tt.bracketR);\n    return this.parseSubscripts(this.finishNode(node, \"MemberExpression\"), start, noCalls);\n  } else if (!noCalls && this.eat(tt.parenL)) {\n    var node = this.startNodeAt(start);\n    node.callee = base;\n    node.arguments = this.parseExprList(tt.parenR, false);\n    return this.parseSubscripts(this.finishNode(node, \"CallExpression\"), start, noCalls);\n  } else if (this.type === tt.backQuote) {\n    var node = this.startNodeAt(start);\n    node.tag = base;\n    node.quasi = this.parseTemplate();\n    return this.parseSubscripts(this.finishNode(node, \"TaggedTemplateExpression\"), start, noCalls);\n  }return base;\n}"),
 718. (Types.Instrumented
         "function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(tt.braceL);\n  this.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  for (var cur, sawDefault; this.type != tt.braceR;) {\n    if (this.type === tt._case || this.type === tt._default) {\n      var isCase = this.type === tt._case;\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raise(this.lastTokStart, \"Multiple default clauses\");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(tt.colon);\n    } else {\n      if (!cur) this.unexpected();\n      cur.consequent.push(this.parseStatement(true));\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\");\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n}"),
 719. (Types.Instrumented
         "function () {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(tt.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(tt.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement());\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n}"),
 720. (Types.Instrumented
         "function () {\n  var elem = this.startNode();\n  elem.value = {\n    raw: this.input.slice(this.start, this.end),\n    cooked: this.value\n  };\n  this.next();\n  elem.tail = this.type === tt.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n}"),
 721. (Types.Instrumented
         "function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n}"),
 722. (Types.Instrumented
         "function (node) {\n  var first = true;\n  if (!node.body) node.body = [];\n  while (this.type !== tt.eof) {\n    var stmt = this.parseStatement(true, true);\n    node.body.push(stmt);\n    if (first && this.isUseStrict(stmt)) this.setStrict(true);\n    first = false;\n  }\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\");\n}"),
 723. (Types.Instrumented
         "function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === tt._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(tt.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true);\n    this.expect(tt.parenR);\n    clause.guard = null;\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.guardedHandlers = empty;\n  node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer) this.raise(node.start, \"Missing catch or finally clause\");\n  return this.finishNode(node, \"TryStatement\");\n}"),
 724. (Types.Instrumented
         "function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind.keyword;\n  for (;;) {\n    var decl = this.startNode();\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, true);\n    if (this.eat(tt.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === tt._const && !(this.type === tt._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this.type === tt._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(tt.comma)) break;\n  }\n  return node;\n}"),
 725. (Types.Instrumented
         "function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n}"),
 726. (Types.Instrumented
         "function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n}"),
 727. (Types.Instrumented
         "function (node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n}"),
 728. (Types.Instrumented
         "function () {\n  var node = this.startNode();\n  this.next();\n  if (this.type == tt.semi || this.canInsertSemicolon() || this.type != tt.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(tt.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n}"),
 729. (Types.Instrumented
         "function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;err.loc = loc;err.raisedAt = this.pos;\n  throw err;\n}"),
 730. (Types.Instrumented
         "function () {\n  var ch = this.input.charCodeAt(this.pos),\n      code = undefined;\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected();\n    ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 1114111) this.unexpected();\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code;\n}"),
 731. (Types.Instrumented
         "function () {\n  var ch = this.input.charCodeAt(++this.pos);\n  var octal = /^[0-7]+/.exec(this.input.slice(this.pos, this.pos + 3));\n  if (octal) octal = octal[0];\n  while (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n  if (octal === \"0\") octal = null;\n  ++this.pos;\n  if (octal) {\n    if (this.strict) this.raise(this.pos - 2, \"Octal literal in strict mode\");\n    this.pos += octal.length - 1;\n    return String.fromCharCode(parseInt(octal, 8));\n  } else {\n    switch (ch) {\n      case 110:\n        return \"\\n\"; // 'n' -> '\\n'\n      case 114:\n        return \"\\r\"; // 'r' -> '\\r'\n      case 120:\n        return String.fromCharCode(this.readHexChar(2)); // 'x'\n      case 117:\n        return codePointToString(this.readCodePoint()); // 'u'\n      case 116:\n        return \"\\t\"; // 't' -> '\\t'\n      case 98:\n        return \"\\b\"; // 'b' -> '\\b'\n      case 118:\n        return \"\\u000b\"; // 'v' -> '\\u000b'\n      case 102:\n        return \"\\f\"; // 'f' -> '\\f'\n      case 48:\n        return \"\\u0000\"; // 0 -> '\\0'\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) ++this.pos; // '\\r\\n'\n      case 10:\n        // ' \\n'\n        if (this.options.locations) {\n          this.lineStart = this.pos;++this.curLine;\n        }\n        return \"\";\n      default:\n        return String.fromCharCode(ch);\n    }\n  }\n}"),
 732. (Types.Instrumented
         "function (len) {\n  var n = this.readInt(16, len);\n  if (n === null) this.raise(this.start, \"Bad character escape sequence\");\n  return n;\n}"),
 733. (Types.Instrumented
         "function (radix, len) {\n  var start = this.pos,\n      total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this.input.charCodeAt(this.pos),\n        val = undefined;\n    if (code >= 97) val = code - 97 + 10; // a\n    else if (code >= 65) val = code - 65 + 10; // A\n    else if (code >= 48 && code <= 57) val = code - 48; // 0-9\n    else val = Infinity;\n    if (val >= radix) break;\n    ++this.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null;\n\n  return total;\n}"),
 734. (Types.Instrumented
         "function (startsWithDot) {\n  var start = this.pos,\n      isFloat = false,\n      octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n  if (this.input.charCodeAt(this.pos) === 46) {\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n  }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 69 || next === 101) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) ++this.pos; // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    isFloat = true;\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n\n  var str = this.input.slice(start, this.pos),\n      val = undefined;\n  if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\");else val = parseInt(str, 8);\n  return this.finishToken(tt.num, val);\n}"),
 735. (Types.Instrumented
         "function (radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n  return this.finishToken(tt.num, val);\n}"),
 736. (Types.Instrumented
         "function () {\n  var escaped = undefined,\n      inClass = undefined,\n      start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) this.raise(start, \"Unterminated regular expression\");\n    if (!escaped) {\n      if (ch === \"[\") inClass = true;else if (ch === \"]\" && inClass) inClass = false;else if (ch === \"/\" && !inClass) break;\n      escaped = ch === \"\\\\\";\n    } else escaped = false;\n    ++this.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content;\n  if (mods) {\n    var validFlags = /^[gmsiy]*$/;\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gmsiyu]*$/;\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n    if (mods.indexOf(\"u\") >= 0 && !regexpUnicodeSupport) {\n      // Replace each astral symbol and every Unicode escape sequence that\n      // possibly represents an astral symbol or a paired surrogate with a\n      // single ASCII symbol to avoid throwing on regular expressions that\n      // are only valid in combination with the `/u` flag.\n      // Note: replacing with the ASCII symbol `x` might cause false\n      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n      // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n      // be replaced by `[x-b]` which throws an error.\n      tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|\\\\u\\{([0-9a-fA-F]+)\\}|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n    }\n  }\n  // Detect invalid regular expressions.\n  try {\n    new RegExp(tmp);\n  } catch (e) {\n    if (e instanceof SyntaxError) this.raise(start, \"Error parsing regular expression: \" + e.message);\n    this.raise(e);\n  }\n  // Get a regular expression object for this pattern-flag pair, or `null` in\n  // case the current environment doesn't support the flags it uses.\n  var value = undefined;\n  try {\n    value = new RegExp(content, mods);\n  } catch (err) {\n    value = null;\n  }\n  return this.finishToken(tt.regexp, { pattern: content, flags: mods, value: value });\n}"),
 737. (Types.Instrumented
         "function (quote) {\n  var out = \"\",\n      chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) break;\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar();\n      chunkStart = this.pos;\n    } else {\n      if (isNewLine(ch)) this.raise(this.start, \"Unterminated string constant\");\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(tt.string, out);\n}"),
 738. (Types.Instrumented
         "function () {\n  var out = \"\",\n      chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n      // '`', '${'\n      if (this.pos === this.start && this.type === tt.template) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(tt.dollarBraceL);\n        } else {\n          ++this.pos;\n          return this.finishToken(tt.backQuote);\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(tt.template, out);\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar();\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out += \"\\n\";\n      } else {\n        out += String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n}"),
 739. (Types.Instrumented
         "function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */) return this.readWord();\n\n  return this.getTokenFromCode(code);\n}"),
 740. (Types.Instrumented
         "function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(tt.assign, 2);\n  return this.finishOp(tt.bitwiseXOR, 1);\n}"),
 741. (Types.Instrumented
         "function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) return this.readNumber(true);\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(tt.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(tt.dot);\n  }\n}"),
 742. (Types.Instrumented
         "function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(tt.arrow);\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1);\n}"),
 743. (Types.Instrumented
         "function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1);\n    return this.finishOp(tt.bitShift, size);\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 && this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) unexpected();\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n  if (next === 61) size = this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2;\n  return this.finishOp(tt.relational, size);\n}"),
 744. (Types.Instrumented
         "function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(tt.assign, 2);\n  return this.finishOp(code === 42 ? tt.star : tt.modulo, 1);\n}"),
 745. (Types.Instrumented
         "function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2);\n  if (next === 61) return this.finishOp(tt.assign, 2);\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1);\n}"),
 746. (Types.Instrumented
         "function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n    return this.finishOp(tt.incDec, 2);\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2);\n  return this.finishOp(tt.plusMin, 1);\n}"),
 747. (Types.Instrumented
         "function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) {\n    ++this.pos;return this.readRegexp();\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2);\n  return this.finishOp(tt.slash, 1);\n}"),
 748. (Types.Instrumented
         "function () {\n  var word = this.readWord1();\n  var type = tt.name;\n  if ((this.options.ecmaVersion >= 6 || !containsEsc) && this.isKeyword(word)) type = keywordTypes[word];\n  return this.finishToken(type, word);\n}"),
 749. (Types.Instrumented
         "function () {\n  containsEsc = false;\n  var word = \"\",\n      first = true,\n      chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 65535 ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"\n        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) this.raise(escStart, \"Invalid Unicode escape\");\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break;\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos);\n}"),
 750. (Types.Instrumented
         "function () {\n  if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected();\n}"),
 751. (Types.Instrumented
         "function (strict) {\n  this.strict = strict;\n  if (this.type !== tt.num && this.type !== tt.string) return;\n  this.pos = this.start;\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1;\n      --this.curLine;\n    }\n  }\n  this.nextToken();\n}"),
 752. (Types.Instrumented
         "function () {\n  var startLoc = this.options.onComment && this.options.locations && this.curPosition();\n  var start = this.pos,\n      end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\");\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match = undefined;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment) this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.options.locations && this.curPosition());\n}"),
 753. (Types.Instrumented
         "function (startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.options.locations && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this.pos;\n    ch = this.input.charCodeAt(this.pos);\n  }\n  if (this.options.onComment) this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.options.locations && this.curPosition());\n}"),
 754. (Types.Instrumented
         "function () {\n  while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 32) {\n      // ' '\n      ++this.pos;\n    } else if (ch === 13) {\n      ++this.pos;\n      var next = this.input.charCodeAt(this.pos);\n      if (next === 10) {\n        ++this.pos;\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n    } else if (ch === 10 || ch === 8232 || ch === 8233) {\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n    } else if (ch > 8 && ch < 14) {\n      ++this.pos;\n    } else if (ch === 47) {\n      // '/'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 42) {\n        // '*'\n        this.skipBlockComment();\n      } else if (next === 47) {\n        // '/'\n        this.skipLineComment(2);\n      } else break;\n    } else if (ch === 160) {\n      // '\\xa0'\n      ++this.pos;\n    } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n      ++this.pos;\n    } else {\n      break;\n    }\n  }\n}"),
 755. (Types.Instrumented
         "function () {\n  var node = new Node();\n  node.start = this.start;\n  if (this.options.locations) node.loc = new SourceLocation(this, this.startLoc);\n  if (this.options.directSourceFile) node.sourceFile = this.options.directSourceFile;\n  if (this.options.ranges) node.range = [this.start, 0];\n  return node;\n}"),
 756. (Types.Instrumented
         "function (pos) {\n  var node = new Node(),\n      start = pos;\n  if (this.options.locations) {\n    node.loc = new SourceLocation(this, start[1]);\n    start = pos[0];\n  }\n  node.start = start;\n  if (this.options.directSourceFile) node.sourceFile = this.options.directSourceFile;\n  if (this.options.ranges) node.range = [start, 0];\n  return node;\n}"),
 757. (Types.Instrumented
         "function (node, isBinding) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (var i = 0; i < node.properties.length; i++) {\n          var prop = node.properties[i];\n          if (prop.kind !== \"init\") this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n          this.toAssignable(prop.value, isBinding);\n        }\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, isBinding);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator === \"=\") {\n          node.type = \"AssignmentPattern\";\n        } else {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) break;\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node;\n}"),
 758. (Types.Instrumented
         "function (exprList, isBinding) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\") this.unexpected(arg.start);\n      --end;\n    }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding);\n  }\n  return exprList;\n}"),
 759. (Types.Instrumented
         "function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n}"),
 760. (Types.Instrumented
         "function (prevType) {\n  var update = undefined,\n      type = this.type;\n  if (type.keyword && prevType == tt.dot) this.exprAllowed = false;else if (update = type.updateContext) update.call(this, prevType);else this.exprAllowed = type.beforeExpr;\n}"),
 761. (Types.Instrumented
         "function (p) {\n    return p.readTmplToken();\n  }"),
 762. (Types.Instrumented
         "function () {\n  if (this.curContext() !== types.b_stat) this.context.push(types.f_expr);\n  this.exprAllowed = false;\n}"),
 763. (Types.Instrumented
         "function () {\n  if (this.curContext() === types.q_tmpl) this.context.pop();else this.context.push(types.q_tmpl);\n  this.exprAllowed = false;\n}"),
 764. (Types.Instrumented
         "function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n}"),
 765. (Types.Instrumented
         "function () {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return;\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop();\n    this.exprAllowed = false;\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true;\n  } else {\n    this.exprAllowed = !out.isExpr;\n  }\n}"),
 766. (Types.Instrumented
         "function () {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n}"),
 767. (Types.Instrumented "function () {}"),
 768. (Types.Instrumented
         "function (prevType) {\n  var statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n}"),
 769. (Types.Instrumented
         "function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n}"),
 770. (Types.Instrumented
         "function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap.indexOf(group.title) >= 0) {\n      throw new Error(_.str.sprintf('Cannot merge actions - two groups are named \"%(group.title)s\".', group));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (titleGroupMap.indexOf(group.title) < 0) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[action] = titleGroupMap[group.title];\n    });\n  });\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  // ToDo mutually_exclusive_group\n\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    if (!!groupMap[action]) {\n      groupMap[action]._addAction(action);\n    }\n    else\n    {\n      this._addAction(action);\n    }\n  });\n}"),
 771. (Types.Instrumented
         "function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  action.optionStrings.forEach(function (optionString) {\n    if (!!optionStringActions[optionString]) {\n      conflictOptionals.push([optionString]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    throw argumentErrorHelper(\n      action,\n      _.str.sprintf('Conflicting option string(s): %(conflict)s', {\n        conflict: conflictOptionals.join(', ')\n      })\n    );\n  }\n}"),
 772. (Types.Instrumented
         "function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(_.str.sprintf('Invalid option string \"%(option)s\": must start with a \"%(prefix)s\".', {\n        option: optionString,\n        prefix: prefixChars\n      }));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n  \n  if (!dest) {\n    var optionStringDest = !!optionStringsLong ? optionStringsLong[0] :optionStrings[0];\n\n    dest = _.str.strip(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(_.str.sprintf(\n        'dest= is required for options like \"%(option)s\"',\n        {option: optionStrings.join(', ')}\n      ));\n    }\n    dest = dest.replace('-', '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n}"),
 773. (Types.Instrumented
         "function (dest, options) {\n  if (_.isArray(dest)) {\n    dest = _.first(dest);\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== $$.OPTIONAL && options.nargs !== $$.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === $$.ZERO_OR_MORE && options.defaultValue === undefined) {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n}"),
 774. (Types.Instrumented
         "function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n}"),
 775. (Types.Instrumented
         "function (registryName, value, defaultValue) {\n  defaultValue = defaultValue || null;\n  return this._registries[registryName][value] || defaultValue;\n}"),
 776. (Types.Instrumented
         "function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex);\n  }\n}"),
 777. (Types.Instrumented
         "function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (!_.isArray(args)) {\n    throw new TypeError('addArgument first argument should be an array');\n  }\n  if (!_.isObject(options) || _.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (!options.defaultValue) {\n    var dest = options.dest;\n    if (!!this._defaults[dest]) {\n      options.defaultValue = this._defaults[dest];\n    } else if (!this.argumentDefault) {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (! _.isFunction(ActionClass)) {\n    throw new Error(_.str.sprintf(\n          'Unknown action \"%(action)s\".',\n          {action: ActionClass}\n    ));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (!_.isFunction(typeFunction)) {\n    throw new Error(_.str.sprintf(\n          '\"%(function)s\" is not callable',\n          {'function': typeFunction}\n    ));\n  }\n\n  return this._addAction(action);\n}"),
 778. (Types.Instrumented
         "function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n}"),
 779. (Types.Instrumented
         "function (dest) {\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && !!action.defaultValue) {\n      return action.defaultValue;\n    }\n  });\n  return this._defaults[dest] || null;\n}"),
 780. (Types.Instrumented
         "function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n}"),
 781. (Types.Instrumented
         "function (options) {\n  options = options || {};\n  for (var property in options) {\n    this._defaults[property] = options[property];\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if (action.dest in options) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n}"),
 782. (Types.Instrumented "function (obj) { return new wrapper(obj); }"),
 783. (Types.Instrumented
         "function (times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) { return func.apply(this, arguments); }\n    };\n  }"),
 784. (Types.Instrumented
         "function (obj, iterator, context) {\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }"),
 785. (Types.Instrumented
         "function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }"),
 786. (Types.Instrumented
         "function bind(func, context) {\n    var bound, args;\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError;\n    args = slice.call(arguments, 2);\n    return bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  }"),
 787. (Types.Instrumented
         "function (obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length == 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  }"),
 788. (Types.Instrumented "function (obj) {\n    return _(obj).chain();\n  }"),
 789. (Types.Instrumented
         "function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }"),
 790. (Types.Instrumented
         "function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    if (obj.length === +obj.length) results.length = obj.length;\n    return results;\n  }"),
 791. (Types.Instrumented
         "function (array) {\n    return _.filter(array, function(value){ return !!value; });\n  }"),
 792. (Types.Instrumented
         "function () {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  }"),
 793. (Types.Instrumented
         "function (obj, target) {\n    var found = false;\n    if (obj == null) return found;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    found = any(obj, function(value) {\n      return value === target;\n    });\n    return found;\n  }"),
 794. (Types.Instrumented
         "function (func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      if (immediate && !timeout) func.apply(context, args);\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }"),
 795. (Types.Instrumented
         "function (obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        if (obj[prop] == null) obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  }"),
 796. (Types.Instrumented
         "function (func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  }"),
 797. (Types.Instrumented
         "function (func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  }"),
 798. (Types.Instrumented
         "function (obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  }"),
 799. (Types.Instrumented
         "function (array) {\n    var rest = _.flatten(slice.call(arguments, 1), true);\n    return _.filter(array, function(value){ return !_.include(rest, value); });\n  }"),
 800. (Types.Instrumented
         "function (obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  }"),
 801. (Types.Instrumented
         "function (string) {\n    return (''+string).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\\//g,'&#x2F;');\n  }"),
 802. (Types.Instrumented
         "function (obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  }"),
 803. (Types.Instrumented
         "function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }"),
 804. (Types.Instrumented
         "function (array, n, guard) {\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  }"),
 805. (Types.Instrumented
         "function (array, shallow) {\n    return _.reduce(array, function(memo, value) {\n      if (_.isArray(value)) return memo.concat(shallow ? value : _.flatten(value));\n      memo[memo.length] = value;\n      return memo;\n    }, []);\n  }"),
 806. (Types.Instrumented
         "function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n    return memo;\n  }"),
 807. (Types.Instrumented
         "function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var reversed = _.toArray(obj).reverse();\n    if (context && !initial) iterator = _.bind(iterator, context);\n    return initial ? _.reduce(reversed, iterator, memo, context) : _.reduce(reversed, iterator);\n  }"),
 808. (Types.Instrumented
         "function (obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  }"),
 809. (Types.Instrumented
         "function (obj, val) {\n    var result = {};\n    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };\n    each(obj, function(value, index) {\n      var key = iterator(value, index);\n      (result[key] || (result[key] = [])).push(value);\n    });\n    return result;\n  }"),
 810. (Types.Instrumented
         "function (obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }"),
 811. (Types.Instrumented "function (value) {\n    return value;\n  }"),
 812. (Types.Instrumented
         "function (array, item, isSorted) {\n    if (array == null) return -1;\n    var i, l;\n    if (isSorted) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);\n    for (i = 0, l = array.length; i < l; i++) if (i in array && array[i] === item) return i;\n    return -1;\n  }"),
 813. (Types.Instrumented
         "function (array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  }"),
 814. (Types.Instrumented
         "function (array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  }"),
 815. (Types.Instrumented
         "function (obj, method) {\n    var args = slice.call(arguments, 2);\n    return _.map(obj, function(value) {\n      return (_.isFunction(method) ? method || value : value[method]).apply(value, args);\n    });\n  }"),
 816. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object Arguments]';\n  }"),
 817. (Types.Instrumented
         "function (obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  }"),
 818. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object Date]';\n  }"),
 819. (Types.Instrumented
         "function (obj) {\n    return !!(obj && obj.nodeType == 1);\n  }"),
 820. (Types.Instrumented
         "function (obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  }"),
 821. (Types.Instrumented "function (a, b) {\n    return eq(a, b, []);\n  }"),
 822. (Types.Instrumented
         "function (obj) {\n    return _.isNumber(obj) && isFinite(obj);\n  }"),
 823. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object Function]';\n  }"),
 824. (Types.Instrumented
         "function (obj) {\n    // `NaN` is the only value for which `===` is not reflexive.\n    return obj !== obj;\n  }"),
 825. (Types.Instrumented "function (obj) {\n    return obj === null;\n  }"),
 826. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object Number]';\n  }"),
 827. (Types.Instrumented
         "function (obj) {\n    return obj === Object(obj);\n  }"),
 828. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object RegExp]';\n  }"),
 829. (Types.Instrumented
         "function (obj) {\n    return toString.call(obj) == '[object String]';\n  }"),
 830. (Types.Instrumented "function (obj) {\n    return obj === void 0;\n  }"),
 831. (Types.Instrumented
         "function (array, n, guard) {\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  }"),
 832. (Types.Instrumented
         "function (array, item) {\n    if (array == null) return -1;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);\n    var i = array.length;\n    while (i--) if (i in array && array[i] === item) return i;\n    return -1;\n  }"),
 833. (Types.Instrumented
         "function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.max.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  }"),
 834. (Types.Instrumented
         "function (func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  }"),
 835. (Types.Instrumented
         "function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.min.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  }"),
 836. (Types.Instrumented
         "function (obj) {\n    each(_.functions(obj), function(name){\n      addToWrapper(name, _[name] = obj[name]);\n    });\n  }"),
 837. (Types.Instrumented
         "function () {\n    root._ = previousUnderscore;\n    return this;\n  }"),
 838. (Types.Instrumented
         "function (func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      return memo = func.apply(this, arguments);\n    };\n  }"),
 839. (Types.Instrumented
         "function (obj) {\n    var result = {};\n    each(_.flatten(slice.call(arguments, 1)), function(key) {\n      if (key in obj) result[key] = obj[key];\n    });\n    return result;\n  }"),
 840. (Types.Instrumented
         "function (obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  }"),
 841. (Types.Instrumented
         "function (start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  }"),
 842. (Types.Instrumented
         "function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    each(obj, function(value, index, list) {\n      if (!iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }"),
 843. (Types.Instrumented
         "function (array, index, guard) {\n    return slice.call(array, (index == null) || guard ? 1 : index);\n  }"),
 844. (Types.Instrumented
         "function (object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  }"),
 845. (Types.Instrumented
         "function (obj) {\n    var shuffled = [], rand;\n    each(obj, function(value, index, list) {\n      rand = Math.floor(Math.random() * (index + 1));\n      shuffled[index] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  }"),
 846. (Types.Instrumented
         "function (obj) {\n    return _.isArray(obj) ? obj.length : _.keys(obj).length;\n  }"),
 847. (Types.Instrumented
         "function (obj, val, context) {\n    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria, b = right.criteria;\n      if (a === void 0) return 1;\n      if (b === void 0) return -1;\n      return a < b ? -1 : a > b ? 1 : 0;\n    }), 'value');\n  }"),
 848. (Types.Instrumented
         "function (array, obj, iterator) {\n    iterator || (iterator = _.identity);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >> 1;\n      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;\n    }\n    return low;\n  }"),
 849. (Types.Instrumented
         "function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }"),
 850. (Types.Instrumented
         "function (text, data, settings) {\n    settings = _.defaults(settings || {}, _.templateSettings);\n\n    // Compile the template source, taking care to escape characters that\n    // cannot be included in a string literal and then unescape them in code\n    // blocks.\n    var source = \"__p+='\" + text\n      .replace(escaper, function(match) {\n        return '\\\\' + escapes[match];\n      })\n      .replace(settings.escape || noMatch, function(match, code) {\n        return \"'+\\n_.escape(\" + unescape(code) + \")+\\n'\";\n      })\n      .replace(settings.interpolate || noMatch, function(match, code) {\n        return \"'+\\n(\" + unescape(code) + \")+\\n'\";\n      })\n      .replace(settings.evaluate || noMatch, function(match, code) {\n        return \"';\\n\" + unescape(code) + \"\\n;__p+='\";\n      }) + \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __p='';\" +\n      \"var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n\" +\n      source + \"return __p;\\n\";\n\n    var render = new Function(settings.variable || 'obj', '_', source);\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for build time\n    // precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' +\n      source + '}';\n\n    return template;\n  }"),
 851. (Types.Instrumented
         "function (func, wait) {\n    var context, args, timeout, throttling, more, result;\n    var whenDone = _.debounce(function(){ more = throttling = false; }, wait);\n    return function() {\n      context = this; args = arguments;\n      var later = function() {\n        timeout = null;\n        if (more) func.apply(context, args);\n        whenDone();\n      };\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (throttling) {\n        more = true;\n      } else {\n        result = func.apply(context, args);\n      }\n      whenDone();\n      throttling = true;\n      return result;\n    };\n  }"),
 852. (Types.Instrumented
         "function (n, iterator, context) {\n    for (var i = 0; i < n; i++) iterator.call(context, i);\n  }"),
 853. (Types.Instrumented
         "function (obj) {\n    if (!obj)                                     return [];\n    if (_.isArray(obj))                           return slice.call(obj);\n    if (_.isArguments(obj))                       return slice.call(obj);\n    if (obj.toArray && _.isFunction(obj.toArray)) return obj.toArray();\n    return _.values(obj);\n  }"),
 854. (Types.Instrumented
         "function () {\n    return _.uniq(_.flatten(arguments, true));\n  }"),
 855. (Types.Instrumented
         "function (array, isSorted, iterator) {\n    var initial = iterator ? _.map(array, iterator) : array;\n    var results = [];\n    // The `isSorted` flag is irrelevant if the array only contains two elements.\n    if (array.length < 3) isSorted = true;\n    _.reduce(initial, function (memo, value, index) {\n      if (isSorted ? _.last(memo) !== value || !memo.length : !_.include(memo, value)) {\n        memo.push(value);\n        results.push(array[index]);\n      }\n      return memo;\n    }, []);\n    return results;\n  }"),
 856. (Types.Instrumented
         "function (prefix) {\n    var id = idCounter++;\n    return prefix ? prefix + id : id;\n  }"),
 857. (Types.Instrumented
         "function (obj) {\n    return _.map(obj, _.identity);\n  }"),
 858. (Types.Instrumented
         "function (array) {\n    return _.difference(array, slice.call(arguments, 1));\n  }"),
 859. (Types.Instrumented
         "function (func, wrapper) {\n    return function() {\n      var args = [func].concat(slice.call(arguments, 0));\n      return wrapper.apply(this, args);\n    };\n  }"),
 860. (Types.Instrumented
         "function () {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) results[i] = _.pluck(args, \"\" + i);\n    return results;\n  }"),
 861. (Types.Instrumented
         "function (str){\n      return _s.trim(str).replace(/(\\-|_|\\s)+(.)?/g, function(match, separator, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n    }"),
 862. (Types.Instrumented
         "function (str) {\n      str += '';\n      return str.charAt(0).toUpperCase() + str.substring(1).toLowerCase();\n    }"),
 863. (Types.Instrumented
         "function (str, length, padStr) {\n      return _s.pad(str, length, padStr, 'both');\n    }"),
 864. (Types.Instrumented
         "function (str) {\n      return (''+str).split('');\n    }"),
 865. (Types.Instrumented
         "function (str, step){\n      str = str+'';\n      step = ~~step || str.length;\n      var arr = [];\n      for (var i = 0; i < str.length;) {\n        arr.push(str.slice(i,i + step));\n        i = i + step;\n      }\n      return arr;\n    }"),
 866. (Types.Instrumented
         "function (str){\n      return _s.titleize(str.replace(/_/g, ' ')).replace(/\\s/g, '')\n    }"),
 867. (Types.Instrumented
         "function (str){\n      return _s.strip((''+str).replace(/\\s+/g, ' '));\n    }"),
 868. (Types.Instrumented
         "function (str, needle){\n      return (''+str).indexOf(needle) !== -1;\n    }"),
 869. (Types.Instrumented
         "function (str, substr){\n      str += ''; substr += '';\n      return str.split(substr).length - 1;\n    }"),
 870. (Types.Instrumented
         "function (str){\n      return _s.trim(str).replace(/[_\\s]+/g, '-').replace(/([A-Z])/g, '-$1').replace(/-+/g, '-').toLowerCase();\n    }"),
 871. (Types.Instrumented
         "function (str, ends){\n      str += ''; ends += '';\n      return str.length >= ends.length && str.substring(str.length - ends.length) === ends;\n    }"),
 872. (Types.Instrumented
         "function (str) {\n      return (''+str).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')\n                            .replace(/\"/g, '&quot;').replace(/'/g, \"&apos;\");\n    }"),
 873. (Types.Instrumented
         "function (str){\n      // From MooTools core 1.2.4\n      return str.replace(/([-.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n    }"),
 874. (Types.Instrumented
         "function () {\n      var result = {};\n\n      for (var prop in this) {\n        if (!this.hasOwnProperty(prop) || prop == 'include' || prop == 'contains' || prop == 'reverse') continue;\n        result[prop] = this[prop];\n      }\n\n      return result;\n    }"),
 875. (Types.Instrumented
         "function (str){\n      return _s.capitalize(this.underscored(str).replace(/_id$/,'').replace(/_/g, ' '));\n    }"),
 876. (Types.Instrumented
         "function (str, i, substr){\n      var arr = (''+str).split('');\n      arr.splice(~~i, 0, ''+substr);\n      return arr.join('');\n    }"),
 877. (Types.Instrumented
         "function (str){\n      return (/^\\s*$/).test(str);\n    }"),
 878. (Types.Instrumented
         "function (sep) {\n      var args = slice(arguments);\n      return args.join(args.shift());\n    }"),
 879. (Types.Instrumented
         "function (str) {\n      return (''+str).split(\"\\n\");\n    }"),
 880. (Types.Instrumented
         "function (str, length, padStr) {\n      return _s.pad(str, length, padStr, 'right');\n    }"),
 881. (Types.Instrumented
         "function (str, length, padStr) {\n      return _s.pad(str, length, padStr);\n    }"),
 882. (Types.Instrumented
         "function (str, characters){\n      if (!characters && nativeTrimLeft) {\n        return nativeTrimLeft.call(str);\n      }\n      characters = defaultToWhiteSpace(characters);\n      return (''+str).replace(new RegExp('\\^' + characters + '+', 'g'), '');\n    }"),
 883. (Types.Instrumented
         "function (str, length, padStr, type) {\n      str += '';\n      \n      var padding = '', padlen  = 0;\n\n      length = ~~length;\n      \n      if (!padStr) {\n        padStr = ' ';\n      } else if (padStr.length > 1) {\n        padStr = padStr.charAt(0);\n      }\n      \n      switch(type) {\n        case 'right':\n          padlen = (length - str.length);\n          padding = strRepeat(padStr, padlen);\n          str = str+padding;\n          break;\n        case 'both':\n          padlen = (length - str.length);\n          padding = {\n            'left' : strRepeat(padStr, Math.ceil(padlen/2)),\n            'right': strRepeat(padStr, Math.floor(padlen/2))\n          };\n          str = padding.left+str+padding.right;\n          break;\n        default: // 'left'\n          padlen = (length - str.length);\n          padding = strRepeat(padStr, padlen);;\n          str = padding+str;\n        }\n      return str;\n    }"),
 884. (Types.Instrumented
         "function (str, length, pruneStr){\n      str += ''; length = ~~length;\n      pruneStr = pruneStr != null ? ''+pruneStr : '...';\n      \n      var pruned, borderChar, template = str.replace(/\\W/g, function(ch){\n        return (ch.toUpperCase() !== ch.toLowerCase()) ? 'A' : ' ';\n      });\n      \n      borderChar = template.charAt(length);\n      \n      pruned = template.slice(0, length);\n      \n      // Check if we're in the middle of a word\n      if (borderChar && borderChar.match(/\\S/))\n        pruned = pruned.replace(/\\s\\S+$/, '');\n        \n      pruned = _s.rtrim(pruned);\n      \n      return (pruned+pruneStr).length > str.length ? str : str.substring(0, pruned.length)+pruneStr;\n    }"),
 885. (Types.Instrumented
         "function (str, qty, separator){\n    // ~~var \226\128\148 is the fastest available way to convert anything to Integer in javascript.\n    // We'll use it extensively in this lib.\n    str += ''; qty = ~~qty;\n    for (var repeat = []; qty > 0; repeat[--qty] = str) {}\n    return repeat.join(separator == null ? '' : separator);\n  }"),
 886. (Types.Instrumented
         "function (str){\n        return Array.prototype.reverse.apply(String(str).split('')).join('');\n    }"),
 887. (Types.Instrumented
         "function (str, characters){\n      if (!characters && nativeTrimRight) {\n        return nativeTrimRight.call(str);\n      }\n      characters = defaultToWhiteSpace(characters);\n      return (''+str).replace(new RegExp(characters + '+$', 'g'), '');\n    }"),
 888. (Types.Instrumented
         "function (str) {\n      var from  = \"\196\133\195\160\195\161\195\164\195\162\195\163\196\135\196\153\195\168\195\169\195\171\195\170\195\172\195\173\195\175\195\174\197\130\197\132\195\178\195\179\195\182\195\180\195\181\195\185\195\186\195\188\195\187\195\177\195\167\197\188\197\186\194\183/_:;\",\n          to    = \"aaaaaaceeeeeiiiilnooooouuuunczz\",\n          regex = new RegExp(defaultToWhiteSpace(from), 'g');\n\n      str = (''+str).toLowerCase();\n\n      str = str.replace(regex, function(ch){\n        var index = from.indexOf(ch);\n        return to.charAt(index) || '-';\n      });\n\n      return _s.trim(str.replace(/[^\\w\\s-]/g, '').replace(/[-\\s]+/g, '-'), '-');\n    }"),
 889. (Types.Instrumented
         "function (str, i, howmany, substr){\n      var arr = (''+str).split('');\n      arr.splice(~~i, ~~howmany, substr);\n      return arr.join('');\n    }"),
 890. (Types.Instrumented
         "function () {\n      if (!str_format.cache.hasOwnProperty(arguments[0])) {\n        str_format.cache[arguments[0]] = str_format.parse(arguments[0]);\n      }\n      return str_format.format.call(null, str_format.cache[arguments[0]], arguments);\n    }"),
 891. (Types.Instrumented
         "function (str, starts){\n      str += ''; starts += '';\n      return str.length >= starts.length && str.substring(0, starts.length) === starts;\n    }"),
 892. (Types.Instrumented
         "function (str, sep){\n      str += ''; sep = sep != null ? ''+sep : sep;\n      var pos = (!sep) ? -1 : str.indexOf(sep);\n      return (pos != -1) ? str.slice(0, pos) : str;\n    }"),
 893. (Types.Instrumented
         "function (str, sep){\n      str += ''; sep = sep != null ? ''+sep : sep;\n      var pos = str.lastIndexOf(sep);\n      return (pos != -1) ? str.slice(0, pos) : str;\n    }"),
 894. (Types.Instrumented
         "function (str, sep){\n      str += ''; sep = sep != null ? ''+sep : sep;\n      var pos =  (!sep) ? -1 : str.indexOf(sep);\n      return (pos != -1) ? str.slice(pos+sep.length, str.length) : str;\n    }"),
 895. (Types.Instrumented
         "function (str, sep){\n      str += ''; sep = sep != null ? ''+sep : sep;\n      var pos =  (!sep) ? -1 : str.lastIndexOf(sep);\n      return (pos != -1) ? str.slice(pos+sep.length, str.length) : str;\n    }"),
 896. (Types.Instrumented
         "function (str, characters){\n      str += '';\n      if (!characters && nativeTrim) {\n        return nativeTrim.call(str);\n      }\n      characters = defaultToWhiteSpace(characters);\n      return str.replace(new RegExp('\\^' + characters + '+|' + characters + '+$', 'g'), '');\n    }"),
 897. (Types.Instrumented
         "function (str){\n      return (''+str).replace(/<\\/?[^>]+>/ig, '');\n    }"),
 898. (Types.Instrumented
         "function (str){\n      str += '';\n      var arr = str.split('');\n      arr.splice(str.length-1, 1, String.fromCharCode(str.charCodeAt(str.length-1) + 1));\n      return arr.join('');\n    }"),
 899. (Types.Instrumented
         "function (str){\n      return (''+str).replace(/\\b./g, function(ch){ return ch.toUpperCase(); });\n    }"),
 900. (Types.Instrumented
         "function (str, decimals) {\n      var num = parseNumber(parseNumber(str).toFixed(~~decimals));\n      return num === 0 && ''+str !== '0' ? Number.NaN : num;\n    }"),
 901. (Types.Instrumented
         "function (array, separator, lastSeparator) {\n        separator || (separator = ', ');\n        lastSeparator || (lastSeparator = ' and ');\n        var length = array.length, str = '';\n\n        for (var i = 0; i < length; i++) {\n            str += array[i];\n            if (i === (length - 2)) { str += lastSeparator; }\n            else if (i < (length - 1)) { str += separator; }\n        }\n\n        return str;\n    }"),
 902. (Types.Instrumented
         "function (str, length, truncateStr){\n      str += ''; truncateStr = truncateStr || '...';\n      length = ~~length;\n      return str.length > length ? str.slice(0, length) + truncateStr : str;\n    }"),
 903. (Types.Instrumented
         "function (str){\n      return _s.trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();\n    }"),
 904. (Types.Instrumented
         "function (str) {\n      return (''+str).replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n                            .replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n    }"),
 905. (Types.Instrumented
         "function (fmt, argv){\n      argv.unshift(fmt);\n      return sprintf.apply(null, argv);\n    }"),
 906. (Types.Instrumented
         "function (str, delimiter) {\n      return _s.trim(str, delimiter).split(delimiter || /\\s+/);\n    }"),
 907. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 908. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 909. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 910. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 911. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 912. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 913. (Types.Instrumented
         "function () {\n    this._chain = true;\n    return this;\n  }"),
 914. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 915. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 916. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 917. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 918. (Types.Instrumented
         "function () {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    }"),
 919. (Types.Instrumented "function (obj) { this._wrapped = obj; }"),
 920. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 921. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 922. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 923. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 924. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 925. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 926. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 927. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 928. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 929. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 930. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 931. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 932. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 933. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 934. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 935. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 936. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 937. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 938. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 939. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 940. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 941. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 942. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 943. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 944. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 945. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 946. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 947. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 948. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 949. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 950. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 951. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 952. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 953. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 954. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 955. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 956. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 957. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 958. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 959. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 960. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 961. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 962. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 963. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 964. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 965. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 966. (Types.Instrumented
         "function () {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    }"),
 967. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 968. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 969. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 970. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 971. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 972. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 973. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 974. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 975. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 976. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 977. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 978. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 979. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 980. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 981. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 982. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 983. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 984. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 985. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 986. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 987. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 988. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 989. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 990. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 991. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 992. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 993. (Types.Instrumented
         "function () {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    }"),
 994. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 995. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 996. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 997. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 998. (Types.Instrumented
         "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 999. (Types.Instrumented
         "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1000. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1001. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1002. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1003. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1004. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1005. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1006. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1007. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1008. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1009. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1010. (Types.Instrumented
          "function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    }"),
 1011. (Types.Instrumented "function () {\n    return this._wrapped;\n  }"),
 1012. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1013. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1014. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1015. (Types.Instrumented
          "function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    }"),
 1016. (Types.Instrumented
          "function (parse_tree, argv) {\n      var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n      for (i = 0; i < tree_length; i++) {\n        node_type = get_type(parse_tree[i]);\n        if (node_type === 'string') {\n          output.push(parse_tree[i]);\n        }\n        else if (node_type === 'array') {\n          match = parse_tree[i]; // convenience purposes only\n          if (match[2]) { // keyword argument\n            arg = argv[cursor];\n            for (k = 0; k < match[2].length; k++) {\n              if (!arg.hasOwnProperty(match[2][k])) {\n                throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\n              }\n              arg = arg[match[2][k]];\n            }\n          } else if (match[1]) { // positional argument (explicit)\n            arg = argv[match[1]];\n          }\n          else { // positional argument (implicit)\n            arg = argv[cursor++];\n          }\n\n          if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\n            throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\n          }\n          switch (match[8]) {\n            case 'b': arg = arg.toString(2); break;\n            case 'c': arg = String.fromCharCode(arg); break;\n            case 'd': arg = parseInt(arg, 10); break;\n            case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n            case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n            case 'o': arg = arg.toString(8); break;\n            case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n            case 'u': arg = Math.abs(arg); break;\n            case 'x': arg = arg.toString(16); break;\n            case 'X': arg = arg.toString(16).toUpperCase(); break;\n          }\n          arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);\n          pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';\n          pad_length = match[6] - String(arg).length;\n          pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n          output.push(match[5] ? arg + pad : pad + arg);\n        }\n      }\n      return output.join('');\n    }"),
 1017. (Types.Instrumented
          "function (fmt) {\n      var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n      while (_fmt) {\n        if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n          parse_tree.push(match[0]);\n        }\n        else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n          parse_tree.push('%');\n        }\n        else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n          if (match[2]) {\n            arg_names |= 1;\n            var field_list = [], replacement_field = match[2], field_match = [];\n            if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n              field_list.push(field_match[1]);\n              while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                  field_list.push(field_match[1]);\n                }\n                else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                  field_list.push(field_match[1]);\n                }\n                else {\n                  throw new Error('[_.sprintf] huh?');\n                }\n              }\n            }\n            else {\n              throw new Error('[_.sprintf] huh?');\n            }\n            match[2] = field_list;\n          }\n          else {\n            arg_names |= 2;\n          }\n          if (arg_names === 3) {\n            throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\n          }\n          parse_tree.push(match);\n        }\n        else {\n          throw new Error('[_.sprintf] huh?');\n        }\n        _fmt = _fmt.substring(match[0].length);\n      }\n      return parse_tree;\n    }"),
 1018. (Types.Instrumented
          "function ActionHelp(options) {\n  options = options || {};\n  if (options.defaultValue !== null) {\n    options.defaultValue = options.defaultValue;\n  }\n  else {\n    options.defaultValue = $$.SUPPRESS;\n  }\n  options.dest = (options.dest !== null? options.dest: $$.SUPPRESS);\n  options.nargs = 0;\n  Action.call(this, options);\n\n}"),
 1019. (Types.Instrumented
          "function ActionSubparsers(options) {\n  options = options || {};\n  options.dest = options.dest || $$.SUPPRESS;\n  options.nargs = $$.PARSER;\n\n  this.debug = (options.debug === true);\n\n  this._progPrefix = options.prog;\n  this._parserClass = options.parserClass;\n  this._nameParserMap = {};\n  this._choicesActions = [];\n\n  options.choices = this._nameParserMap;\n  Action.call(this, options);\n}"),
 1020. (Types.Instrumented
          "function ArgumentGroup(container, options) {\n\n  options = options || {};\n\n  // add any missing keyword arguments by checking the container\n  options.prefixChars = (options.prefixChars || container.prefixChars);\n  options.argumentDefault = (options.argumentDefault || container.argumentDefault);\n\n  ActionContainer.call(this, options);\n\n  // group attributes\n  this.title = options.title;\n  this._groupActions = [];\n\n  // share most attributes with the container\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n}"),
 1021. (Types.Instrumented
          "function ActionAppend(options) {\n    options = options || {};\n    if (this.nargs <= 0) {\n        throw new Error('nargs for append actions must be > 0; if arg ' +\n                'strings are not supplying the value to append, ' +\n                'the append const action may be more appropriate');\n    }\n    if (!!this.constant && this.nargs !== $$.OPTIONAL) {\n        throw new Error('nargs must be OPTIONAL to supply const');\n    }\n    Action.call(this, options);\n}"),
 1022. (Types.Instrumented
          "function ActionAppendConstant(options) {\n    options = options || {};\n    options.nargs = 0;\n    Action.call(this, options);\n}"),
 1023. (Types.Instrumented
          "function ActionCount(options) {\n  options = options || {};\n  options.nargs = 0;\n\n  Action.call(this, options);\n}"),
 1024. (Types.Instrumented
          "function ActionStore(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for store actions must be > 0; if you ' +\n        'have nothing to store, actions such as store ' +\n        'true or store const may be more appropriate');\n\n  }\n  if (this.constant !== undefined && this.nargs !== $$.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n}"),
 1025. (Types.Instrumented
          "function ActionStoreConstant(options) {\n    options = options || {};\n    options.nargs = 0;\n    Action.call(this, options);\n}"),
 1026. (Types.Instrumented
          "function ActionStoreTrue(options) {\n    options = options || {};\n    options.constant = true;\n    options.defaultValue = options.defaultValue !== null ? options.defaultValue: false;\n    ActionStoreConstant.call(this, options);\n}"),
 1027. (Types.Instrumented
          "function ActionStoreFalse(options) {\n    options = options || {};\n    options.constant = false;\n    options.defaultValue = options.defaultValue !== null ? options.defaultValue: true;\n    ActionStoreConstant.call(this, options);\n}"),
 1028. (Types.Instrumented
          "function ActionVersion(options) {\n    options = options || {};\n    options.defaultValue = (!!options.defaultValue ? options.defaultValue: $$.SUPPRESS);\n    options.dest = (options.dest || $$.SUPPRESS);\n    options.nargs = 0;\n    this.version = options.version;\n    Action.call(this, options);\n}"),
 1029. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n  parser.printHelp();\n  parser.exit();\n}"),
 1030. (Types.Instrumented
          "function (argument, message) {\n  var argumentName = null;\n  if (argument.getName) {\n    argumentName = argument.getName();\n  } else {\n    argumentName = '' + argument;\n  }\n  var format = !argumentName ? '%(message)s': 'argument \"%(argumentName)s\": %(message)s';\n\n  var errMessage =  _.str.sprintf(format, {\n    message: message,\n    argumentName: argumentName\n  });\n  var err = new TypeError(errMessage);\n  err.code = ERR_CODE;\n  return err;\n}"),
 1031. (Types.Instrumented "function () {\n  return this._choicesActions;\n}"),
 1032. (Types.Instrumented
          "function (name, options) {\n  var parser;\n\n  var self = this;\n\n  options = options || {};\n\n  options.debug = (this.debug === true);\n\n  // set program from the existing prefix\n  if (!options.prog) {\n    options.prog = this._progPrefix + ' ' + name;\n  }\n\n  var aliases = options.aliases || [];\n\n  // create a pseudo-action to hold the choice help\n  if (!!options.help || _.isString(options.help)) {\n    var help = options.help;\n    delete options.help;\n\n    var choiceAction = new ChoicesPseudoAction(name, help);\n    this._choicesActions.push(choiceAction);\n  }\n\n  // create the parser and add it to the map\n  parser = new this._parserClass(options);\n  this._nameParserMap[name] = parser;\n\n  // make parser available under aliases also\n  aliases.forEach(function(alias) {\n    self._nameParserMap[alias] = parser;\n  });\n\n  return parser;\n}"),
 1033. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n  var parserName = values[0];\n  var argStrings = values.slice(1);\n\n  // set the parser name if requested\n  if (this.dest !== $$.SUPPRESS) {\n    namespace[this.dest] = parserName;\n  }\n\n  // select the parser\n  if (!!this._nameParserMap[parserName]) {\n    parser = this._nameParserMap[parserName];\n  } else {\n    throw argumentErrorHelper(_.str.sprintf(\n      'Unknown parser \"%(name)s\" (choices: [%(choices)s]).',\n      {\n        name: parserName,\n        choices: _.keys(this._nameParserMap).join(', ')\n      }\n    ));\n  }\n\n  // parse all the remaining options into the namespace\n  parser.parseArgs(argStrings, namespace);\n}"),
 1034. (Types.Instrumented
          "function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n  this._groupActions.push(action);\n  return action;\n}"),
 1035. (Types.Instrumented
          "function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n  this._groupActions.remove(action);\n}"),
 1036. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n    var items = [].concat(namespace[this.dest] || [], values);\n    namespace.set(this.dest, items);\n}"),
 1037. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n    var items = [].concat(namespace[this.dest] || []);\n    items.push(this.constant);\n    namespace.set(this.dest, items);\n}"),
 1038. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n  namespace.set(this.dest, (namespace[this.dest] || 0) + 1);\n}"),
 1039. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n  namespace.set(this.dest, values);\n}"),
 1040. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n    namespace.set(this.dest, this.constant);\n}"),
 1041. (Types.Instrumented
          "function (parser, namespace, values, optionString) {\n    var version = this.version || parser.version;\n    var formatter = parser._getFormatter();\n    formatter.addText(version);\n    parser.exit(0, formatter.formatHelp());\n}"),
 1042. (Types.Instrumented
          "function outer() {\n                jalangiLabel1:\n                    while (true) {\n                        try {\n                            J$.Fe(241, arguments.callee, this, arguments);\n                            function inner() {\n                                jalangiLabel0:\n                                    while (true) {\n                                        try {\n                                            J$.Fe(145, arguments.callee, this, arguments);\n                                            arguments = J$.N(153, 'arguments', arguments, 4);\n                                            J$.N(161, 'z', z, 0);\n                                            var z = J$.X1(97, J$.W(89, 'z', J$.T(81, 4, 22, false), z, 1));\n                                            return J$.X1(137, J$.Rt(129, J$.B(18, '+', J$.B(10, '+', J$.R(105, 'x', x, 0), J$.R(113, 'y', y, 0), 0), J$.R(121, 'z', z, 0), 0)));\n                                        } catch (J$e) {\n                                            J$.Ex(745, J$e);\n                                        } finally {\n                                            if (J$.Fr(753))\n                                                continue jalangiLabel0;\n                                            else\n                                                return J$.Ra();\n                                        }\n                                    }\n                            }\n                            arguments = J$.N(249, 'arguments', arguments, 4);\n                            J$.N(257, 'x', x, 0);\n                            inner = J$.N(273, 'inner', J$.T(265, inner, 12, false, 145), 0);\n                            J$.N(281, 'y', y, 0);\n                            J$.N(289, 'z', z, 0);\n                            var x = J$.X1(73, J$.W(65, 'x', J$.T(57, 1, 22, false), x, 1));\n                            var y = J$.X1(185, J$.W(177, 'y', J$.T(169, 2, 22, false), y, 1));\n                            var z = J$.X1(209, J$.W(201, 'z', J$.T(193, 3, 22, false), z, 1));\n                            return J$.X1(233, J$.Rt(225, J$.R(217, 'inner', inner, 0)));\n                        } catch (J$e) {\n                            J$.Ex(761, J$e);\n                        } finally {\n                            if (J$.Fr(769))\n                                continue jalangiLabel1;\n                            else\n                                return J$.Ra();\n                        }\n                    }\n            }"),
 1043. (Types.Instrumented
          "function throwing() {\n                    jalangiLabel2:\n                        while (true) {\n                            try {\n                                J$.Fe(409, arguments.callee, this, arguments);\n                                arguments = J$.N(417, 'arguments', arguments, 4);\n                                throw J$.X1(401, J$.Th(393, J$.F(385, J$.R(369, 'Error', Error, 2), 1)(J$.T(377, 'Generic error', 21, false))));\n                            } catch (J$e) {\n                                J$.Ex(777, J$e);\n                            } finally {\n                                if (J$.Fr(785))\n                                    continue jalangiLabel2;\n                                else\n                                    return J$.Ra();\n                            }\n                        }\n                }"),
 1044. (Types.Instrumented
          "function cons() {\n                jalangiLabel4:\n                    while (true) {\n                        try {\n                            J$.Fe(617, arguments.callee, this, arguments);\n                            arguments = J$.N(625, 'arguments', arguments, 4);\n                            return J$.X1(609, J$.Rt(601, J$.T(593, {\n                                meth: J$.T(585, function () {\n                                    jalangiLabel3:\n                                        while (true) {\n                                            try {\n                                                J$.Fe(569, arguments.callee, this, arguments);\n                                                arguments = J$.N(577, 'arguments', arguments, 4);\n                                                J$.X1(561, J$.P(553, J$.R(537, 'this', this, 0), 'x', J$.T(545, 1, 22, false), 0));\n                                            } catch (J$e) {\n                                                J$.Ex(801, J$e);\n                                            } finally {\n                                                if (J$.Fr(809))\n                                                    continue jalangiLabel3;\n                                                else\n                                                    return J$.Ra();\n                                            }\n                                        }\n                                }, 12, false, 569)\n                            }, 11, false)));\n                        } catch (J$e) {\n                            J$.Ex(817, J$e);\n                        } finally {\n                            if (J$.Fr(825))\n                                continue jalangiLabel4;\n                            else\n                                return J$.Ra();\n                        }\n                    }\n            }"),
 1045. (Types.Instrumented
          "function Console(stdout, stderr) {\n  if (!(this instanceof Console)) {\n    return new Console(stdout, stderr);\n  }\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new TypeError('Console expects a writable stream instance');\n  }\n  if (!stderr) {\n    stderr = stdout;\n  }\n  var prop = {\n    writable: true,\n    enumerable: false,\n    configurable: true\n  };\n  prop.value = stdout;\n  Object.defineProperty(this, '_stdout', prop);\n  prop.value = stderr;\n  Object.defineProperty(this, '_stderr', prop);\n  prop.value = new Map();\n  Object.defineProperty(this, '_times', prop);\n\n  // bind the prototype functions to this Console instance\n  var keys = Object.keys(Console.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var k = keys[v];\n    this[k] = this[k].bind(this);\n  }\n}"),
 1046. (Types.Instrumented "function () { [native code] }"),
 1047. (Types.Instrumented "function () { [native code] }"),
 1048. (Types.Instrumented "function () { [native code] }"),
 1049. (Types.Instrumented "function () { [native code] }"),
 1050. (Types.Instrumented "function () { [native code] }"),
 1051. (Types.Instrumented "function () { [native code] }"),
 1052. (Types.Instrumented "function () { [native code] }"),
 1053. (Types.Instrumented "function () { [native code] }"),
 1054. (Types.Instrumented "function () { [native code] }"),
 1055. (Types.Instrumented
          "function (er) {\n        er = er || new Error('process.stderr cannot be closed.');\n        stderr.emit('error', er);\n      }"),
 1056. (Types.Instrumented
          "function (er) {\n        er = er || new Error('process.stdout cannot be closed.');\n        stdout.emit('error', er);\n      }"),
 1057. (Types.Instrumented
          "function (expression) {\n  if (!expression) {\n    var arr = Array.prototype.slice.call(arguments, 1);\n    require('assert').ok(false, util.format.apply(this, arr));\n  }\n}"),
 1058. (Types.Instrumented
          "function (object, options) {\n  this._stdout.write(util.inspect(object, util._extend({\n    customInspect: false\n  }, options)) + '\\n');\n}"),
 1059. (Types.Instrumented
          "function () {\n  this._stderr.write(util.format.apply(this, arguments) + '\\n');\n}"),
 1060. (Types.Instrumented
          "function () {\n  this._stdout.write(util.format.apply(this, arguments) + '\\n');\n}"),
 1061. (Types.Instrumented
          "function (label) {\n  this._times.set(label, Date.now());\n}"),
 1062. (Types.Instrumented
          "function (label) {\n  var time = this._times.get(label);\n  if (!time) {\n    throw new Error('No such label: ' + label);\n  }\n  var duration = Date.now() - time;\n  this.log('%s: %dms', label, duration);\n}"),
 1063. (Types.Instrumented
          "function trace() {\n  // TODO probably can to do this better with V8's debug object once that is\n  // exposed.\n  var err = new Error();\n  err.name = 'Trace';\n  err.message = util.format.apply(this, arguments);\n  Error.captureStackTrace(err, trace);\n  this.error(err.stack);\n}"),
 1064. (Types.Instrumented
          "function onSocketEnd() {\n  // XXX Should not have to do as much crap in this function.\n  // ended should already be true, since this is called *after*\n  // the EOF errno and onread has eof'ed\n  debug('onSocketEnd', this._readableState);\n  this._readableState.ended = true;\n  if (this._readableState.endEmitted) {\n    this.readable = false;\n    maybeDestroy(this);\n  } else {\n    this.once('end', function() {\n      this.readable = false;\n      maybeDestroy(this);\n    });\n    this.read(0);\n  }\n\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n    this.destroySoon();\n  }\n}"),
 1065. (Types.Instrumented
          "function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }"),
 1066. (Types.Instrumented
          "function onSocketFinish() {\n  // If still connecting - defer handling 'finish' until 'connect' will happen\n  if (this._connecting) {\n    debug('osF: not yet connected');\n    return this.once('connect', onSocketFinish);\n  }\n\n  debug('onSocketFinish');\n  if (!this.readable || this._readableState.ended) {\n    debug('oSF: ended, destroy', this._readableState);\n    return this.destroy();\n  }\n\n  debug('oSF: not ended, call shutdown()');\n\n  // otherwise, just shutdown, or destroy() if not possible\n  if (!this._handle || !this._handle.shutdown)\n    return this.destroy();\n\n  var req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  var err = this._handle.shutdown(req);\n\n  if (err)\n    return this._destroy(errnoException(err, 'shutdown'));\n}"),
 1067. (Types.Instrumented
          "function onread(nread, buffer) {\n  var handle = this;\n  var self = handle.owner;\n  assert(handle === self._handle, 'handle != self._handle');\n\n  self._unrefTimer();\n\n  debug('onread', nread);\n\n  if (nread > 0) {\n    debug('got data');\n\n    // read success.\n    // In theory (and in practice) calling readStop right now\n    // will prevent this from being called again until _read() gets\n    // called again.\n\n    // if it's not enough data, we'll just call handle.readStart()\n    // again right away.\n    self.bytesRead += nread;\n\n    // Optimization: emit the original buffer with end points\n    var ret = self.push(buffer);\n\n    if (handle.reading && !ret) {\n      handle.reading = false;\n      debug('readStop');\n      var err = handle.readStop();\n      if (err)\n        self._destroy(errnoException(err, 'read'));\n    }\n    return;\n  }\n\n  // if we didn't get any bytes, that doesn't necessarily mean EOF.\n  // wait for the next one.\n  if (nread === 0) {\n    debug('not any data, keep waiting');\n    return;\n  }\n\n  // Error, possibly EOF.\n  if (nread !== uv.UV_EOF) {\n    return self._destroy(errnoException(nread, 'read'));\n  }\n\n  debug('EOF');\n\n  if (self._readableState.length === 0) {\n    self.readable = false;\n    maybeDestroy(self);\n  }\n\n  // push a null to signal the end of data.\n  self.push(null);\n\n  // internal end event so that we know that the actual socket\n  // is no longer readable, and we can start the shutdown\n  // procedure. No need to wait for all the data to be consumed.\n  self.emit('_socketEnd');\n}"),
 1068. (Types.Instrumented "function (er) {\n    onwrite(stream, er);\n  }"),
 1069. (Types.Instrumented
          "function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }"),
 1070. (Types.Instrumented "function (er) {\n    onwrite(stream, er);\n  }"),
 1071. (Types.Instrumented
          "function onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}"),
 1072. (Types.Instrumented
          "function inner() {\n                                jalangiLabel0:\n                                    while (true) {\n                                        try {\n                                            J$.Fe(145, arguments.callee, this, arguments);\n                                            arguments = J$.N(153, 'arguments', arguments, 4);\n                                            J$.N(161, 'z', z, 0);\n                                            var z = J$.X1(97, J$.W(89, 'z', J$.T(81, 4, 22, false), z, 1));\n                                            return J$.X1(137, J$.Rt(129, J$.B(18, '+', J$.B(10, '+', J$.R(105, 'x', x, 0), J$.R(113, 'y', y, 0), 0), J$.R(121, 'z', z, 0), 0)));\n                                        } catch (J$e) {\n                                            J$.Ex(745, J$e);\n                                        } finally {\n                                            if (J$.Fr(753))\n                                                continue jalangiLabel0;\n                                            else\n                                                return J$.Ra();\n                                        }\n                                    }\n                            }"),
 1073. (Types.Instrumented "function () { [native code] }"),
 1074. (Types.Instrumented "function () { [native code] }"),
 1075. (Types.Instrumented
          "function () {\n                                    jalangiLabel3:\n                                        while (true) {\n                                            try {\n                                                J$.Fe(569, arguments.callee, this, arguments);\n                                                arguments = J$.N(577, 'arguments', arguments, 4);\n                                                J$.X1(561, J$.P(553, J$.R(537, 'this', this, 0), 'x', J$.T(545, 1, 22, false), 0));\n                                            } catch (J$e) {\n                                                J$.Ex(801, J$e);\n                                            } finally {\n                                                if (J$.Fr(809))\n                                                    continue jalangiLabel3;\n                                                else\n                                                    return J$.Ra();\n                                            }\n                                        }\n                                }"),
 0. AlmostWeakMap, function:1/0;
    Array, [W-C] function:2/1;
    ArrayBuffer, [W-C] function:3/2;
    Boolean, [W-C] function:4/3;
    Buffer, function:5/4;
    DataView, [W-C] function:6/5;
    Date, [W-C] function:7/6;
    Error, [W-C] function:8/7;
    EvalError, [W-C] function:9/8;
    Float32Array, [W-C] function:10/9;
    Float64Array, [W-C] function:11/10;
    Function, [W-C] function:12/11;
    GLOBAL, object:0;
    Infinity, [---] float:inf;
    Int16Array, [W-C] function:13/12;
    Int32Array, [W-C] function:14/13;
    Int8Array, [W-C] function:15/14;
    Intl, [W-C] object:16;
    JSON, [W-C] object:17;
    Map, [W-C] function:18/15;
    Math, [W-C] object:19;
    NaN, [---] float:nan;
    Number, [W-C] function:20/16;
    Object, [W-C] function:21/17;
    Promise, [W-C] function:22/18;
    RangeError, [W-C] function:23/19;
    ReferenceError, [W-C] function:24/20;
    RegExp, [W-C] function:25/21;
    Set, [W-C] function:26/22;
    String, [W-C] function:27/23;
    Symbol, [W-C] function:28/24;
    SyntaxError, [W-C] function:29/25;
    TypeError, [W-C] function:30/26;
    URIError, [W-C] function:31/27;
    Uint16Array, [W-C] function:32/28;
    Uint32Array, [W-C] function:33/29;
    Uint8Array, [W-C] function:34/30;
    Uint8ClampedArray, [W-C] function:35/31;
    WeakMap, [W-C] function:36/32;
    WeakSet, [W-C] function:37/33;
    clearImmediate, function:38/34;
    clearInterval, function:39/35;
    clearTimeout, function:40/36;
    console, [WEC] undefined { get = function:41/37, set =  };
    decodeURI, [W-C] function:42/38;
    decodeURIComponent, [W-C] function:43/39;
    encodeURI, [W-C] function:44/40;
    encodeURIComponent, [W-C] function:45/41;
    escape, [W-C] function:46/42;
    eval, [W-C] function:47/43;
    global, object:0;
    isFinite, [W-C] function:48/44;
    isNaN, [W-C] function:49/45;
    parseFloat, [W-C] function:50/46;
    parseInt, [W-C] function:51/47;
    process, object:52;
    root, object:0;
    setImmediate, function:53/48;
    setInterval, function:54/49;
    setTimeout, function:55/50;
    undefined, [---] undefined;
    unescape, [W-C] function:56/51,
 1. length, [--C] int:0;
    name, [--C] string:AlmostWeakMap;
    prototype, [W--] object:57,
 2. from, [W-C] function:58/52;
    isArray, [W-C] function:59/53;
    length, [--C] int:1;
    name, [--C] string:Array;
    observe, [W-C] function:60/54;
    of, [W-C] function:61/55;
    prototype, [---] object:62;
    unobserve, [W-C] function:63/56,
 3. isView, [W-C] function:64/57;
    length, [--C] int:1;
    name, [--C] string:ArrayBuffer;
    prototype, [---] object:65,
 4. length, [--C] int:1;
    name, [--C] string:Boolean;
    prototype, [---] object:66,
 5. byteLength, function:67/58;
    compare, function:68/59;
    concat, function:69/60;
    isBuffer, function:70/61;
    isEncoding, function:71/62;
    length, [--C] int:2;
    name, [--C] string:Buffer;
    poolSize, int:8192;
    prototype, [W--] object:72,
 6. length, [--C] int:3;
    name, [--C] string:DataView;
    prototype, [---] object:73,
 7. UTC, [W-C] function:74/63;
    length, [--C] int:7;
    name, [--C] string:Date;
    now, [W-C] function:75/64;
    parse, [W-C] function:76/65;
    prototype, [---] object:77,
 8. captureStackTrace, function:78/66;
    length, [--C] int:1;
    name, [--C] string:Error;
    prototype, [---] object:79;
    stackTraceLimit, int:10,
 9. length, [--C] int:1;
    name, [--C] string:EvalError;
    prototype, [---] object:80,
 10. BYTES_PER_ELEMENT, [---] int:4;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Float32Array;
     of, [---] function:82/68;
     prototype, [---] object:83,
 11. BYTES_PER_ELEMENT, [---] int:8;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Float64Array;
     of, [---] function:82/68;
     prototype, [---] object:84,
 12. length, [--C] int:1;
     name, [--C] string:Function;
     prototype, [---] function:85/69,
 13. BYTES_PER_ELEMENT, [---] int:2;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Int16Array;
     of, [---] function:82/68;
     prototype, [---] object:86,
 14. BYTES_PER_ELEMENT, [---] int:4;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Int32Array;
     of, [---] function:82/68;
     prototype, [---] object:87,
 15. BYTES_PER_ELEMENT, [---] int:1;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Int8Array;
     of, [---] function:82/68;
     prototype, [---] object:88,
 16. Collator, [W-C] function:89/70;
     DateTimeFormat, [W-C] function:90/71;
     NumberFormat, [W-C] function:91/72;
     v8BreakIterator, [W-C] function:92/73,
 17. parse, [W-C] function:93/74;
     stringify, [W-C] function:94/75,
 18. length, [--C] int:0;
     name, [--C] string:Map;
     prototype, [---] object:95,
 19. E, [---] float:2.718282;
     LN10, [---] float:2.302585;
     LN2, [---] float:0.693147;
     LOG10E, [---] float:0.434294;
     LOG2E, [---] float:1.442695;
     PI, [---] float:3.141593;
     SQRT1_2, [---] float:0.707107;
     SQRT2, [---] float:1.414214;
     abs, [W-C] function:96/76;
     acos, [W-C] function:97/77;
     acosh, [W-C] function:98/78;
     asin, [W-C] function:99/79;
     asinh, [W-C] function:100/80;
     atan, [W-C] function:101/81;
     atan2, [W-C] function:102/82;
     atanh, [W-C] function:103/83;
     cbrt, [W-C] function:104/84;
     ceil, [W-C] function:105/85;
     clz32, [W-C] function:106/86;
     cos, [W-C] function:107/87;
     cosh, [W-C] function:108/88;
     exp, [W-C] function:109/89;
     expm1, [W-C] function:110/90;
     floor, [W-C] function:111/91;
     fround, [W-C] function:112/92;
     hypot, [W-C] function:113/93;
     imul, [W-C] function:114/94;
     log, [W-C] function:115/95;
     log10, [W-C] function:116/96;
     log1p, [W-C] function:117/97;
     log2, [W-C] function:118/98;
     max, [W-C] function:119/99;
     min, [W-C] function:120/100;
     pow, [W-C] function:121/101;
     random, [W-C] function:122/102;
     round, [W-C] function:123/103;
     sign, [W-C] function:124/104;
     sin, [W-C] function:125/105;
     sinh, [W-C] function:126/106;
     sqrt, [W-C] function:127/107;
     tan, [W-C] function:128/108;
     tanh, [W-C] function:129/109;
     trunc, [W-C] function:130/110,
 20. EPSILON, [---] float:0.000000;
     MAX_SAFE_INTEGER, [---] int:9007199254740991;
     MAX_VALUE, [---] float:179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
     MIN_SAFE_INTEGER, [---] int:-9007199254740991;
     MIN_VALUE, [---] float:0.000000;
     NEGATIVE_INFINITY, [---] float:-inf;
     NaN, [---] float:nan;
     POSITIVE_INFINITY, [---] float:inf;
     isFinite, [W-C] function:131/111;
     isInteger, [W-C] function:132/112;
     isNaN, [W-C] function:133/113;
     isSafeInteger, [W-C] function:134/114;
     length, [--C] int:1;
     name, [--C] string:Number;
     parseFloat, [W-C] function:50/46;
     parseInt, [W-C] function:51/47;
     prototype, [---] object:135,
 21. assign, [W-C] function:136/115;
     create, [W-C] function:137/116;
     defineProperties, [W-C] function:138/117;
     defineProperty, [W-C] function:139/118;
     deliverChangeRecords, [W-C] function:140/119;
     freeze, [W-C] function:141/120;
     getNotifier, [W-C] function:142/121;
     getOwnPropertyDescriptor, [W-C] function:143/122;
     getOwnPropertyNames, [W-C] function:144/123;
     getOwnPropertySymbols, [W-C] function:145/124;
     getPrototypeOf, [W-C] function:146/125;
     is, [W-C] function:147/126;
     isExtensible, [W-C] function:148/127;
     isFrozen, [W-C] function:149/128;
     isSealed, [W-C] function:150/129;
     keys, [W-C] function:151/130;
     length, [--C] int:1;
     name, [--C] string:Object;
     observe, [W-C] function:152/131;
     preventExtensions, [W-C] function:153/132;
     prototype, [---] object:154;
     seal, [W-C] function:155/133;
     setPrototypeOf, [W-C] function:156/134;
     unobserve, [W-C] function:157/135,
 22. accept, [W-C] function:158/136;
     all, [W-C] function:159/137;
     defer, [W-C] function:160/138;
     length, [--C] int:1;
     name, [--C] string:Promise;
     prototype, [---] object:161;
     race, [W-C] function:162/139;
     reject, [W-C] function:163/140;
     resolve, [W-C] function:164/141,
 23. length, [--C] int:1;
     name, [--C] string:RangeError;
     prototype, [---] object:165,
 24. length, [--C] int:1;
     name, [--C] string:ReferenceError;
     prototype, [---] object:166,
 25. $&, [W--] undefined { get = function:167/142, set = function:168/143 };
     $', [W--] undefined { get = function:169/144, set = function:168/143 };
     $*, [W--] undefined { get = function:170/145, set = function:171/146 };
     $+, [W--] undefined { get = function:172/147, set = function:168/143 };
     $1, [WE-] undefined { get = function:173/148, set = function:168/143 };
     $2, [WE-] undefined { get = function:174/149, set = function:168/143 };
     $3, [WE-] undefined { get = function:175/150, set = function:168/143 };
     $4, [WE-] undefined { get = function:176/151, set = function:168/143 };
     $5, [WE-] undefined { get = function:177/152, set = function:168/143 };
     $6, [WE-] undefined { get = function:178/153, set = function:168/143 };
     $7, [WE-] undefined { get = function:179/154, set = function:168/143 };
     $8, [WE-] undefined { get = function:180/155, set = function:168/143 };
     $9, [WE-] undefined { get = function:181/156, set = function:168/143 };
     $_, [W--] undefined { get = function:182/157, set = function:183/158 };
     $`, [W--] undefined { get = function:184/159, set = function:168/143 };
     input, [WE-] undefined { get = function:182/157, set = function:183/158 };
     lastMatch, [WE-] undefined { get = function:167/142, set = function:168/143 };
     lastParen, [WE-] undefined { get = function:172/147, set = function:168/143 };
     leftContext, [WE-] undefined { get = function:184/159, set = function:168/143 };
     length, [--C] int:2;
     multiline, [WE-] undefined { get = function:170/145, set = function:171/146 };
     name, [--C] string:RegExp;
     prototype, [---] object:185;
     rightContext, [WE-] undefined { get = function:169/144, set = function:168/143 },
 26. length, [--C] int:0;
     name, [--C] string:Set;
     prototype, [---] object:186,
 27. fromCharCode, [W-C] function:187/160;
     fromCodePoint, [W-C] function:188/161;
     length, [--C] int:1;
     name, [--C] string:String;
     prototype, [---] object:189;
     raw, [W-C] function:190/162,
 28. for, [W-C] function:191/163;
     iterator, [---] symbol:Symbol(Symbol.iterat...;
     keyFor, [W-C] function:192/164;
     length, [--C] int:1;
     name, [--C] string:Symbol;
     prototype, [---] object:193;
     unscopables, [---] symbol:Symbol(Symbol.unscop...,
 29. length, [--C] int:1;
     name, [--C] string:SyntaxError;
     prototype, [---] object:194,
 30. length, [--C] int:1;
     name, [--C] string:TypeError;
     prototype, [---] object:195,
 31. length, [--C] int:1;
     name, [--C] string:URIError;
     prototype, [---] object:196,
 32. BYTES_PER_ELEMENT, [---] int:2;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Uint16Array;
     of, [---] function:82/68;
     prototype, [---] object:197,
 33. BYTES_PER_ELEMENT, [---] int:4;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Uint32Array;
     of, [---] function:82/68;
     prototype, [---] object:198,
 34. BYTES_PER_ELEMENT, [---] int:1;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Uint8Array;
     of, [---] function:82/68;
     prototype, [---] object:199,
 35. BYTES_PER_ELEMENT, [---] int:1;
     from, [---] function:81/67;
     length, [--C] int:3;
     name, [--C] string:Uint8ClampedArray;
     of, [---] function:82/68;
     prototype, [---] object:200,
 36. length, [--C] int:0;
     name, [--C] string:WeakMap;
     prototype, [---] object:201,
 37. length, [--C] int:0;
     name, [--C] string:WeakSet;
     prototype, [---] object:202,
 38. length, [--C] int:1;
     name, [--C] string:;
     prototype, [W--] object:203,
 39. length, [--C] int:1;
     name, [--C] string:;
     prototype, [W--] object:204,
 40. length, [--C] int:1;
     name, [--C] string:;
     prototype, [W--] object:205,
 41. length, [--C] int:0;
     name, [--C] string:;
     prototype, [W--] object:206,
 42. length, [--C] int:1;
     name, [--C] string:decodeURI,
 43. length, [--C] int:1;
     name, [--C] string:decodeURIComponent,
 44. length, [--C] int:1;
     name, [--C] string:encodeURI,
 45. length, [--C] int:1;
     name, [--C] string:encodeURIComponent,
 46. length, [--C] int:1;
     name, [--C] string:escape,
 47. length, [--C] int:1;
     name, [--C] string:eval,
 48. length, [--C] int:1;
     name, [--C] string:isFinite,
 49. length, [--C] int:1;
     name, [--C] string:isNaN,
 50. length, [--C] int:1;
     name, [--C] string:parseFloat,
 51. length, [--C] int:2;
     name, [--C] string:parseInt,
 52. EventEmitter, function:207/165;
     _debugEnd, function:208/166;
     _debugPause, function:209/167;
     _debugProcess, function:210/168;
     _events, object:211;
     _eventsCount, float:nan;
     _exiting, bool:false;
     _fatalException, function:212/169;
     _getActiveHandles, function:213/170;
     _getActiveRequests, function:214/171;
     _kill, function:215/172;
     _linkedBinding, function:216/173;
     _maxListeners, undefined;
     _needImmediateCallback, bool:false;
     _promiseRejectEvent, [--C] object:217;
     _rawDebug, function:218/174;
     _setupDomainUse, function:219/175;
     _startProfilerIdleNotifier, function:220/176;
     _stopProfilerIdleNotifier, function:221/177;
     _tickCallback, function:222/178;
     _tickDomainCallback, function:223/179;
     abort, function:224/180;
     arch, [-EC] string:x64;
     argv, object:225;
     assert, function:226/181;
     binding, function:227/182;
     chdir, function:228/183;
     config, object:229;
     cwd, function:230/184;
     debugPort, int:5858;
     dlopen, function:231/185;
     domain, null;
     env, object:232;
     execArgv, object:233;
     execPath, string:/usr/bin/nodejs;
     exit, function:234/186;
     features, [-EC] object:235;
     getegid, function:236/187;
     geteuid, function:237/188;
     getgid, function:238/189;
     getgroups, function:239/190;
     getuid, function:240/191;
     hrtime, function:241/192;
     initgroups, function:242/193;
     kill, function:243/194;
     mainModule, object:244;
     memoryUsage, function:245/195;
     moduleLoadList, [-EC] object:246;
     nextTick, function:247/196;
     openStdin, function:248/197;
     pid, [-EC] int:21259;
     platform, [-EC] string:linux;
     reallyExit, function:249/198;
     release, [-EC] object:250;
     setegid, function:251/199;
     seteuid, function:252/200;
     setgid, function:253/201;
     setgroups, function:254/202;
     setuid, function:255/203;
     stderr, [WEC] undefined { get = function:256/204, set =  };
     stdin, [WEC] undefined { get = function:257/205, set =  };
     stdout, [WEC] undefined { get = function:258/206, set =  };
     title, string:node;
     umask, function:259/207;
     uptime, function:260/208;
     version, [-EC] string:v4.3.1;
     versions, [-EC] object:261,
 53. length, [--C] int:4;
     name, [--C] string:;
     prototype, [W--] object:262,
 54. length, [--C] int:2;
     name, [--C] string:;
     prototype, [W--] object:263,
 55. length, [--C] int:2;
     name, [--C] string:;
     prototype, [W--] object:264,
 56. length, [--C] int:1;
     name, [--C] string:unescape,
 57. constructor, [W-C] function:1/0,
 58. length, [--C] int:1;
     name, [--C] string:from,
 59. length, [--C] int:1;
     name, [--C] string:isArray,
 60. length, [--C] int:2;
     name, [--C] string:observe,
 61. length, [--C] int:0;
     name, [--C] string:of,
 62. concat, [W-C] function:265/209;
     constructor, [W-C] function:2/1;
     copyWithin, [W-C] function:266/210;
     entries, [W-C] function:267/211;
     every, [W-C] function:268/212;
     fill, [W-C] function:269/213;
     filter, [W-C] function:270/214;
     find, [W-C] function:271/215;
     findIndex, [W-C] function:272/216;
     forEach, [W-C] function:273/217;
     indexOf, [W-C] function:274/218;
     join, [W-C] function:275/219;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:277/221;
     length, [W--] int:0;
     map, [W-C] function:278/222;
     pop, [W-C] function:279/223;
     push, [W-C] function:280/224;
     reduce, [W-C] function:281/225;
     reduceRight, [W-C] function:282/226;
     reverse, [W-C] function:283/227;
     shift, [W-C] function:284/228;
     slice, [W-C] function:285/229;
     some, [W-C] function:286/230;
     sort, [W-C] function:287/231;
     splice, [W-C] function:288/232;
     toLocaleString, [W-C] function:289/233;
     toString, [W-C] function:290/234;
     unshift, [W-C] function:291/235,
 63. length, [--C] int:2;
     name, [--C] string:unobserve,
 64. length, [--C] int:1;
     name, [--C] string:isView,
 65. byteLength, [W-C] undefined { get = function:292/236, set =  };
     constructor, [W-C] function:3/2;
     slice, [W-C] function:293/237,
 66. constructor, [W-C] function:4/3;
     toString, [W-C] function:294/238;
     valueOf, [W-C] function:295/239,
 67. length, [--C] int:2;
     name, [--C] string:byteLength;
     prototype, [W--] object:296,
 68. length, [--C] int:2;
     name, [--C] string:compare;
     prototype, [W--] object:297,
 69. length, [--C] int:2;
     name, [--C] string:;
     prototype, [W--] object:298,
 70. length, [--C] int:1;
     name, [--C] string:isBuffer;
     prototype, [W--] object:299,
 71. length, [--C] int:1;
     name, [--C] string:;
     prototype, [W--] object:300,
 72. asciiSlice, function:301/240;
     asciiWrite, function:302/241;
     base64Slice, function:303/242;
     base64Write, function:304/243;
     binarySlice, function:305/244;
     binaryWrite, function:306/245;
     compare, function:307/246;
     constructor, [W-C] function:5/4;
     copy, function:308/247;
     equals, function:309/248;
     fill, function:310/249;
     get, function:311/250;
     hexSlice, function:312/251;
     hexWrite, function:313/252;
     indexOf, function:314/253;
     inspect, function:315/254;
     offset, [WE-] undefined { get = function:316/255, set =  };
     parent, [WE-] undefined { get = function:317/256, set =  };
     readDoubleBE, function:318/257;
     readDoubleLE, function:319/258;
     readFloatBE, function:320/259;
     readFloatLE, function:321/260;
     readInt16BE, function:322/261;
     readInt16LE, function:323/262;
     readInt32BE, function:324/263;
     readInt32LE, function:325/264;
     readInt8, function:326/265;
     readIntBE, function:327/266;
     readIntLE, function:328/267;
     readUInt16BE, function:329/268;
     readUInt16LE, function:330/269;
     readUInt32BE, function:331/270;
     readUInt32LE, function:332/271;
     readUInt8, function:333/272;
     readUIntBE, function:334/273;
     readUIntLE, function:335/274;
     set, function:336/275;
     slice, function:337/276;
     toJSON, function:338/277;
     toString, function:339/278;
     ucs2Slice, function:340/279;
     ucs2Write, function:341/280;
     utf8Slice, function:342/281;
     utf8Write, function:343/282;
     write, function:344/283;
     writeDoubleBE, function:345/284;
     writeDoubleLE, function:346/285;
     writeFloatBE, function:347/286;
     writeFloatLE, function:348/287;
     writeInt16BE, function:349/288;
     writeInt16LE, function:350/289;
     writeInt32BE, function:351/290;
     writeInt32LE, function:352/291;
     writeInt8, function:353/292;
     writeIntBE, function:354/293;
     writeIntLE, function:355/294;
     writeUInt16BE, function:356/295;
     writeUInt16LE, function:357/296;
     writeUInt32BE, function:358/297;
     writeUInt32LE, function:359/298;
     writeUInt8, function:360/299;
     writeUIntBE, function:361/300;
     writeUIntLE, function:362/301,
 73. buffer, [W-C] undefined { get = function:363/302, set =  };
     byteLength, [W-C] undefined { get = function:364/303, set =  };
     byteOffset, [W-C] undefined { get = function:365/304, set =  };
     constructor, [W-C] function:6/5;
     getFloat32, [W-C] function:366/305;
     getFloat64, [W-C] function:367/306;
     getInt16, [W-C] function:368/307;
     getInt32, [W-C] function:369/308;
     getInt8, [W-C] function:370/309;
     getUint16, [W-C] function:371/310;
     getUint32, [W-C] function:372/311;
     getUint8, [W-C] function:373/312;
     setFloat32, [W-C] function:374/313;
     setFloat64, [W-C] function:375/314;
     setInt16, [W-C] function:376/315;
     setInt32, [W-C] function:377/316;
     setInt8, [W-C] function:378/317;
     setUint16, [W-C] function:379/318;
     setUint32, [W-C] function:380/319;
     setUint8, [W-C] function:381/320,
 74. length, [--C] int:7;
     name, [--C] string:UTC,
 75. length, [--C] int:0;
     name, [--C] string:now,
 76. length, [--C] int:1;
     name, [--C] string:parse,
 77. constructor, [W-C] function:7/6;
     getDate, [W-C] function:382/321;
     getDay, [W-C] function:383/322;
     getFullYear, [W-C] function:384/323;
     getHours, [W-C] function:385/324;
     getMilliseconds, [W-C] function:386/325;
     getMinutes, [W-C] function:387/326;
     getMonth, [W-C] function:388/327;
     getSeconds, [W-C] function:389/328;
     getTime, [W-C] function:390/329;
     getTimezoneOffset, [W-C] function:391/330;
     getUTCDate, [W-C] function:392/331;
     getUTCDay, [W-C] function:393/332;
     getUTCFullYear, [W-C] function:394/333;
     getUTCHours, [W-C] function:395/334;
     getUTCMilliseconds, [W-C] function:396/335;
     getUTCMinutes, [W-C] function:397/336;
     getUTCMonth, [W-C] function:398/337;
     getUTCSeconds, [W-C] function:399/338;
     getYear, [W-C] function:400/339;
     setDate, [W-C] function:401/340;
     setFullYear, [W-C] function:402/341;
     setHours, [W-C] function:403/342;
     setMilliseconds, [W-C] function:404/343;
     setMinutes, [W-C] function:405/344;
     setMonth, [W-C] function:406/345;
     setSeconds, [W-C] function:407/346;
     setTime, [W-C] function:408/347;
     setUTCDate, [W-C] function:409/348;
     setUTCFullYear, [W-C] function:410/349;
     setUTCHours, [W-C] function:411/350;
     setUTCMilliseconds, [W-C] function:412/351;
     setUTCMinutes, [W-C] function:413/352;
     setUTCMonth, [W-C] function:414/353;
     setUTCSeconds, [W-C] function:415/354;
     setYear, [W-C] function:416/355;
     toDateString, [W-C] function:417/356;
     toGMTString, [W-C] function:418/357;
     toISOString, [W-C] function:419/358;
     toJSON, [W-C] function:420/359;
     toLocaleDateString, [W-C] function:421/360;
     toLocaleString, [W-C] function:422/361;
     toLocaleTimeString, [W-C] function:423/362;
     toString, [W-C] function:424/363;
     toTimeString, [W-C] function:425/364;
     toUTCString, [W-C] function:426/365;
     valueOf, [W-C] function:427/366,
 78. length, [--C] int:2;
     name, [--C] string:captureStackTrace;
     prototype, [---] object:428,
 79. constructor, [W-C] function:8/7;
     message, [W-C] string:;
     name, [W-C] string:Error;
     toString, [W-C] function:429/367,
 80. constructor, [W-C] function:9/8;
     name, [W-C] string:EvalError,
 81. length, [--C] int:1;
     name, [--C] string:from,
 82. length, [--C] int:0;
     name, [--C] string:of,
 83. BYTES_PER_ELEMENT, [---] int:4;
     buffer, [W-C] undefined { get = function:430/368, set =  };
     byteLength, [W--] undefined { get = function:431/369, set =  };
     byteOffset, [W--] undefined { get = function:432/370, set =  };
     constructor, [W-C] function:10/9;
     copyWithin, [W-C] function:433/371;
     entries, [W-C] function:267/211;
     every, [W-C] function:434/372;
     fill, [W-C] function:435/373;
     filter, [W-C] function:436/374;
     find, [W-C] function:437/375;
     findIndex, [W-C] function:438/376;
     forEach, [W-C] function:439/377;
     indexOf, [W-C] function:440/378;
     join, [W-C] function:441/379;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:442/380;
     length, [W--] undefined { get = function:443/381, set =  };
     map, [W-C] function:444/382;
     reduce, [W-C] function:445/383;
     reduceRight, [W-C] function:446/384;
     reverse, [W-C] function:447/385;
     set, [W-C] function:448/386;
     slice, [W-C] function:449/387;
     some, [W-C] function:450/388;
     sort, [W-C] function:451/389;
     subarray, [W-C] function:452/390;
     toLocaleString, [W-C] function:453/391;
     toString, [W-C] function:454/392;
     values, [W-C] function:455/393,
 84. BYTES_PER_ELEMENT, [---] int:8;
     buffer, [W-C] undefined { get = function:456/394, set =  };
     byteLength, [W--] undefined { get = function:457/395, set =  };
     byteOffset, [W--] undefined { get = function:458/396, set =  };
     constructor, [W-C] function:11/10;
     copyWithin, [W-C] function:433/371;
     entries, [W-C] function:267/211;
     every, [W-C] function:434/372;
     fill, [W-C] function:435/373;
     filter, [W-C] function:436/374;
     find, [W-C] function:437/375;
     findIndex, [W-C] function:438/376;
     forEach, [W-C] function:439/377;
     indexOf, [W-C] function:440/378;
     join, [W-C] function:441/379;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:442/380;
     length, [W--] undefined { get = function:459/397, set =  };
     map, [W-C] function:444/382;
     reduce, [W-C] function:445/383;
     reduceRight, [W-C] function:446/384;
     reverse, [W-C] function:447/385;
     set, [W-C] function:448/386;
     slice, [W-C] function:449/387;
     some, [W-C] function:450/388;
     sort, [W-C] function:451/389;
     subarray, [W-C] function:460/398;
     toLocaleString, [W-C] function:453/391;
     toString, [W-C] function:454/392;
     values, [W-C] function:455/393,
 85. apply, [W-C] function:461/399;
     bind, [W-C] function:462/400;
     call, [W-C] function:463/401;
     constructor, [W-C] function:12/11;
     length, [--C] int:0;
     name, [--C] string:;
     toString, [W-C] function:464/402,
 86. BYTES_PER_ELEMENT, [---] int:2;
     buffer, [W-C] undefined { get = function:465/403, set =  };
     byteLength, [W--] undefined { get = function:466/404, set =  };
     byteOffset, [W--] undefined { get = function:467/405, set =  };
     constructor, [W-C] function:13/12;
     copyWithin, [W-C] function:433/371;
     entries, [W-C] function:267/211;
     every, [W-C] function:434/372;
     fill, [W-C] function:435/373;
     filter, [W-C] function:436/374;
     find, [W-C] function:437/375;
     findIndex, [W-C] function:438/376;
     forEach, [W-C] function:439/377;
     indexOf, [W-C] function:440/378;
     join, [W-C] function:441/379;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:442/380;
     length, [W--] undefined { get = function:468/406, set =  };
     map, [W-C] function:444/382;
     reduce, [W-C] function:445/383;
     reduceRight, [W-C] function:446/384;
     reverse, [W-C] function:447/385;
     set, [W-C] function:448/386;
     slice, [W-C] function:449/387;
     some, [W-C] function:450/388;
     sort, [W-C] function:451/389;
     subarray, [W-C] function:469/407;
     toLocaleString, [W-C] function:453/391;
     toString, [W-C] function:454/392;
     values, [W-C] function:455/393,
 87. BYTES_PER_ELEMENT, [---] int:4;
     buffer, [W-C] undefined { get = function:470/408, set =  };
     byteLength, [W--] undefined { get = function:471/409, set =  };
     byteOffset, [W--] undefined { get = function:472/410, set =  };
     constructor, [W-C] function:14/13;
     copyWithin, [W-C] function:433/371;
     entries, [W-C] function:267/211;
     every, [W-C] function:434/372;
     fill, [W-C] function:435/373;
     filter, [W-C] function:436/374;
     find, [W-C] function:437/375;
     findIndex, [W-C] function:438/376;
     forEach, [W-C] function:439/377;
     indexOf, [W-C] function:440/378;
     join, [W-C] function:441/379;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:442/380;
     length, [W--] undefined { get = function:473/411, set =  };
     map, [W-C] function:444/382;
     reduce, [W-C] function:445/383;
     reduceRight, [W-C] function:446/384;
     reverse, [W-C] function:447/385;
     set, [W-C] function:448/386;
     slice, [W-C] function:449/387;
     some, [W-C] function:450/388;
     sort, [W-C] function:451/389;
     subarray, [W-C] function:474/412;
     toLocaleString, [W-C] function:453/391;
     toString, [W-C] function:454/392;
     values, [W-C] function:455/393,
 88. BYTES_PER_ELEMENT, [---] int:1;
     buffer, [W-C] undefined { get = function:475/413, set =  };
     byteLength, [W--] undefined { get = function:476/414, set =  };
     byteOffset, [W--] undefined { get = function:477/415, set =  };
     constructor, [W-C] function:15/14;
     copyWithin, [W-C] function:433/371;
     entries, [W-C] function:267/211;
     every, [W-C] function:434/372;
     fill, [W-C] function:435/373;
     filter, [W-C] function:436/374;
     find, [W-C] function:437/375;
     findIndex, [W-C] function:438/376;
     forEach, [W-C] function:439/377;
     indexOf, [W-C] function:440/378;
     join, [W-C] function:441/379;
     keys, [W-C] function:276/220;
     lastIndexOf, [W-C] function:442/380;
     length, [W--] undefined { get = function:478/416, set =  };
     map, [W-C] function:444/382;
     reduce, [W-C] function:445/383;
     reduceRight, [W-C] function:446/384;
     reverse, [W-C] function:447/385;
     set, [W-C] function:448/386;
     slice, [W-C] function:449/387;
     some, [W-C] function:450/388;
     sort, [W-C] function:451/389;
     subarray, [W-C] function:479/417;
     toLocaleString, [W-C] function:453/391;
     toString, [W-C] function:454/392;
     values, [W-C] function:455/393,
 89. length, [--C] int:0;
     name, [--C] string:;
     prototype, [---] object:480;
     supportedLocalesOf, [W-C] function:481/418,
 90. length, [--C] int:0;
     name, [--C] string:;
     prototype, [---] object:482;
     supportedLocalesOf, [W-C] function:483/419,
 91. length, [--C] int:0;
     name, [--C] string:;
     prototype, [---] object:484;
     supportedLocalesOf, [W-C] function:485/420,
 92. length, [--C] int:0;
     name, [--C] string:;
     prototype, [---] object:486;
     supportedLocalesOf, [W-C] function:487/421,
 93. length, [--C] int:2;
     name, [--C] string:parse,
 94. length, [--C] int:3;
     name, [--C] string:stringify,
 95. clear, [W-C] function:488/422;
     constructor, [W-C] function:18/15;
     delete, [W-C] function:489/423;
     entries, [W-C] function:490/424;
     forEach, [W-C] function:491/425;
     get, [W-C] function:492/426;
     has, [W-C] function:493/427;
     keys, [W-C] function:494/428;
     set, [W-C] function:495/429;
     size, [W-C] undefined { get = function:496/430, set =  };
     values, [W-C] function:497/431,
 96. length, [--C] int:1;
     name, [--C] string:abs,
 97. length, [--C] int:1;
     name, [--C] string:acos,
 98. length, [--C] int:1;
     name, [--C] string:acosh,
 99. length, [--C] int:1;
     name, [--C] string:asin,
 100. length, [--C] int:1;
      name, [--C] string:asinh,
 101. length, [--C] int:1;
      name, [--C] string:atan,
 102. length, [--C] int:2;
      name, [--C] string:atan2,
 103. length, [--C] int:1;
      name, [--C] string:atanh,
 104. length, [--C] int:1;
      name, [--C] string:cbrt,
 105. length, [--C] int:1;
      name, [--C] string:ceil,
 106. length, [--C] int:1;
      name, [--C] string:clz32,
 107. length, [--C] int:1;
      name, [--C] string:cos,
 108. length, [--C] int:1;
      name, [--C] string:cosh,
 109. length, [--C] int:1;
      name, [--C] string:exp,
 110. length, [--C] int:1;
      name, [--C] string:expm1,
 111. length, [--C] int:1;
      name, [--C] string:floor,
 112. length, [--C] int:1;
      name, [--C] string:fround,
 113. length, [--C] int:2;
      name, [--C] string:hypot,
 114. length, [--C] int:2;
      name, [--C] string:imul,
 115. length, [--C] int:1;
      name, [--C] string:log,
 116. length, [--C] int:1;
      name, [--C] string:log10,
 117. length, [--C] int:1;
      name, [--C] string:log1p,
 118. length, [--C] int:1;
      name, [--C] string:log2,
 119. length, [--C] int:2;
      name, [--C] string:max,
 120. length, [--C] int:2;
      name, [--C] string:min,
 121. length, [--C] int:2;
      name, [--C] string:pow,
 122. length, [--C] int:0;
      name, [--C] string:random,
 123. length, [--C] int:1;
      name, [--C] string:round,
 124. length, [--C] int:1;
      name, [--C] string:sign,
 125. length, [--C] int:1;
      name, [--C] string:sin,
 126. length, [--C] int:1;
      name, [--C] string:sinh,
 127. length, [--C] int:1;
      name, [--C] string:sqrt,
 128. length, [--C] int:1;
      name, [--C] string:tan,
 129. length, [--C] int:1;
      name, [--C] string:tanh,
 130. length, [--C] int:1;
      name, [--C] string:trunc,
 131. length, [--C] int:1;
      name, [--C] string:isFinite,
 132. length, [--C] int:1;
      name, [--C] string:isInteger,
 133. length, [--C] int:1;
      name, [--C] string:isNaN,
 134. length, [--C] int:1;
      name, [--C] string:isSafeInteger,
 135. constructor, [W-C] function:20/16;
      toExponential, [W-C] function:498/432;
      toFixed, [W-C] function:499/433;
      toLocaleString, [W-C] function:500/434;
      toPrecision, [W-C] function:501/435;
      toString, [W-C] function:502/436;
      valueOf, [W-C] function:503/437,
 136. length, [--C] int:2;
      name, [--C] string:assign,
 137. length, [--C] int:2;
      name, [--C] string:create,
 138. length, [--C] int:2;
      name, [--C] string:defineProperties,
 139. length, [--C] int:3;
      name, [--C] string:defineProperty,
 140. length, [--C] int:1;
      name, [--C] string:deliverChangeRecords...,
 141. length, [--C] int:1;
      name, [--C] string:freeze,
 142. length, [--C] int:1;
      name, [--C] string:getNotifier,
 143. length, [--C] int:2;
      name, [--C] string:getOwnPropertyDescri...,
 144. length, [--C] int:1;
      name, [--C] string:getOwnPropertyNames,
 145. length, [--C] int:1;
      name, [--C] string:getOwnPropertySymbol...,
 146. length, [--C] int:1;
      name, [--C] string:getPrototypeOf,
 147. length, [--C] int:2;
      name, [--C] string:is,
 148. length, [--C] int:1;
      name, [--C] string:isExtensible,
 149. length, [--C] int:1;
      name, [--C] string:isFrozen,
 150. length, [--C] int:1;
      name, [--C] string:isSealed,
 151. length, [--C] int:1;
      name, [--C] string:keys,
 152. length, [--C] int:3;
      name, [--C] string:observe,
 153. length, [--C] int:1;
      name, [--C] string:preventExtensions,
 154. __defineGetter__, [W-C] function:504/438;
      __defineSetter__, [W-C] function:505/439;
      __lookupGetter__, [W-C] function:506/440;
      __lookupSetter__, [W-C] function:507/441;
      constructor, [W-C] function:21/17;
      hasOwnProperty, [W-C] function:510/444;
      isPrototypeOf, [W-C] function:511/445;
      propertyIsEnumerable, [W-C] function:512/446;
      toLocaleString, [W-C] function:513/447;
      toString, [W-C] function:514/448;
      valueOf, [W-C] function:515/449,
 155. length, [--C] int:1;
      name, [--C] string:seal,
 156. length, [--C] int:2;
      name, [--C] string:setPrototypeOf,
 157. length, [--C] int:2;
      name, [--C] string:unobserve,
 158. length, [--C] int:1;
      name, [--C] string:accept,
 159. length, [--C] int:1;
      name, [--C] string:all,
 160. length, [--C] int:0;
      name, [--C] string:defer,
 161. catch, [W-C] function:516/450;
      chain, [W-C] function:517/451;
      constructor, [W-C] function:22/18;
      then, [W-C] function:518/452,
 162. length, [--C] int:1;
      name, [--C] string:race,
 163. length, [--C] int:1;
      name, [--C] string:reject,
 164. length, [--C] int:1;
      name, [--C] string:resolve,
 165. constructor, [W-C] function:23/19;
      name, [W-C] string:RangeError,
 166. constructor, [W-C] function:24/20;
      name, [W-C] string:ReferenceError,
 167. length, [--C] int:0;
      name, [--C] string:RegExpGetLastMatch;
      prototype, [---] object:519,
 168. length, [--C] int:1;
      name, [--C] string:;
      prototype, [---] object:520,
 169. length, [--C] int:0;
      name, [--C] string:RegExpGetRightContex...;
      prototype, [---] object:521,
 170. length, [--C] int:0;
      name, [--C] string:;
      prototype, [---] object:522,
 171. length, [--C] int:1;
      name, [--C] string:;
      prototype, [---] object:523,
 172. length, [--C] int:0;
      name, [--C] string:RegExpGetLastParen;
      prototype, [---] object:524,
 173. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:525,
 174. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:526,
 175. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:527,
 176. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:528,
 177. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:529,
 178. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:530,
 179. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:531,
 180. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:532,
 181. length, [--C] int:0;
      name, [--C] string:foo;
      prototype, [---] object:533,
 182. length, [--C] int:0;
      name, [--C] string:;
      prototype, [---] object:534,
 183. length, [--C] int:1;
      name, [--C] string:;
      prototype, [---] object:535,
 184. length, [--C] int:0;
      name, [--C] string:RegExpGetLeftContext...;
      prototype, [---] object:536,
 185. compile, [W-C] function:537/453;
      constructor, [W-C] function:25/21;
      exec, [W-C] function:538/454;
      global, [---] bool:false;
      ignoreCase, [---] bool:false;
      lastIndex, [W--] int:0;
      multiline, [---] bool:false;
      source, [---] string:(?:);
      test, [W-C] function:539/455;
      toString, [W-C] function:540/456,
 186. add, [W-C] function:541/457;
      clear, [W-C] function:542/458;
      constructor, [W-C] function:26/22;
      delete, [W-C] function:543/459;
      entries, [W-C] function:544/460;
      forEach, [W-C] function:545/461;
      has, [W-C] function:546/462;
      keys, [W-C] function:547/463;
      size, [W-C] undefined { get = function:548/464, set =  };
      values, [W-C] function:547/463,
 187. length, [--C] int:1;
      name, [--C] string:fromCharCode,
 188. length, [--C] int:1;
      name, [--C] string:fromCodePoint,
 189. anchor, [W-C] function:549/465;
      big, [W-C] function:550/466;
      blink, [W-C] function:551/467;
      bold, [W-C] function:552/468;
      charAt, [W-C] function:553/469;
      charCodeAt, [W-C] function:554/470;
      codePointAt, [W-C] function:555/471;
      concat, [W-C] function:556/472;
      constructor, [W-C] function:27/23;
      endsWith, [W-C] function:557/473;
      fixed, [W-C] function:558/474;
      fontcolor, [W-C] function:559/475;
      fontsize, [W-C] function:560/476;
      includes, [W-C] function:561/477;
      indexOf, [W-C] function:562/478;
      italics, [W-C] function:563/479;
      lastIndexOf, [W-C] function:564/480;
      length, [---] int:0;
      link, [W-C] function:565/481;
      localeCompare, [W-C] function:566/482;
      match, [W-C] function:567/483;
      normalize, [W-C] function:568/484;
      repeat, [W-C] function:569/485;
      replace, [W-C] function:570/486;
      search, [W-C] function:571/487;
      slice, [W-C] function:572/488;
      small, [W-C] function:573/489;
      split, [W-C] function:574/490;
      startsWith, [W-C] function:575/491;
      strike, [W-C] function:576/492;
      sub, [W-C] function:577/493;
      substr, [W-C] function:578/494;
      substring, [W-C] function:579/495;
      sup, [W-C] function:580/496;
      toLocaleLowerCase, [W-C] function:581/497;
      toLocaleUpperCase, [W-C] function:582/498;
      toLowerCase, [W-C] function:583/499;
      toString, [W-C] function:584/500;
      toUpperCase, [W-C] function:585/501;
      trim, [W-C] function:586/502;
      trimLeft, [W-C] function:587/503;
      trimRight, [W-C] function:588/504;
      valueOf, [W-C] function:589/505,
 190. length, [--C] int:1;
      name, [--C] string:raw,
 191. length, [--C] int:1;
      name, [--C] string:for,
 192. length, [--C] int:1;
      name, [--C] string:keyFor,
 193. constructor, [W-C] function:28/24;
      toString, [W-C] function:590/506;
      valueOf, [W-C] function:591/507,
 194. constructor, [W-C] function:29/25;
      name, [W-C] string:SyntaxError,
 195. constructor, [W-C] function:30/26;
      name, [W-C] string:TypeError,
 196. constructor, [W-C] function:31/27;
      name, [W-C] string:URIError,
 197. BYTES_PER_ELEMENT, [---] int:2;
      buffer, [W-C] undefined { get = function:592/508, set =  };
      byteLength, [W--] undefined { get = function:593/509, set =  };
      byteOffset, [W--] undefined { get = function:594/510, set =  };
      constructor, [W-C] function:32/28;
      copyWithin, [W-C] function:433/371;
      entries, [W-C] function:267/211;
      every, [W-C] function:434/372;
      fill, [W-C] function:435/373;
      filter, [W-C] function:436/374;
      find, [W-C] function:437/375;
      findIndex, [W-C] function:438/376;
      forEach, [W-C] function:439/377;
      indexOf, [W-C] function:440/378;
      join, [W-C] function:441/379;
      keys, [W-C] function:276/220;
      lastIndexOf, [W-C] function:442/380;
      length, [W--] undefined { get = function:595/511, set =  };
      map, [W-C] function:444/382;
      reduce, [W-C] function:445/383;
      reduceRight, [W-C] function:446/384;
      reverse, [W-C] function:447/385;
      set, [W-C] function:448/386;
      slice, [W-C] function:449/387;
      some, [W-C] function:450/388;
      sort, [W-C] function:451/389;
      subarray, [W-C] function:596/512;
      toLocaleString, [W-C] function:453/391;
      toString, [W-C] function:454/392;
      values, [W-C] function:455/393,
 198. BYTES_PER_ELEMENT, [---] int:4;
      buffer, [W-C] undefined { get = function:597/513, set =  };
      byteLength, [W--] undefined { get = function:598/514, set =  };
      byteOffset, [W--] undefined { get = function:599/515, set =  };
      constructor, [W-C] function:33/29;
      copyWithin, [W-C] function:433/371;
      entries, [W-C] function:267/211;
      every, [W-C] function:434/372;
      fill, [W-C] function:435/373;
      filter, [W-C] function:436/374;
      find, [W-C] function:437/375;
      findIndex, [W-C] function:438/376;
      forEach, [W-C] function:439/377;
      indexOf, [W-C] function:440/378;
      join, [W-C] function:441/379;
      keys, [W-C] function:276/220;
      lastIndexOf, [W-C] function:442/380;
      length, [W--] undefined { get = function:600/516, set =  };
      map, [W-C] function:444/382;
      reduce, [W-C] function:445/383;
      reduceRight, [W-C] function:446/384;
      reverse, [W-C] function:447/385;
      set, [W-C] function:448/386;
      slice, [W-C] function:449/387;
      some, [W-C] function:450/388;
      sort, [W-C] function:451/389;
      subarray, [W-C] function:601/517;
      toLocaleString, [W-C] function:453/391;
      toString, [W-C] function:454/392;
      values, [W-C] function:455/393,
 199. BYTES_PER_ELEMENT, [---] int:1;
      buffer, [W-C] undefined { get = function:602/518, set =  };
      byteLength, [W--] undefined { get = function:603/519, set =  };
      byteOffset, [W--] undefined { get = function:604/520, set =  };
      constructor, [W-C] function:34/30;
      copyWithin, [W-C] function:433/371;
      entries, [W-C] function:267/211;
      every, [W-C] function:434/372;
      fill, [W-C] function:435/373;
      filter, [W-C] function:436/374;
      find, [W-C] function:437/375;
      findIndex, [W-C] function:438/376;
      forEach, [W-C] function:439/377;
      indexOf, [W-C] function:440/378;
      join, [W-C] function:441/379;
      keys, [W-C] function:276/220;
      lastIndexOf, [W-C] function:442/380;
      length, [W--] undefined { get = function:605/521, set =  };
      map, [W-C] function:444/382;
      reduce, [W-C] function:445/383;
      reduceRight, [W-C] function:446/384;
      reverse, [W-C] function:447/385;
      set, [W-C] function:448/386;
      slice, [W-C] function:449/387;
      some, [W-C] function:450/388;
      sort, [W-C] function:451/389;
      subarray, [W-C] function:606/522;
      toLocaleString, [W-C] function:453/391;
      toString, [W-C] function:454/392;
      values, [W-C] function:455/393,
 200. BYTES_PER_ELEMENT, [---] int:1;
      buffer, [W-C] undefined { get = function:607/523, set =  };
      byteLength, [W--] undefined { get = function:608/524, set =  };
      byteOffset, [W--] undefined { get = function:609/525, set =  };
      constructor, [W-C] function:35/31;
      copyWithin, [W-C] function:433/371;
      entries, [W-C] function:267/211;
      every, [W-C] function:434/372;
      fill, [W-C] function:435/373;
      filter, [W-C] function:436/374;
      find, [W-C] function:437/375;
      findIndex, [W-C] function:438/376;
      forEach, [W-C] function:439/377;
      indexOf, [W-C] function:440/378;
      join, [W-C] function:441/379;
      keys, [W-C] function:276/220;
      lastIndexOf, [W-C] function:442/380;
      length, [W--] undefined { get = function:610/526, set =  };
      map, [W-C] function:444/382;
      reduce, [W-C] function:445/383;
      reduceRight, [W-C] function:446/384;
      reverse, [W-C] function:447/385;
      set, [W-C] function:448/386;
      slice, [W-C] function:449/387;
      some, [W-C] function:450/388;
      sort, [W-C] function:451/389;
      subarray, [W-C] function:611/527;
      toLocaleString, [W-C] function:453/391;
      toString, [W-C] function:454/392;
      values, [W-C] function:455/393,
 201. constructor, [W-C] function:36/32;
      delete, [W-C] function:612/528;
      get, [W-C] function:613/529;
      has, [W-C] function:614/530;
      set, [W-C] function:615/531,
 202. add, [W-C] function:616/532;
      constructor, [W-C] function:37/33;
      delete, [W-C] function:617/533;
      has, [W-C] function:618/534,
 203. constructor, [W-C] function:38/34,
 204. constructor, [W-C] function:39/35,
 205. constructor, [W-C] function:40/36,
 206. constructor, [W-C] function:41/37,
 207. EventEmitter, function:207/165;
      defaultMaxListeners, int:10;
      init, function:619/535;
      length, [--C] int:0;
      listenerCount, function:620/536;
      name, [--C] string:EventEmitter;
      prototype, [W--] object:621;
      usingDomains, bool:false,
 208. length, [--C] int:0;
      name, [--C] string:_debugEnd;
      prototype, [W--] object:622,
 209. length, [--C] int:0;
      name, [--C] string:_debugPause;
      prototype, [W--] object:623,
 210. length, [--C] int:0;
      name, [--C] string:_debugProcess;
      prototype, [W--] object:624,
 211. SIGWINCH, function:625/537;
      newListener, function:626/538;
      removeListener, function:627/539,
 212. length, [--C] int:1;
      name, [--C] string:;
      prototype, [W--] object:628,
 213. length, [--C] int:0;
      name, [--C] string:_getActiveHandles;
      prototype, [W--] object:629,
 214. length, [--C] int:0;
      name, [--C] string:_getActiveRequests;
      prototype, [W--] object:630,
 215. length, [--C] int:0;
      name, [--C] string:_kill;
      prototype, [W--] object:631,
 216. length, [--C] int:0;
      name, [--C] string:_linkedBinding;
      prototype, [W--] object:632,
 217. handled, [-EC] int:1;
      unhandled, [-EC] int:0,
 218. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:633,
 219. length, [--C] int:0;
      name, [--C] string:_setupDomainUse;
      prototype, [W--] object:634,
 220. length, [--C] int:0;
      name, [--C] string:_startProfilerIdleNo...;
      prototype, [W--] object:635,
 221. length, [--C] int:0;
      name, [--C] string:_stopProfilerIdleNot...;
      prototype, [W--] object:636,
 222. length, [--C] int:0;
      name, [--C] string:_tickCallback;
      prototype, [W--] object:637,
 223. length, [--C] int:0;
      name, [--C] string:_tickDomainCallback;
      prototype, [W--] object:638,
 224. length, [--C] int:0;
      name, [--C] string:abort;
      prototype, [W--] object:639,
 225. 0, string:/usr/bin/nodejs;
      1, string:/local/home/jkloos/n...;
      2, string:--analysis;
      3, string:../tracer/AlmostWeak...;
      4, string:--analysis;
      5, string:../tracer/generic-tr...;
      6, string:--initParam;
      7, string:strategy:console;
      8, string:test-enrichment.js;
      length, [W--] int:9,
 226. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:640,
 227. length, [--C] int:0;
      name, [--C] string:binding;
      prototype, [W--] object:641,
 228. length, [--C] int:0;
      name, [--C] string:chdir;
      prototype, [W--] object:642,
 229. target_defaults, object:643;
      variables, object:644,
 230. length, [--C] int:0;
      name, [--C] string:cwd;
      prototype, [W--] object:645,
 231. length, [--C] int:0;
      name, [--C] string:dlopen;
      prototype, [W--] object:646,
 232. CAML_LD_LIBRARY_PATH, string:/home/jkloos/.opam/4...;
      CLUTTER_IM_MODULE, string:xim;
      COLORTERM, string:lilyterm;
      COMP_WORDBREAKS, string: 	...;
      DBUS_SESSION_BUS_ADDRESS, string:unix:abstract=/tmp/d...;
      DESKTOP_SESSION, string:gnome;
      DISPLAY, string::0;
      EDITOR, string:/usr/bin/vim;
      GDMSESSION, string:gnome;
      GDM_LANG, string:en_US.utf8;
      GIO_LAUNCHED_DESKTOP_FILE, string:/usr/share/applicati...;
      GIO_LAUNCHED_DESKTOP_FILE_PID, string:4154;
      GJS_DEBUG_OUTPUT, string:stderr;
      GJS_DEBUG_TOPICS, string:JS ERROR;JS LOG;
      GNOME_DESKTOP_SESSION_ID, string:this-is-deprecated;
      GTK_IM_MODULE, string:uim;
      GTK_MODULES, string:gail:atk-bridge;
      HOME, string:/home/jkloos;
      LANG, string:en_US.utf8;
      LC_MEASUREMENT, string:en_GB.utf8;
      LC_MONETARY, string:en_GB.utf8;
      LC_NUMERIC, string:en_GB.utf8;
      LC_PAPER, string:en_GB.utf8;
      LC_TIME, string:en_GB.utf8;
      LOGNAME, string:jkloos;
      LS_COLORS, string:rs=0:di=01;34:ln=01;...;
      MANPATH, string::/home/jkloos/.opam/...;
      OCAML_TOPLEVEL_PATH, string:/home/jkloos/.opam/4...;
      OLDPWD, string:/local/home/jkloos/w...;
      PATH, string:/home/jkloos/.opam/4...;
      PERL5LIB, string:/home/jkloos/.opam/4...;
      PWD, string:/local/home/jkloos/w...;
      QT4_IM_MODULE, string:uim;
      QT_ACCESSIBILITY, string:1;
      QT_IM_MODULE, string:xim;
      QT_LINUX_ACCESSIBILITY_ALWAYS_ON, string:1;
      SESSION_MANAGER, string:local/lap-51-51:@/tm...;
      SHELL, string:/bin/bash;
      SHLVL, string:1;
      SSH_AGENT_PID, string:2962;
      SSH_AUTH_SOCK, string:/run/user/1000/keyri...;
      TERM, string:xterm-256color;
      TEXTDOMAIN, string:im-config;
      TEXTDOMAINDIR, string:/usr/share/locale/;
      USER, string:jkloos;
      USERNAME, string:jkloos;
      VISUAL, string:/usr/bin/vim;
      VTE_CJK_WIDTH, string:narrow;
      VTE_VERSION, string:4204;
      WINDOWPATH, string:2;
      XAUTHORITY, string:/run/user/1000/gdm/X...;
      XDG_CURRENT_DESKTOP, string:GNOME;
      XDG_DATA_DIRS, string:/usr/share/gnome:/us...;
      XDG_MENU_PREFIX, string:gnome-;
      XDG_RUNTIME_DIR, string:/run/user/1000;
      XDG_SEAT, string:seat0;
      XDG_SESSION_COOKIE, string:1ccdfa0e6ed1fc511a47...;
      XDG_SESSION_DESKTOP, string:gnome;
      XDG_SESSION_ID, string:1;
      XDG_SESSION_TYPE, string:x11;
      XDG_VTNR, string:2;
      XMODIFIERS, string:@im=uim;
      _, string:/usr/bin/node,
 233. length, [W--] int:0,
 234. length, [--C] int:1;
      name, [--C] string:;
      prototype, [W--] object:647,
 235. debug, bool:false;
      ipv6, bool:true;
      tls, bool:true;
      tls_npn, bool:true;
      tls_ocsp, bool:true;
      tls_sni, bool:true;
      uv, bool:true,
 236. length, [--C] int:0;
      name, [--C] string:getegid;
      prototype, [W--] object:648,
 237. length, [--C] int:0;
      name, [--C] string:geteuid;
      prototype, [W--] object:649,
 238. length, [--C] int:0;
      name, [--C] string:getgid;
      prototype, [W--] object:650,
 239. length, [--C] int:0;
      name, [--C] string:getgroups;
      prototype, [W--] object:651,
 240. length, [--C] int:0;
      name, [--C] string:getuid;
      prototype, [W--] object:652,
 241. length, [--C] int:0;
      name, [--C] string:hrtime;
      prototype, [W--] object:653,
 242. length, [--C] int:0;
      name, [--C] string:initgroups;
      prototype, [W--] object:654,
 243. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:655,
 244. children, object:656;
      exports, object:657;
      filename, string:/local/home/jkloos/n...;
      id, string:.;
      loaded, bool:false;
      parent, null;
      paths, object:658,
 245. length, [--C] int:0;
      name, [--C] string:memoryUsage;
      prototype, [W--] object:659,
 246. 0, string:Binding contextify;
      1, string:Binding natives;
      10, string:NativeModule assert;
      11, string:NativeModule util;
      12, string:Binding uv;
      13, string:NativeModule path;
      14, string:NativeModule module;
      15, string:NativeModule interna...;
      16, string:NativeModule vm;
      17, string:NativeModule fs;
      18, string:Binding fs;
      19, string:NativeModule constan...;
      2, string:NativeModule events;
      20, string:Binding constants;
      21, string:NativeModule stream;
      22, string:NativeModule _stream...;
      23, string:NativeModule _stream...;
      24, string:NativeModule _stream...;
      25, string:NativeModule _stream...;
      26, string:NativeModule _stream...;
      27, string:Binding fs_event_wra...;
      28, string:NativeModule url;
      29, string:NativeModule punycod...;
      3, string:NativeModule buffer;
      30, string:NativeModule queryst...;
      31, string:NativeModule console...;
      32, string:Binding tty_wrap;
      33, string:NativeModule net;
      34, string:Binding cares_wrap;
      35, string:Binding tcp_wrap;
      36, string:Binding pipe_wrap;
      37, string:Binding stream_wrap;
      38, string:NativeModule tty;
      39, string:Binding signal_wrap;
      4, string:Binding buffer;
      5, string:NativeModule interna...;
      6, string:Binding util;
      7, string:NativeModule timers;
      8, string:Binding timer_wrap;
      9, string:NativeModule _linkli...;
      length, [W--] int:40,
 247. length, [--C] int:1;
      name, [--C] string:nextTick;
      prototype, [W--] object:660,
 248. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:661,
 249. length, [--C] int:0;
      name, [--C] string:reallyExit;
      prototype, [W--] object:662,
 250. headersUrl, [-EC] string:https://nodejs.org/d...;
      lts, [-EC] string:Argon;
      name, [-EC] string:node;
      sourceUrl, [-EC] string:https://nodejs.org/d...,
 251. length, [--C] int:0;
      name, [--C] string:setegid;
      prototype, [W--] object:663,
 252. length, [--C] int:0;
      name, [--C] string:seteuid;
      prototype, [W--] object:664,
 253. length, [--C] int:0;
      name, [--C] string:setgid;
      prototype, [W--] object:665,
 254. length, [--C] int:0;
      name, [--C] string:setgroups;
      prototype, [W--] object:666,
 255. length, [--C] int:0;
      name, [--C] string:setuid;
      prototype, [W--] object:667,
 256. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:668,
 257. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:669,
 258. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:670,
 259. length, [--C] int:0;
      name, [--C] string:umask;
      prototype, [W--] object:671,
 260. length, [--C] int:0;
      name, [--C] string:uptime;
      prototype, [W--] object:672,
 261. ares, [-EC] string:1.10.1-DEV;
      http_parser, [-EC] string:2.5.2;
      icu, [-EC] string:55.1;
      modules, [-EC] string:46;
      node, [-EC] string:4.3.1;
      openssl, [-EC] string:1.0.2f;
      uv, [-EC] string:1.8.0;
      v8, [-EC] string:4.5.103.35;
      zlib, [-EC] string:1.2.8,
 262. constructor, [W-C] function:53/48,
 263. constructor, [W-C] function:54/49,
 264. constructor, [W-C] function:55/50,
 265. length, [--C] int:1;
      name, [--C] string:concat,
 266. length, [--C] int:2;
      name, [--C] string:copyWithin,
 267. length, [--C] int:0;
      name, [--C] string:entries,
 268. length, [--C] int:1;
      name, [--C] string:every,
 269. length, [--C] int:1;
      name, [--C] string:fill,
 270. length, [--C] int:1;
      name, [--C] string:filter,
 271. length, [--C] int:1;
      name, [--C] string:find,
 272. length, [--C] int:1;
      name, [--C] string:findIndex,
 273. length, [--C] int:1;
      name, [--C] string:forEach,
 274. length, [--C] int:1;
      name, [--C] string:indexOf,
 275. length, [--C] int:1;
      name, [--C] string:join,
 276. length, [--C] int:0;
      name, [--C] string:keys,
 277. length, [--C] int:1;
      name, [--C] string:lastIndexOf,
 278. length, [--C] int:1;
      name, [--C] string:map,
 279. length, [--C] int:0;
      name, [--C] string:pop,
 280. length, [--C] int:1;
      name, [--C] string:push,
 281. length, [--C] int:1;
      name, [--C] string:reduce,
 282. length, [--C] int:1;
      name, [--C] string:reduceRight,
 283. length, [--C] int:0;
      name, [--C] string:reverse,
 284. length, [--C] int:0;
      name, [--C] string:shift,
 285. length, [--C] int:2;
      name, [--C] string:slice,
 286. length, [--C] int:1;
      name, [--C] string:some,
 287. length, [--C] int:1;
      name, [--C] string:sort,
 288. length, [--C] int:2;
      name, [--C] string:splice,
 289. length, [--C] int:0;
      name, [--C] string:toLocaleString,
 290. length, [--C] int:0;
      name, [--C] string:toString,
 291. length, [--C] int:1;
      name, [--C] string:unshift,
 292. length, [--C] int:0;
      name, [--C] string:get byteLength,
 293. length, [--C] int:2;
      name, [--C] string:slice,
 294. length, [--C] int:0;
      name, [--C] string:toString,
 295. length, [--C] int:0;
      name, [--C] string:valueOf,
 296. constructor, [W-C] function:67/58,
 297. constructor, [W-C] function:68/59,
 298. constructor, [W-C] function:69/60,
 299. constructor, [W-C] function:70/61,
 300. constructor, [W-C] function:71/62,
 301. length, [--C] int:0;
      name, [--C] string:asciiSlice;
      prototype, [W--] object:673,
 302. length, [--C] int:0;
      name, [--C] string:asciiWrite;
      prototype, [W--] object:674,
 303. length, [--C] int:0;
      name, [--C] string:base64Slice;
      prototype, [W--] object:675,
 304. length, [--C] int:0;
      name, [--C] string:base64Write;
      prototype, [W--] object:676,
 305. length, [--C] int:0;
      name, [--C] string:binarySlice;
      prototype, [W--] object:677,
 306. length, [--C] int:0;
      name, [--C] string:binaryWrite;
      prototype, [W--] object:678,
 307. length, [--C] int:1;
      name, [--C] string:compare;
      prototype, [W--] object:679,
 308. length, [--C] int:0;
      name, [--C] string:copy;
      prototype, [W--] object:680,
 309. length, [--C] int:1;
      name, [--C] string:equals;
      prototype, [W--] object:681,
 310. length, [--C] int:3;
      name, [--C] string:fill;
      prototype, [W--] object:682,
 311. length, [--C] int:0;
      name, [--C] string:deprecated;
      prototype, [W--] object:683,
 312. length, [--C] int:0;
      name, [--C] string:hexSlice;
      prototype, [W--] object:684,
 313. length, [--C] int:0;
      name, [--C] string:hexWrite;
      prototype, [W--] object:685,
 314. length, [--C] int:3;
      name, [--C] string:indexOf;
      prototype, [W--] object:686,
 315. length, [--C] int:0;
      name, [--C] string:inspect;
      prototype, [W--] object:687,
 316. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:688,
 317. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:689,
 318. length, [--C] int:2;
      name, [--C] string:readDoubleBE;
      prototype, [W--] object:690,
 319. length, [--C] int:2;
      name, [--C] string:readDoubleLE;
      prototype, [W--] object:691,
 320. length, [--C] int:2;
      name, [--C] string:readFloatBE;
      prototype, [W--] object:692,
 321. length, [--C] int:2;
      name, [--C] string:readFloatLE;
      prototype, [W--] object:693,
 322. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:694,
 323. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:695,
 324. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:696,
 325. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:697,
 326. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:698,
 327. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:699,
 328. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:700,
 329. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:701,
 330. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:702,
 331. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:703,
 332. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:704,
 333. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:705,
 334. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:706,
 335. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:707,
 336. length, [--C] int:0;
      name, [--C] string:deprecated;
      prototype, [W--] object:708,
 337. length, [--C] int:2;
      name, [--C] string:slice;
      prototype, [W--] object:709,
 338. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:710,
 339. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:711,
 340. length, [--C] int:0;
      name, [--C] string:ucs2Slice;
      prototype, [W--] object:712,
 341. length, [--C] int:0;
      name, [--C] string:ucs2Write;
      prototype, [W--] object:713,
 342. length, [--C] int:0;
      name, [--C] string:utf8Slice;
      prototype, [W--] object:714,
 343. length, [--C] int:0;
      name, [--C] string:utf8Write;
      prototype, [W--] object:715,
 344. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:716,
 345. length, [--C] int:3;
      name, [--C] string:writeDoubleBE;
      prototype, [W--] object:717,
 346. length, [--C] int:3;
      name, [--C] string:writeDoubleLE;
      prototype, [W--] object:718,
 347. length, [--C] int:3;
      name, [--C] string:writeFloatBE;
      prototype, [W--] object:719,
 348. length, [--C] int:3;
      name, [--C] string:writeFloatLE;
      prototype, [W--] object:720,
 349. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:721,
 350. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:722,
 351. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:723,
 352. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:724,
 353. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:725,
 354. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:726,
 355. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:727,
 356. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:728,
 357. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:729,
 358. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:730,
 359. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:731,
 360. length, [--C] int:3;
      name, [--C] string:;
      prototype, [W--] object:732,
 361. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:733,
 362. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:734,
 363. length, [--C] int:0;
      name, [--C] string:get buffer,
 364. length, [--C] int:0;
      name, [--C] string:get byteLength,
 365. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 366. length, [--C] int:2;
      name, [--C] string:getFloat32,
 367. length, [--C] int:2;
      name, [--C] string:getFloat64,
 368. length, [--C] int:2;
      name, [--C] string:getInt16,
 369. length, [--C] int:2;
      name, [--C] string:getInt32,
 370. length, [--C] int:2;
      name, [--C] string:getInt8,
 371. length, [--C] int:2;
      name, [--C] string:getUint16,
 372. length, [--C] int:2;
      name, [--C] string:getUint32,
 373. length, [--C] int:2;
      name, [--C] string:getUint8,
 374. length, [--C] int:3;
      name, [--C] string:setFloat32,
 375. length, [--C] int:3;
      name, [--C] string:setFloat64,
 376. length, [--C] int:3;
      name, [--C] string:setInt16,
 377. length, [--C] int:3;
      name, [--C] string:setInt32,
 378. length, [--C] int:3;
      name, [--C] string:setInt8,
 379. length, [--C] int:3;
      name, [--C] string:setUint16,
 380. length, [--C] int:3;
      name, [--C] string:setUint32,
 381. length, [--C] int:3;
      name, [--C] string:setUint8,
 382. length, [--C] int:0;
      name, [--C] string:getDate,
 383. length, [--C] int:0;
      name, [--C] string:getDay,
 384. length, [--C] int:0;
      name, [--C] string:getFullYear,
 385. length, [--C] int:0;
      name, [--C] string:getHours,
 386. length, [--C] int:0;
      name, [--C] string:getMilliseconds,
 387. length, [--C] int:0;
      name, [--C] string:getMinutes,
 388. length, [--C] int:0;
      name, [--C] string:getMonth,
 389. length, [--C] int:0;
      name, [--C] string:getSeconds,
 390. length, [--C] int:0;
      name, [--C] string:getTime,
 391. length, [--C] int:0;
      name, [--C] string:getTimezoneOffset,
 392. length, [--C] int:0;
      name, [--C] string:getUTCDate,
 393. length, [--C] int:0;
      name, [--C] string:getUTCDay,
 394. length, [--C] int:0;
      name, [--C] string:getUTCFullYear,
 395. length, [--C] int:0;
      name, [--C] string:getUTCHours,
 396. length, [--C] int:0;
      name, [--C] string:getUTCMilliseconds,
 397. length, [--C] int:0;
      name, [--C] string:getUTCMinutes,
 398. length, [--C] int:0;
      name, [--C] string:getUTCMonth,
 399. length, [--C] int:0;
      name, [--C] string:getUTCSeconds,
 400. length, [--C] int:0;
      name, [--C] string:getYear,
 401. length, [--C] int:1;
      name, [--C] string:setDate,
 402. length, [--C] int:3;
      name, [--C] string:setFullYear,
 403. length, [--C] int:4;
      name, [--C] string:setHours,
 404. length, [--C] int:1;
      name, [--C] string:setMilliseconds,
 405. length, [--C] int:3;
      name, [--C] string:setMinutes,
 406. length, [--C] int:2;
      name, [--C] string:setMonth,
 407. length, [--C] int:2;
      name, [--C] string:setSeconds,
 408. length, [--C] int:1;
      name, [--C] string:setTime,
 409. length, [--C] int:1;
      name, [--C] string:setUTCDate,
 410. length, [--C] int:3;
      name, [--C] string:setUTCFullYear,
 411. length, [--C] int:4;
      name, [--C] string:setUTCHours,
 412. length, [--C] int:1;
      name, [--C] string:setUTCMilliseconds,
 413. length, [--C] int:3;
      name, [--C] string:setUTCMinutes,
 414. length, [--C] int:2;
      name, [--C] string:setUTCMonth,
 415. length, [--C] int:2;
      name, [--C] string:setUTCSeconds,
 416. length, [--C] int:1;
      name, [--C] string:setYear,
 417. length, [--C] int:0;
      name, [--C] string:toDateString,
 418. length, [--C] int:0;
      name, [--C] string:toGMTString,
 419. length, [--C] int:0;
      name, [--C] string:toISOString,
 420. length, [--C] int:1;
      name, [--C] string:toJSON,
 421. length, [--C] int:0;
      name, [--C] string:toLocaleDateString,
 422. length, [--C] int:0;
      name, [--C] string:toLocaleString,
 423. length, [--C] int:0;
      name, [--C] string:toLocaleTimeString,
 424. length, [--C] int:0;
      name, [--C] string:toString,
 425. length, [--C] int:0;
      name, [--C] string:toTimeString,
 426. length, [--C] int:0;
      name, [--C] string:toUTCString,
 427. length, [--C] int:0;
      name, [--C] string:valueOf,
 428. constructor, [W-C] function:78/66,
 429. length, [--C] int:0;
      name, [--C] string:toString,
 430. length, [--C] int:0;
      name, [--C] string:get buffer,
 431. length, [--C] int:0;
      name, [--C] string:get byteLength,
 432. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 433. length, [--C] int:2;
      name, [--C] string:copyWithin,
 434. length, [--C] int:1;
      name, [--C] string:every,
 435. length, [--C] int:1;
      name, [--C] string:fill,
 436. length, [--C] int:1;
      name, [--C] string:filter,
 437. length, [--C] int:1;
      name, [--C] string:find,
 438. length, [--C] int:1;
      name, [--C] string:findIndex,
 439. length, [--C] int:1;
      name, [--C] string:forEach,
 440. length, [--C] int:1;
      name, [--C] string:indexOf,
 441. length, [--C] int:1;
      name, [--C] string:join,
 442. length, [--C] int:1;
      name, [--C] string:lastIndexOf,
 443. length, [--C] int:0;
      name, [--C] string:get length,
 444. length, [--C] int:1;
      name, [--C] string:map,
 445. length, [--C] int:1;
      name, [--C] string:reduce,
 446. length, [--C] int:1;
      name, [--C] string:reduceRight,
 447. length, [--C] int:0;
      name, [--C] string:reverse,
 448. length, [--C] int:2;
      name, [--C] string:set,
 449. length, [--C] int:2;
      name, [--C] string:slice,
 450. length, [--C] int:1;
      name, [--C] string:some,
 451. length, [--C] int:1;
      name, [--C] string:sort,
 452. length, [--C] int:2;
      name, [--C] string:subarray,
 453. length, [--C] int:0;
      name, [--C] string:toLocaleString,
 454. length, [--C] int:0;
      name, [--C] string:toString,
 455. length, [--C] int:0;
      name, [--C] string:ArrayValues;
      prototype, [---] object:735,
 456. length, [--C] int:0;
      name, [--C] string:get buffer,
 457. length, [--C] int:0;
      name, [--C] string:get byteLength,
 458. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 459. length, [--C] int:0;
      name, [--C] string:get length,
 460. length, [--C] int:2;
      name, [--C] string:subarray,
 461. apply, function:461/399;
      call, function:463/401;
      length, [--C] int:2;
      name, [--C] string:apply,
 462. length, [--C] int:1;
      name, [--C] string:bind,
 463. apply, function:461/399;
      call, function:463/401;
      length, [--C] int:1;
      name, [--C] string:call,
 464. length, [--C] int:0;
      name, [--C] string:toString,
 465. length, [--C] int:0;
      name, [--C] string:get buffer,
 466. length, [--C] int:0;
      name, [--C] string:get byteLength,
 467. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 468. length, [--C] int:0;
      name, [--C] string:get length,
 469. length, [--C] int:2;
      name, [--C] string:subarray,
 470. length, [--C] int:0;
      name, [--C] string:get buffer,
 471. length, [--C] int:0;
      name, [--C] string:get byteLength,
 472. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 473. length, [--C] int:0;
      name, [--C] string:get length,
 474. length, [--C] int:2;
      name, [--C] string:subarray,
 475. length, [--C] int:0;
      name, [--C] string:get buffer,
 476. length, [--C] int:0;
      name, [--C] string:get byteLength,
 477. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 478. length, [--C] int:0;
      name, [--C] string:get length,
 479. length, [--C] int:2;
      name, [--C] string:subarray,
 480. compare, [W-C] undefined { get = function:736/540, set =  };
      constructor, [W-C] function:89/70;
      resolvedOptions, [W-C] function:737/541,
 481. length, [--C] int:1;
      name, [--C] string:supportedLocalesOf,
 482. constructor, [W-C] function:90/71;
      format, [W-C] undefined { get = function:738/542, set =  };
      resolvedOptions, [W-C] function:739/543;
      v8Parse, [W-C] undefined { get = function:740/544, set =  },
 483. length, [--C] int:1;
      name, [--C] string:supportedLocalesOf,
 484. constructor, [W-C] function:91/72;
      format, [W-C] undefined { get = function:741/545, set =  };
      resolvedOptions, [W-C] function:742/546;
      v8Parse, [W-C] undefined { get = function:743/547, set =  },
 485. length, [--C] int:1;
      name, [--C] string:supportedLocalesOf,
 486. adoptText, [W-C] undefined { get = function:744/548, set =  };
      breakType, [W-C] undefined { get = function:745/549, set =  };
      constructor, [W-C] function:92/73;
      current, [W-C] undefined { get = function:746/550, set =  };
      first, [W-C] undefined { get = function:747/551, set =  };
      next, [W-C] undefined { get = function:748/552, set =  };
      resolvedOptions, [W-C] function:749/553,
 487. length, [--C] int:1;
      name, [--C] string:supportedLocalesOf,
 488. length, [--C] int:0;
      name, [--C] string:clear,
 489. length, [--C] int:1;
      name, [--C] string:delete,
 490. length, [--C] int:0;
      name, [--C] string:entries,
 491. length, [--C] int:1;
      name, [--C] string:forEach,
 492. length, [--C] int:1;
      name, [--C] string:get,
 493. length, [--C] int:1;
      name, [--C] string:has,
 494. length, [--C] int:0;
      name, [--C] string:keys,
 495. length, [--C] int:2;
      name, [--C] string:set,
 496. length, [--C] int:0;
      name, [--C] string:get size,
 497. length, [--C] int:0;
      name, [--C] string:values,
 498. length, [--C] int:1;
      name, [--C] string:toExponential,
 499. length, [--C] int:1;
      name, [--C] string:toFixed,
 500. length, [--C] int:0;
      name, [--C] string:toLocaleString,
 501. length, [--C] int:1;
      name, [--C] string:toPrecision,
 502. length, [--C] int:1;
      name, [--C] string:toString,
 503. length, [--C] int:0;
      name, [--C] string:valueOf,
 504. length, [--C] int:2;
      name, [--C] string:__defineGetter__,
 505. length, [--C] int:2;
      name, [--C] string:__defineSetter__,
 506. length, [--C] int:1;
      name, [--C] string:__lookupGetter__,
 507. length, [--C] int:1;
      name, [--C] string:__lookupSetter__,
 508. length, [--C] int:0;
      name, [--C] string:get __proto__,
 509. length, [--C] int:1;
      name, [--C] string:set __proto__,
 510. length, [--C] int:1;
      name, [--C] string:hasOwnProperty,
 511. length, [--C] int:1;
      name, [--C] string:isPrototypeOf,
 512. length, [--C] int:1;
      name, [--C] string:propertyIsEnumerable...,
 513. length, [--C] int:0;
      name, [--C] string:toLocaleString,
 514. length, [--C] int:0;
      name, [--C] string:toString,
 515. length, [--C] int:0;
      name, [--C] string:valueOf,
 516. length, [--C] int:1;
      name, [--C] string:catch,
 517. length, [--C] int:2;
      name, [--C] string:chain,
 518. length, [--C] int:2;
      name, [--C] string:then,
 519. constructor, [W-C] function:167/142,
 520. constructor, [W-C] function:168/143,
 521. constructor, [W-C] function:169/144,
 522. constructor, [W-C] function:170/145,
 523. constructor, [W-C] function:171/146,
 524. constructor, [W-C] function:172/147,
 525. constructor, [W-C] function:173/148,
 526. constructor, [W-C] function:174/149,
 527. constructor, [W-C] function:175/150,
 528. constructor, [W-C] function:176/151,
 529. constructor, [W-C] function:177/152,
 530. constructor, [W-C] function:178/153,
 531. constructor, [W-C] function:179/154,
 532. constructor, [W-C] function:180/155,
 533. constructor, [W-C] function:181/156,
 534. constructor, [W-C] function:182/157,
 535. constructor, [W-C] function:183/158,
 536. constructor, [W-C] function:184/159,
 537. length, [--C] int:1;
      name, [--C] string:compile,
 538. length, [--C] int:1;
      name, [--C] string:exec,
 539. length, [--C] int:1;
      name, [--C] string:test,
 540. length, [--C] int:0;
      name, [--C] string:toString,
 541. length, [--C] int:1;
      name, [--C] string:add,
 542. length, [--C] int:0;
      name, [--C] string:clear,
 543. length, [--C] int:1;
      name, [--C] string:delete,
 544. length, [--C] int:0;
      name, [--C] string:entries,
 545. length, [--C] int:1;
      name, [--C] string:forEach,
 546. length, [--C] int:1;
      name, [--C] string:has,
 547. length, [--C] int:0;
      name, [--C] string:values,
 548. length, [--C] int:0;
      name, [--C] string:get size,
 549. length, [--C] int:1;
      name, [--C] string:anchor,
 550. length, [--C] int:0;
      name, [--C] string:big,
 551. length, [--C] int:0;
      name, [--C] string:blink,
 552. length, [--C] int:0;
      name, [--C] string:bold,
 553. length, [--C] int:1;
      name, [--C] string:charAt,
 554. length, [--C] int:1;
      name, [--C] string:charCodeAt,
 555. length, [--C] int:1;
      name, [--C] string:codePointAt,
 556. length, [--C] int:1;
      name, [--C] string:concat,
 557. length, [--C] int:1;
      name, [--C] string:endsWith,
 558. length, [--C] int:0;
      name, [--C] string:fixed,
 559. length, [--C] int:1;
      name, [--C] string:fontcolor,
 560. length, [--C] int:1;
      name, [--C] string:fontsize,
 561. length, [--C] int:1;
      name, [--C] string:includes,
 562. length, [--C] int:1;
      name, [--C] string:indexOf,
 563. length, [--C] int:0;
      name, [--C] string:italics,
 564. length, [--C] int:1;
      name, [--C] string:lastIndexOf,
 565. length, [--C] int:1;
      name, [--C] string:link,
 566. length, [--C] int:1;
      name, [--C] string:localeCompare,
 567. length, [--C] int:1;
      name, [--C] string:match,
 568. length, [--C] int:1;
      name, [--C] string:normalize,
 569. length, [--C] int:1;
      name, [--C] string:repeat,
 570. length, [--C] int:2;
      name, [--C] string:replace,
 571. length, [--C] int:1;
      name, [--C] string:search,
 572. length, [--C] int:2;
      name, [--C] string:slice,
 573. length, [--C] int:0;
      name, [--C] string:small,
 574. length, [--C] int:2;
      name, [--C] string:split,
 575. length, [--C] int:1;
      name, [--C] string:startsWith,
 576. length, [--C] int:0;
      name, [--C] string:strike,
 577. length, [--C] int:0;
      name, [--C] string:sub,
 578. length, [--C] int:2;
      name, [--C] string:substr,
 579. length, [--C] int:2;
      name, [--C] string:substring,
 580. length, [--C] int:0;
      name, [--C] string:sup,
 581. length, [--C] int:0;
      name, [--C] string:toLocaleLowerCase,
 582. length, [--C] int:0;
      name, [--C] string:toLocaleUpperCase,
 583. length, [--C] int:0;
      name, [--C] string:toLowerCase,
 584. length, [--C] int:0;
      name, [--C] string:toString,
 585. length, [--C] int:0;
      name, [--C] string:toUpperCase,
 586. length, [--C] int:0;
      name, [--C] string:trim,
 587. length, [--C] int:0;
      name, [--C] string:trimLeft,
 588. length, [--C] int:0;
      name, [--C] string:trimRight,
 589. length, [--C] int:0;
      name, [--C] string:valueOf,
 590. length, [--C] int:0;
      name, [--C] string:toString,
 591. length, [--C] int:0;
      name, [--C] string:valueOf,
 592. length, [--C] int:0;
      name, [--C] string:get buffer,
 593. length, [--C] int:0;
      name, [--C] string:get byteLength,
 594. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 595. length, [--C] int:0;
      name, [--C] string:get length,
 596. length, [--C] int:2;
      name, [--C] string:subarray,
 597. length, [--C] int:0;
      name, [--C] string:get buffer,
 598. length, [--C] int:0;
      name, [--C] string:get byteLength,
 599. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 600. length, [--C] int:0;
      name, [--C] string:get length,
 601. length, [--C] int:2;
      name, [--C] string:subarray,
 602. length, [--C] int:0;
      name, [--C] string:get buffer,
 603. length, [--C] int:0;
      name, [--C] string:get byteLength,
 604. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 605. length, [--C] int:0;
      name, [--C] string:get length,
 606. length, [--C] int:2;
      name, [--C] string:subarray,
 607. length, [--C] int:0;
      name, [--C] string:get buffer,
 608. length, [--C] int:0;
      name, [--C] string:get byteLength,
 609. length, [--C] int:0;
      name, [--C] string:get byteOffset,
 610. length, [--C] int:0;
      name, [--C] string:get length,
 611. length, [--C] int:2;
      name, [--C] string:subarray,
 612. length, [--C] int:1;
      name, [--C] string:delete,
 613. length, [--C] int:1;
      name, [--C] string:get,
 614. length, [--C] int:1;
      name, [--C] string:has,
 615. length, [--C] int:2;
      name, [--C] string:set,
 616. length, [--C] int:1;
      name, [--C] string:add,
 617. length, [--C] int:1;
      name, [--C] string:delete,
 618. length, [--C] int:1;
      name, [--C] string:has,
 619. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:750,
 620. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:751,
 621. _events, undefined;
      _maxListeners, undefined;
      addListener, function:752/554;
      constructor, [W-C] function:207/165;
      domain, undefined;
      emit, function:753/555;
      getMaxListeners, function:754/556;
      listenerCount, function:755/557;
      listeners, function:756/558;
      on, function:752/554;
      once, function:757/559;
      removeAllListeners, function:758/560;
      removeListener, function:759/561;
      setMaxListeners, function:760/562,
 622. constructor, [W-C] function:208/166,
 623. constructor, [W-C] function:209/167,
 624. constructor, [W-C] function:210/168,
 625. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:761,
 626. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:762,
 627. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:763,
 628. constructor, [W-C] function:212/169,
 629. constructor, [W-C] function:213/170,
 630. constructor, [W-C] function:214/171,
 631. constructor, [W-C] function:215/172,
 632. constructor, [W-C] function:216/173,
 633. constructor, [W-C] function:218/174,
 634. constructor, [W-C] function:219/175,
 635. constructor, [W-C] function:220/176,
 636. constructor, [W-C] function:221/177,
 637. constructor, [W-C] function:222/178,
 638. constructor, [W-C] function:223/179,
 639. constructor, [W-C] function:224/180,
 640. constructor, [W-C] function:226/181,
 641. constructor, [W-C] function:227/182,
 642. constructor, [W-C] function:228/183,
 643. cflags, object:764;
      default_configuration, string:Release;
      defines, object:765;
      include_dirs, object:766;
      libraries, object:767,
 644. asan, int:0;
      host_arch, string:x64;
      icu_gyp_path, string:tools/icu/icu-system...;
      icu_small, bool:false;
      node_byteorder, string:little;
      node_install_npm, bool:false;
      node_prefix, string:/usr;
      node_release_urlbase, string:;
      node_shared_http_parser, bool:false;
      node_shared_libuv, bool:true;
      node_shared_openssl, bool:true;
      node_shared_zlib, bool:true;
      node_tag, string:;
      node_use_dtrace, bool:false;
      node_use_etw, bool:false;
      node_use_lttng, bool:false;
      node_use_openssl, bool:true;
      node_use_perfctr, bool:false;
      openssl_fips, string:;
      openssl_no_asm, int:0;
      python, string:/usr/bin/python;
      target_arch, string:x64;
      uv_parent_path, string:/deps/uv/;
      uv_use_dtrace, bool:false;
      v8_enable_gdbjit, int:0;
      v8_enable_i18n_support, int:1;
      v8_no_strict_aliasing, int:1;
      v8_optimized_debug, int:0;
      v8_random_seed, int:0;
      v8_use_snapshot, bool:true;
      want_separate_host_toolset, int:0,
 645. constructor, [W-C] function:230/184,
 646. constructor, [W-C] function:231/185,
 647. constructor, [W-C] function:234/186,
 648. constructor, [W-C] function:236/187,
 649. constructor, [W-C] function:237/188,
 650. constructor, [W-C] function:238/189,
 651. constructor, [W-C] function:239/190,
 652. constructor, [W-C] function:240/191,
 653. constructor, [W-C] function:241/192,
 654. constructor, [W-C] function:242/193,
 655. constructor, [W-C] function:243/194,
 656. 0, object:768;
      1, object:769;
      10, object:770;
      11, object:771;
      12, object:772;
      2, object:773;
      3, object:774;
      4, object:775;
      5, object:776;
      6, object:777;
      7, object:778;
      8, object:779;
      9, object:780;
      length, [W--] int:13,
 657. ,
 658. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 659. constructor, [W-C] function:245/195,
 660. constructor, [W-C] function:247/196,
 661. constructor, [W-C] function:248/197,
 662. constructor, [W-C] function:249/198,
 663. constructor, [W-C] function:251/199,
 664. constructor, [W-C] function:252/200,
 665. constructor, [W-C] function:253/201,
 666. constructor, [W-C] function:254/202,
 667. constructor, [W-C] function:255/203,
 668. constructor, [W-C] function:256/204,
 669. constructor, [W-C] function:257/205,
 670. constructor, [W-C] function:258/206,
 671. constructor, [W-C] function:259/207,
 672. constructor, [W-C] function:260/208,
 673. constructor, [W-C] function:301/240,
 674. constructor, [W-C] function:302/241,
 675. constructor, [W-C] function:303/242,
 676. constructor, [W-C] function:304/243,
 677. constructor, [W-C] function:305/244,
 678. constructor, [W-C] function:306/245,
 679. constructor, [W-C] function:307/246,
 680. constructor, [W-C] function:308/247,
 681. constructor, [W-C] function:309/248,
 682. constructor, [W-C] function:310/249,
 683. constructor, [W-C] function:311/250,
 684. constructor, [W-C] function:312/251,
 685. constructor, [W-C] function:313/252,
 686. constructor, [W-C] function:314/253,
 687. constructor, [W-C] function:315/254,
 688. constructor, [W-C] function:316/255,
 689. constructor, [W-C] function:317/256,
 690. constructor, [W-C] function:318/257,
 691. constructor, [W-C] function:319/258,
 692. constructor, [W-C] function:320/259,
 693. constructor, [W-C] function:321/260,
 694. constructor, [W-C] function:322/261,
 695. constructor, [W-C] function:323/262,
 696. constructor, [W-C] function:324/263,
 697. constructor, [W-C] function:325/264,
 698. constructor, [W-C] function:326/265,
 699. constructor, [W-C] function:327/266,
 700. constructor, [W-C] function:328/267,
 701. constructor, [W-C] function:329/268,
 702. constructor, [W-C] function:330/269,
 703. constructor, [W-C] function:331/270,
 704. constructor, [W-C] function:332/271,
 705. constructor, [W-C] function:333/272,
 706. constructor, [W-C] function:334/273,
 707. constructor, [W-C] function:335/274,
 708. constructor, [W-C] function:336/275,
 709. constructor, [W-C] function:337/276,
 710. constructor, [W-C] function:338/277,
 711. constructor, [W-C] function:339/278,
 712. constructor, [W-C] function:340/279,
 713. constructor, [W-C] function:341/280,
 714. constructor, [W-C] function:342/281,
 715. constructor, [W-C] function:343/282,
 716. constructor, [W-C] function:344/283,
 717. constructor, [W-C] function:345/284,
 718. constructor, [W-C] function:346/285,
 719. constructor, [W-C] function:347/286,
 720. constructor, [W-C] function:348/287,
 721. constructor, [W-C] function:349/288,
 722. constructor, [W-C] function:350/289,
 723. constructor, [W-C] function:351/290,
 724. constructor, [W-C] function:352/291,
 725. constructor, [W-C] function:353/292,
 726. constructor, [W-C] function:354/293,
 727. constructor, [W-C] function:355/294,
 728. constructor, [W-C] function:356/295,
 729. constructor, [W-C] function:357/296,
 730. constructor, [W-C] function:358/297,
 731. constructor, [W-C] function:359/298,
 732. constructor, [W-C] function:360/299,
 733. constructor, [W-C] function:361/300,
 734. constructor, [W-C] function:362/301,
 735. constructor, [W-C] function:455/393,
 736. length, [--C] int:0;
      name, [--C] string:breakType,
 737. length, [--C] int:0;
      name, [--C] string:resolvedOptions,
 738. length, [--C] int:0;
      name, [--C] string:breakType,
 739. length, [--C] int:0;
      name, [--C] string:resolvedOptions,
 740. length, [--C] int:0;
      name, [--C] string:breakType,
 741. length, [--C] int:0;
      name, [--C] string:breakType,
 742. length, [--C] int:0;
      name, [--C] string:resolvedOptions,
 743. length, [--C] int:0;
      name, [--C] string:breakType,
 744. length, [--C] int:0;
      name, [--C] string:breakType,
 745. length, [--C] int:0;
      name, [--C] string:breakType,
 746. length, [--C] int:0;
      name, [--C] string:breakType,
 747. length, [--C] int:0;
      name, [--C] string:breakType,
 748. length, [--C] int:0;
      name, [--C] string:breakType,
 749. length, [--C] int:0;
      name, [--C] string:resolvedOptions,
 750. constructor, [W-C] function:619/535,
 751. constructor, [W-C] function:620/536,
 752. length, [--C] int:2;
      name, [--C] string:addListener;
      prototype, [W--] object:781,
 753. length, [--C] int:1;
      name, [--C] string:emit;
      prototype, [W--] object:782,
 754. length, [--C] int:0;
      name, [--C] string:getMaxListeners;
      prototype, [W--] object:783,
 755. length, [--C] int:1;
      name, [--C] string:listenerCount;
      prototype, [W--] object:784,
 756. length, [--C] int:1;
      name, [--C] string:listeners;
      prototype, [W--] object:785,
 757. length, [--C] int:2;
      name, [--C] string:once;
      prototype, [W--] object:786,
 758. length, [--C] int:1;
      name, [--C] string:removeAllListeners;
      prototype, [W--] object:787,
 759. length, [--C] int:2;
      name, [--C] string:removeListener;
      prototype, [W--] object:788,
 760. length, [--C] int:1;
      name, [--C] string:setMaxListeners;
      prototype, [W--] object:789,
 761. constructor, [W-C] function:625/537,
 762. constructor, [W-C] function:626/538,
 763. constructor, [W-C] function:627/539,
 764. length, [W--] int:0,
 765. length, [W--] int:0,
 766. 0, string:/usr/include/x86_64-...;
      length, [W--] int:1,
 767. 0, string:-lz;
      1, string:-luv;
      10, string:-licudata;
      2, string:-lrt;
      3, string:-lpthread;
      4, string:-lnsl;
      5, string:-ldl;
      6, string:-lssl;
      7, string:-lcrypto;
      8, string:-licui18n;
      9, string:-licuuc;
      length, [W--] int:11,
 768. children, object:790;
      exports, object:791;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:792,
 769. children, object:793;
      exports, object:794;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:795,
 770. children, object:796;
      exports, object:797;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:798,
 771. children, object:799;
      exports, object:800;
      filename, string:/local/home/jkloos/w...;
      id, string:/local/home/jkloos/w...;
      loaded, bool:true;
      parent, object:244;
      paths, object:801,
 772. children, object:802;
      exports, object:803;
      filename, string:/local/home/jkloos/w...;
      id, string:/local/home/jkloos/w...;
      loaded, bool:false;
      parent, object:244;
      paths, object:804,
 773. children, object:805;
      exports, object:806;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:807,
 774. children, object:808;
      exports, object:809;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:810,
 775. children, object:811;
      exports, object:812;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:813,
 776. children, object:814;
      exports, object:815;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:816,
 777. children, object:817;
      exports, object:818;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:819,
 778. children, object:820;
      exports, object:821;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:822,
 779. children, object:823;
      exports, object:824;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:825,
 780. children, object:826;
      exports, object:827;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:244;
      paths, object:828,
 781. constructor, [W-C] function:752/554,
 782. constructor, [W-C] function:753/555,
 783. constructor, [W-C] function:754/556,
 784. constructor, [W-C] function:755/557,
 785. constructor, [W-C] function:756/558,
 786. constructor, [W-C] function:757/559,
 787. constructor, [W-C] function:758/560,
 788. constructor, [W-C] function:759/561,
 789. constructor, [W-C] function:760/562,
 790. 0, object:829;
      length, [W--] int:1,
 791. Action, function:830/563;
      ArgumentParser, function:831/564;
      Const, object:832;
      HelpFormatter, function:833/565;
      Namespace, function:834/566,
 792. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/node_mod...;
      4, string:/local/node_modules;
      5, string:/node_modules;
      length, [W--] int:6,
 793. length, [W--] int:0,
 794. applyASTHandler, function:835/567;
      createFilenameForScript, function:836/568;
      genInitParamsCode, function:837/569;
      getFooterString, function:838/570;
      getHeaderCode, function:839/571;
      getHeaderCodeAsScriptTags, function:840/572;
      getInlinedScripts, function:841/573;
      headerSources, object:842;
      isInlineScript, function:843/574;
      setHeaders, function:844/575,
 795. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 796. length, [W--] int:0,
 797. ,
 798. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 799. length, [W--] int:0,
 800. ,
 801. 0, string:/local/home/jkloos/w...;
      1, string:/local/home/jkloos/w...;
      2, string:/local/home/jkloos/w...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 802. length, [W--] int:0,
 803. ,
 804. 0, string:/local/home/jkloos/w...;
      1, string:/local/home/jkloos/w...;
      2, string:/local/home/jkloos/w...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 805. length, [W--] int:0,
 806. Node, function:845/576;
      Parser, function:846/577;
      SourceLocation, function:847/578;
      TokContext, function:848/579;
      Token, function:849/580;
      TokenType, function:850/581;
      __esModule, bool:true;
      defaultOptions, object:851;
      getLineInfo, function:852/582;
      isIdentifierChar, function:853/583;
      isIdentifierStart, function:854/584;
      isNewLine, function:855/585;
      lineBreak, object:856;
      lineBreakG, object:857;
      parse, function:858/586;
      parseExpressionAt, function:859/587;
      plugins, object:860;
      tokContexts, object:861;
      tokTypes, object:862;
      tokenizer, function:863/588;
      version, string:1.0.3,
 807. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 808. length, [W--] int:0,
 809. FORMAT_DEFAULTS, object:864;
      FORMAT_MINIFY, object:865;
      Precedence, object:866;
      browser, bool:false;
      generate, function:867/589,
 810. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/node_mod...;
      4, string:/local/node_modules;
      5, string:/node_modules;
      length, [W--] int:6,
 811. length, [W--] int:0,
 812. headerSources, object:868,
 813. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 814. length, [W--] int:0,
 815. ,
 816. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 817. length, [W--] int:0,
 818. ,
 819. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 820. length, [W--] int:0,
 821. ,
 822. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 823. length, [W--] int:0,
 824. ,
 825. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 826. length, [W--] int:0,
 827. ,
 828. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/jkloos/n...;
      5, string:/local/home/node_mod...;
      6, string:/local/node_modules;
      7, string:/node_modules;
      length, [W--] int:8,
 829. children, object:869;
      exports, object:791;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:768;
      paths, object:870,
 830. length, [--C] int:1;
      name, [--C] string:Action;
      prototype, [W--] object:871,
 831. length, [--C] int:1;
      name, [--C] string:ArgumentParser;
      prototype, [W--] object:872;
      super_, function:873/590,
 832. EOL, string:...;
      ONE_OR_MORE, string:+;
      OPTIONAL, string:?;
      PARSER, string:A...;
      REMAINDER, string:...;
      SUPPRESS, string:==SUPPRESS==;
      ZERO_OR_MORE, string:*;
      _UNRECOGNIZED_ARGS_ATTR, string:_unrecognized_args,
 833. length, [--C] int:1;
      name, [--C] string:HelpFormatter;
      prototype, [W--] object:874,
 834. length, [--C] int:1;
      name, [--C] string:Namespace;
      prototype, [W--] object:875,
 835. length, [--C] int:3;
      name, [--C] string:applyASTHandler;
      prototype, [W--] object:876,
 836. length, [--C] int:1;
      name, [--C] string:createFilenameForScr...;
      prototype, [W--] object:877,
 837. length, [--C] int:1;
      name, [--C] string:genInitParamsCode;
      prototype, [W--] object:878,
 838. length, [--C] int:1;
      name, [--C] string:getFooterString;
      prototype, [W--] object:879,
 839. length, [--C] int:1;
      name, [--C] string:getHeaderCode;
      prototype, [W--] object:880,
 840. length, [--C] int:1;
      name, [--C] string:getHeaderCodeAsScrip...;
      prototype, [W--] object:881,
 841. length, [--C] int:5;
      name, [--C] string:getInlinedScripts;
      prototype, [W--] object:882,
 842. 0, string:node_modules/esotope...;
      1, string:node_modules/acorn/d...;
      length, [W--] int:2,
 843. length, [--C] int:1;
      name, [--C] string:isInlineScript;
      prototype, [W--] object:883,
 844. length, [--C] int:0;
      name, [--C] string:setHeaders;
      prototype, [W--] object:884,
 845. length, [--C] int:0;
      name, [--C] string:Node;
      prototype, [W--] object:885,
 846. length, [--C] int:3;
      name, [--C] string:Parser;
      prototype, [W--] object:886,
 847. length, [--C] int:3;
      name, [--C] string:SourceLocation;
      prototype, [W--] object:887,
 848. length, [--C] int:4;
      name, [--C] string:TokContext;
      prototype, [W--] object:888,
 849. length, [--C] int:1;
      name, [--C] string:Token;
      prototype, [W--] object:889,
 850. length, [--C] int:1;
      name, [--C] string:TokenType;
      prototype, [W--] object:890,
 851. allowHashBang, bool:false;
      allowImportExportEverywhere, bool:false;
      allowReserved, bool:true;
      allowReturnOutsideFunction, bool:false;
      directSourceFile, null;
      ecmaVersion, int:5;
      locations, bool:false;
      onComment, null;
      onInsertedSemicolon, null;
      onToken, null;
      onTrailingComma, null;
      plugins, object:891;
      preserveParens, bool:false;
      program, null;
      ranges, bool:false;
      sourceFile, null;
      sourceType, string:script,
 852. length, [--C] int:2;
      name, [--C] string:getLineInfo;
      prototype, [W--] object:892,
 853. length, [--C] int:2;
      name, [--C] string:isIdentifierChar;
      prototype, [W--] object:893,
 854. length, [--C] int:2;
      name, [--C] string:isIdentifierStart;
      prototype, [W--] object:894,
 855. length, [--C] int:1;
      name, [--C] string:isNewLine;
      prototype, [W--] object:895,
 856. global, [---] bool:false;
      ignoreCase, [---] bool:false;
      lastIndex, [W--] int:0;
      multiline, [---] bool:false;
      source, [---] string:\r\n?|\n|\u2028|\u20...,
 857. global, [---] bool:true;
      ignoreCase, [---] bool:false;
      lastIndex, [W--] int:0;
      multiline, [---] bool:false;
      source, [---] string:\r\n?|\n|\u2028|\u20...,
 858. length, [--C] int:2;
      name, [--C] string:parse;
      prototype, [W--] object:896,
 859. length, [--C] int:3;
      name, [--C] string:parseExpressionAt;
      prototype, [W--] object:897,
 860. ,
 861. b_expr, object:898;
      b_stat, object:899;
      b_tmpl, object:900;
      f_expr, object:901;
      p_expr, object:902;
      p_stat, object:903;
      q_tmpl, object:904,
 862. _break, object:905;
      _case, object:906;
      _catch, object:907;
      _class, object:908;
      _const, object:909;
      _continue, object:910;
      _debugger, object:911;
      _default, object:912;
      _delete, object:913;
      _do, object:914;
      _else, object:915;
      _export, object:916;
      _extends, object:917;
      _false, object:918;
      _finally, object:919;
      _for, object:920;
      _function, object:921;
      _if, object:922;
      _import, object:923;
      _in, object:924;
      _instanceof, object:925;
      _let, object:926;
      _new, object:927;
      _null, object:928;
      _return, object:929;
      _super, object:930;
      _switch, object:931;
      _this, object:932;
      _throw, object:933;
      _true, object:934;
      _try, object:935;
      _typeof, object:936;
      _var, object:937;
      _void, object:938;
      _while, object:939;
      _with, object:940;
      _yield, object:941;
      arrow, object:942;
      assign, object:943;
      backQuote, object:944;
      bitShift, object:945;
      bitwiseAND, object:946;
      bitwiseOR, object:947;
      bitwiseXOR, object:948;
      braceL, object:949;
      braceR, object:950;
      bracketL, object:951;
      bracketR, object:952;
      colon, object:953;
      comma, object:954;
      dollarBraceL, object:955;
      dot, object:956;
      ellipsis, object:957;
      eof, object:958;
      eq, object:959;
      equality, object:960;
      incDec, object:961;
      logicalAND, object:962;
      logicalOR, object:963;
      modulo, object:964;
      name, object:965;
      num, object:966;
      parenL, object:967;
      parenR, object:968;
      plusMin, object:969;
      prefix, object:970;
      question, object:971;
      regexp, object:972;
      relational, object:973;
      semi, object:974;
      slash, object:975;
      star, object:976;
      string, object:977;
      template, object:978,
 863. length, [--C] int:2;
      name, [--C] string:tokenizer;
      prototype, [W--] object:979,
 864. compact, bool:false;
      escapeless, bool:false;
      hexadecimal, bool:false;
      indent, object:980;
      json, bool:false;
      newline, string:...;
      parentheses, bool:true;
      quotes, string:single;
      renumber, bool:false;
      safeConcatenation, bool:false;
      semicolons, bool:true;
      space, string: ,
 865. compact, bool:true;
      escapeless, bool:true;
      hexadecimal, bool:true;
      indent, object:981;
      parentheses, bool:false;
      quotes, string:auto;
      renumber, bool:true;
      semicolons, bool:false,
 866. Additive, int:11;
      ArrowFunction, int:2;
      Assignment, int:1;
      BitwiseAND, int:7;
      BitwiseOR, int:5;
      BitwiseSHIFT, int:10;
      BitwiseXOR, int:6;
      Call, int:15;
      Conditional, int:2;
      Equality, int:8;
      LogicalAND, int:4;
      LogicalOR, int:3;
      Member, int:18;
      Multiplicative, int:12;
      New, int:16;
      Postfix, int:14;
      Primary, int:19;
      Relational, int:9;
      Sequence, int:0;
      TaggedTemplate, int:17;
      Unary, int:13;
      Yield, int:1,
 867. length, [--C] int:2;
      name, [--C] string:generate;
      prototype, [W--] object:982,
 868. 0, string:src/js/Constants.js;
      1, string:src/js/Config.js;
      2, string:src/js/instrument/as...;
      3, string:src/js/instrument/es...;
      4, string:src/js/runtime/iidTo...;
      5, string:src/js/runtime/analy...;
      length, [W--] int:6,
 869. 0, object:983;
      length, [W--] int:1,
 870. 0, string:/local/home/jkloos/n...;
      1, string:/local/home/jkloos/n...;
      2, string:/local/home/jkloos/n...;
      3, string:/local/home/jkloos/n...;
      4, string:/local/home/node_mod...;
      5, string:/local/node_modules;
      6, string:/node_modules;
      length, [W--] int:7,
 871. call, function:984/591;
      constructor, [W-C] function:830/563;
      getName, function:985/592;
      isOptional, function:986/593;
      isPositional, function:987/594,
 872. _addAction, function:988/595;
      _checkValue, function:989/596;
      _getFormatter, function:990/597;
      _getNargsPattern, function:991/598;
      _getOptionTuples, function:992/599;
      _getOptionalActions, function:993/600;
      _getPositionalActions, function:994/601;
      _getValue, function:995/602;
      _getValues, function:996/603;
      _matchArgument, function:997/604;
      _matchArgumentsPartial, function:998/605;
      _parseKnownArgs, function:999/606;
      _parseOptional, function:1000/607;
      _printMessage, function:1001/608;
      addSubparsers, function:1002/609;
      constructor, [W-C] function:831/564;
      error, function:1003/610;
      exit, function:1004/611;
      formatHelp, function:1005/612;
      formatUsage, function:1006/613;
      parseArgs, function:1007/614;
      parseKnownArgs, function:1008/615;
      printHelp, function:1009/616;
      printUsage, function:1010/617,
 873. length, [--C] int:1;
      name, [--C] string:ActionContainer;
      prototype, [W--] object:1011,
 874. _addItem, function:1012/618;
      _dedent, function:1013/619;
      _expandHelp, function:1014/620;
      _fillText, function:1015/621;
      _formatAction, function:1016/622;
      _formatActionInvocation, function:1017/623;
      _formatActionsUsage, function:1018/624;
      _formatArgs, function:1019/625;
      _formatText, function:1020/626;
      _formatUsage, function:1021/627;
      _getHelpString, function:1022/628;
      _indent, function:1023/629;
      _joinParts, function:1024/630;
      _metavarFormatter, function:1025/631;
      _splitLines, function:1026/632;
      addArgument, function:1027/633;
      addArguments, function:1028/634;
      addText, function:1029/635;
      addUsage, function:1030/636;
      constructor, [W-C] function:833/565;
      endSection, function:1031/637;
      formatHelp, function:1032/638;
      startSection, function:1033/639,
 875. constructor, [W-C] function:834/566;
      get, function:1034/640;
      isset, function:1035/641;
      set, function:1036/642;
      unset, function:1037/643,
 876. constructor, [W-C] function:835/567,
 877. constructor, [W-C] function:836/568,
 878. constructor, [W-C] function:837/569,
 879. constructor, [W-C] function:838/570,
 880. constructor, [W-C] function:839/571,
 881. constructor, [W-C] function:840/572,
 882. constructor, [W-C] function:841/573,
 883. constructor, [W-C] function:843/574,
 884. constructor, [W-C] function:844/575,
 885. constructor, [W-C] function:845/576,
 886. afterTrailingComma, function:1038/644;
      braceIsBlock, function:1039/645;
      canInsertSemicolon, function:1040/646;
      checkLVal, function:1041/647;
      checkPropClash, function:1042/648;
      constructor, [W-C] function:846/577;
      curContext, function:1043/649;
      curPosition, function:1044/650;
      eat, function:1045/651;
      eatContextual, function:1046/652;
      expect, function:1047/653;
      expectContextual, function:1048/654;
      extend, function:1049/655;
      finishNode, function:1050/656;
      finishNodeAt, function:1051/657;
      finishOp, function:1052/658;
      finishToken, function:1053/659;
      fullCharCodeAtPos, function:1054/660;
      getToken, function:1055/661;
      getTokenFromCode, function:1056/662;
      initFunction, function:1057/663;
      initialContext, function:1058/664;
      insertSemicolon, function:1059/665;
      isContextual, function:1060/666;
      isUseStrict, function:1061/667;
      loadPlugins, function:1062/668;
      markPosition, function:1063/669;
      next, function:1064/670;
      nextToken, function:1065/671;
      parseArrowExpression, function:1066/672;
      parseBindingAtom, function:1067/673;
      parseBindingList, function:1068/674;
      parseBlock, function:1069/675;
      parseBreakContinueStatement, function:1070/676;
      parseClass, function:1071/677;
      parseComprehension, function:1072/678;
      parseDebuggerStatement, function:1073/679;
      parseDoStatement, function:1074/680;
      parseEmptyStatement, function:1075/681;
      parseExport, function:1076/682;
      parseExportSpecifiers, function:1077/683;
      parseExprAtom, function:1078/684;
      parseExprList, function:1079/685;
      parseExprOp, function:1080/686;
      parseExprOps, function:1081/687;
      parseExprSubscripts, function:1082/688;
      parseExpression, function:1083/689;
      parseExpressionStatement, function:1084/690;
      parseFor, function:1085/691;
      parseForIn, function:1086/692;
      parseForStatement, function:1087/693;
      parseFunction, function:1088/694;
      parseFunctionBody, function:1089/695;
      parseFunctionStatement, function:1090/696;
      parseIdent, function:1091/697;
      parseIfStatement, function:1092/698;
      parseImport, function:1093/699;
      parseImportSpecifiers, function:1094/700;
      parseLabeledStatement, function:1095/701;
      parseLiteral, function:1096/702;
      parseMaybeAssign, function:1097/703;
      parseMaybeConditional, function:1098/704;
      parseMaybeDefault, function:1099/705;
      parseMaybeUnary, function:1100/706;
      parseMethod, function:1101/707;
      parseNew, function:1102/708;
      parseObj, function:1103/709;
      parseParenAndDistinguishExpression, function:1104/710;
      parseParenExpression, function:1105/711;
      parsePropertyName, function:1106/712;
      parseRest, function:1107/713;
      parseReturnStatement, function:1108/714;
      parseSpread, function:1109/715;
      parseStatement, function:1110/716;
      parseSubscripts, function:1111/717;
      parseSwitchStatement, function:1112/718;
      parseTemplate, function:1113/719;
      parseTemplateElement, function:1114/720;
      parseThrowStatement, function:1115/721;
      parseTopLevel, function:1116/722;
      parseTryStatement, function:1117/723;
      parseVar, function:1118/724;
      parseVarStatement, function:1119/725;
      parseWhileStatement, function:1120/726;
      parseWithStatement, function:1121/727;
      parseYield, function:1122/728;
      raise, function:1123/729;
      readCodePoint, function:1124/730;
      readEscapedChar, function:1125/731;
      readHexChar, function:1126/732;
      readInt, function:1127/733;
      readNumber, function:1128/734;
      readRadixNumber, function:1129/735;
      readRegexp, function:1130/736;
      readString, function:1131/737;
      readTmplToken, function:1132/738;
      readToken, function:1133/739;
      readToken_caret, function:1134/740;
      readToken_dot, function:1135/741;
      readToken_eq_excl, function:1136/742;
      readToken_lt_gt, function:1137/743;
      readToken_mult_modulo, function:1138/744;
      readToken_pipe_amp, function:1139/745;
      readToken_plus_min, function:1140/746;
      readToken_slash, function:1141/747;
      readWord, function:1142/748;
      readWord1, function:1143/749;
      semicolon, function:1144/750;
      setStrict, function:1145/751;
      skipBlockComment, function:1146/752;
      skipLineComment, function:1147/753;
      skipSpace, function:1148/754;
      startNode, function:1149/755;
      startNodeAt, function:1150/756;
      toAssignable, function:1151/757;
      toAssignableList, function:1152/758;
      unexpected, function:1153/759;
      updateContext, function:1154/760,
 887. constructor, [W-C] function:847/578,
 888. constructor, [W-C] function:848/579,
 889. constructor, [W-C] function:849/580,
 890. constructor, [W-C] function:850/581,
 891. ,
 892. constructor, [W-C] function:852/582,
 893. constructor, [W-C] function:853/583,
 894. constructor, [W-C] function:854/584,
 895. constructor, [W-C] function:855/585,
 896. constructor, [W-C] function:858/586,
 897. constructor, [W-C] function:859/587,
 898. isExpr, bool:true;
      override, undefined;
      preserveSpace, undefined;
      token, string:{,
 899. isExpr, bool:false;
      override, undefined;
      preserveSpace, undefined;
      token, string:{,
 900. isExpr, bool:true;
      override, undefined;
      preserveSpace, undefined;
      token, string:${,
 901. isExpr, bool:true;
      override, undefined;
      preserveSpace, undefined;
      token, string:function,
 902. isExpr, bool:true;
      override, undefined;
      preserveSpace, undefined;
      token, string:(,
 903. isExpr, bool:false;
      override, undefined;
      preserveSpace, undefined;
      token, string:(,
 904. isExpr, bool:true;
      override, function:1155/761;
      preserveSpace, bool:true;
      token, string:`,
 905. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:break;
      label, string:break;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 906. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:case;
      label, string:case;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 907. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:catch;
      label, string:catch;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 908. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:class;
      label, string:class;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 909. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:const;
      label, string:const;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 910. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:continue;
      label, string:continue;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 911. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:debugger;
      label, string:debugger;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 912. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:default;
      label, string:default;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 913. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:delete;
      label, string:delete;
      postfix, bool:false;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, null,
 914. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:true;
      keyword, string:do;
      label, string:do;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 915. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:else;
      label, string:else;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 916. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:export;
      label, string:export;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 917. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:extends;
      label, string:extends;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 918. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:false;
      label, string:false;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 919. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:finally;
      label, string:finally;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 920. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:true;
      keyword, string:for;
      label, string:for;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 921. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:function;
      label, string:function;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, function:1156/762,
 922. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:if;
      label, string:if;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 923. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:import;
      label, string:import;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 924. beforeExpr, bool:true;
      binop, int:7;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:in;
      label, string:in;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 925. beforeExpr, bool:true;
      binop, int:7;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:instanceof;
      label, string:instanceof;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 926. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:let;
      label, string:let;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 927. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:new;
      label, string:new;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 928. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:null;
      label, string:null;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 929. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:return;
      label, string:return;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 930. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:super;
      label, string:super;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 931. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:switch;
      label, string:switch;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 932. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:this;
      label, string:this;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 933. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:throw;
      label, string:throw;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 934. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:true;
      label, string:true;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 935. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:try;
      label, string:try;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 936. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:typeof;
      label, string:typeof;
      postfix, bool:false;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, null,
 937. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:var;
      label, string:var;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 938. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:void;
      label, string:void;
      postfix, bool:false;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, null,
 939. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:true;
      keyword, string:while;
      label, string:while;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 940. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:with;
      label, string:with;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 941. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, string:yield;
      label, string:yield;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 942. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:=>;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 943. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:true;
      isLoop, bool:false;
      keyword, undefined;
      label, string:_=;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 944. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:`;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, function:1157/763,
 945. beforeExpr, bool:true;
      binop, int:8;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:<</>>;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 946. beforeExpr, bool:true;
      binop, int:5;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:&;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 947. beforeExpr, bool:true;
      binop, int:3;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:|;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 948. beforeExpr, bool:true;
      binop, int:4;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:^;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 949. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:{;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, function:1158/764,
 950. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:};
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, function:1159/765,
 951. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:[;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 952. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:];
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 953. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string::;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 954. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:,;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 955. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:${;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, function:1160/766,
 956. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:.;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 957. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:...;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 958. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:eof;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 959. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:true;
      isLoop, bool:false;
      keyword, undefined;
      label, string:=;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 960. beforeExpr, bool:true;
      binop, int:6;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:==/!=;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 961. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:++/--;
      postfix, bool:true;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, function:1161/767,
 962. beforeExpr, bool:true;
      binop, int:2;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:&&;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 963. beforeExpr, bool:true;
      binop, int:1;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:||;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 964. beforeExpr, bool:true;
      binop, int:10;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:%;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 965. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:name;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 966. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:num;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 967. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:(;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, function:1162/768,
 968. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:);
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, function:1159/765,
 969. beforeExpr, bool:true;
      binop, int:9;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:+/-;
      postfix, bool:false;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, null,
 970. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:prefix;
      postfix, bool:false;
      prefix, bool:true;
      startsExpr, bool:true;
      updateContext, null,
 971. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:?;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 972. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:regexp;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 973. beforeExpr, bool:true;
      binop, int:7;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:</>;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 974. beforeExpr, bool:true;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:;;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 975. beforeExpr, bool:true;
      binop, int:10;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:/;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 976. beforeExpr, bool:true;
      binop, int:10;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:*;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 977. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:string;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:true;
      updateContext, null,
 978. beforeExpr, bool:false;
      binop, null;
      isAssign, bool:false;
      isLoop, bool:false;
      keyword, undefined;
      label, string:template;
      postfix, bool:false;
      prefix, bool:false;
      startsExpr, bool:false;
      updateContext, null,
 979. constructor, [W-C] function:863/588,
 980. base, int:0;
      style, string:    ,
 981. base, int:0;
      style, string:,
 982. constructor, [W-C] function:867/589,
 983. children, object:1163;
      exports, function:831/564;
      filename, string:/local/home/jkloos/n...;
      id, string:/local/home/jkloos/n...;
      loaded, bool:true;
      parent, object:829;
      paths, object:1164,
 984. length, [--C] int:4;
      name, [--C] string:;
      prototype, [W--] object:1165,
 985. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1166,
 986. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1167,
 987. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1168,
 988. length, [--C] int:1;
      name, [--C] string:;
      prototype, [W--] object:1169,
 989. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1170,
 990. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1171,
 991. length, [--C] int:1;
      name, [--C] string:;
      prototype, [W--] object:1172,
 992. length, [--C] int:1;
      name, [--C] string:;
      prototype, [W--] object:1173,
 993. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1174,
 994. length, [--C] int:0;
      name, [--C] string:;
      prototype, [W--] object:1175,
 995. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1176,
 996. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1177,
 997. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1178,
 998. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1179,
 999. length, [--C] int:2;
      name, [--C] string:;
      prototype, [W--] object:1180,
 1000. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1181,
 1001. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1182,
 1002. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1183,
 1003. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1184,
 1004. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1185,
 1005. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1186,
 1006. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1187,
 1007. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1188,
 1008. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1189,
 1009. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1190,
 1010. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1191,
 1011. _addAction, function:1192/769;
       _addContainerActions, function:1193/770;
       _checkConflict, function:1194/771;
       _getOptional, function:1195/772;
       _getPositional, function:1196/773;
       _popActionClass, function:1197/774;
       _registryGet, function:1198/775;
       _removeAction, function:1199/776;
       addArgument, function:1200/777;
       addArgumentGroup, function:1201/778;
       constructor, [W-C] function:873/590;
       getDefault, function:1202/779;
       register, function:1203/780;
       setDefaults, function:1204/781,
 1012. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1205,
 1013. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1206,
 1014. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1207,
 1015. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1208,
 1016. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1209,
 1017. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1210,
 1018. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1211,
 1019. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1212,
 1020. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1213,
 1021. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1214,
 1022. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1215,
 1023. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1216,
 1024. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1217,
 1025. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1218,
 1026. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1219,
 1027. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1220,
 1028. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1221,
 1029. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1222,
 1030. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1223,
 1031. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1224,
 1032. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1225,
 1033. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1226,
 1034. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1227,
 1035. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1228,
 1036. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1229,
 1037. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1230,
 1038. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1231,
 1039. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1232,
 1040. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1233,
 1041. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1234,
 1042. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1235,
 1043. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1236,
 1044. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1237,
 1045. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1238,
 1046. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1239,
 1047. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1240,
 1048. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1241,
 1049. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1242,
 1050. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1243,
 1051. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1244,
 1052. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1245,
 1053. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1246,
 1054. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1247,
 1055. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1248,
 1056. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1249,
 1057. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1250,
 1058. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1251,
 1059. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1252,
 1060. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1253,
 1061. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1254,
 1062. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1255,
 1063. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1256,
 1064. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1257,
 1065. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1258,
 1066. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1259,
 1067. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1260,
 1068. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1261,
 1069. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1262,
 1070. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1263,
 1071. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1264,
 1072. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1265,
 1073. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1266,
 1074. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1267,
 1075. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1268,
 1076. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1269,
 1077. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1270,
 1078. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1271,
 1079. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1272,
 1080. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1273,
 1081. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1274,
 1082. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1275,
 1083. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1276,
 1084. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1277,
 1085. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1278,
 1086. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1279,
 1087. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1280,
 1088. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1281,
 1089. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1282,
 1090. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1283,
 1091. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1284,
 1092. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1285,
 1093. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1286,
 1094. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1287,
 1095. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1288,
 1096. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1289,
 1097. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1290,
 1098. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1291,
 1099. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1292,
 1100. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1293,
 1101. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1294,
 1102. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1295,
 1103. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1296,
 1104. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1297,
 1105. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1298,
 1106. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1299,
 1107. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1300,
 1108. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1301,
 1109. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1302,
 1110. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1303,
 1111. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1304,
 1112. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1305,
 1113. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1306,
 1114. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1307,
 1115. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1308,
 1116. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1309,
 1117. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1310,
 1118. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1311,
 1119. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1312,
 1120. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1313,
 1121. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1314,
 1122. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1315,
 1123. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1316,
 1124. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1317,
 1125. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1318,
 1126. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1319,
 1127. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1320,
 1128. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1321,
 1129. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1322,
 1130. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1323,
 1131. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1324,
 1132. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1325,
 1133. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1326,
 1134. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1327,
 1135. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1328,
 1136. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1329,
 1137. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1330,
 1138. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1331,
 1139. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1332,
 1140. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1333,
 1141. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1334,
 1142. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1335,
 1143. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1336,
 1144. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1337,
 1145. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1338,
 1146. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1339,
 1147. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1340,
 1148. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1341,
 1149. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1342,
 1150. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1343,
 1151. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1344,
 1152. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1345,
 1153. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1346,
 1154. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1347,
 1155. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1348,
 1156. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1349,
 1157. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1350,
 1158. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1351,
 1159. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1352,
 1160. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1353,
 1161. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1354,
 1162. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1355,
 1163. 0, object:1356;
       1, object:1357;
       2, object:1358;
       3, object:1359;
       4, object:1360;
       5, object:1361;
       length, [W--] int:6,
 1164. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1165. constructor, [W-C] function:984/591,
 1166. constructor, [W-C] function:985/592,
 1167. constructor, [W-C] function:986/593,
 1168. constructor, [W-C] function:987/594,
 1169. constructor, [W-C] function:988/595,
 1170. constructor, [W-C] function:989/596,
 1171. constructor, [W-C] function:990/597,
 1172. constructor, [W-C] function:991/598,
 1173. constructor, [W-C] function:992/599,
 1174. constructor, [W-C] function:993/600,
 1175. constructor, [W-C] function:994/601,
 1176. constructor, [W-C] function:995/602,
 1177. constructor, [W-C] function:996/603,
 1178. constructor, [W-C] function:997/604,
 1179. constructor, [W-C] function:998/605,
 1180. constructor, [W-C] function:999/606,
 1181. constructor, [W-C] function:1000/607,
 1182. constructor, [W-C] function:1001/608,
 1183. constructor, [W-C] function:1002/609,
 1184. constructor, [W-C] function:1003/610,
 1185. constructor, [W-C] function:1004/611,
 1186. constructor, [W-C] function:1005/612,
 1187. constructor, [W-C] function:1006/613,
 1188. constructor, [W-C] function:1007/614,
 1189. constructor, [W-C] function:1008/615,
 1190. constructor, [W-C] function:1009/616,
 1191. constructor, [W-C] function:1010/617,
 1192. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1362,
 1193. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1363,
 1194. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1364,
 1195. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1365,
 1196. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1366,
 1197. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1367,
 1198. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1368,
 1199. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1369,
 1200. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1370,
 1201. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1371,
 1202. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1372,
 1203. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1373,
 1204. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1374,
 1205. constructor, [W-C] function:1012/618,
 1206. constructor, [W-C] function:1013/619,
 1207. constructor, [W-C] function:1014/620,
 1208. constructor, [W-C] function:1015/621,
 1209. constructor, [W-C] function:1016/622,
 1210. constructor, [W-C] function:1017/623,
 1211. constructor, [W-C] function:1018/624,
 1212. constructor, [W-C] function:1019/625,
 1213. constructor, [W-C] function:1020/626,
 1214. constructor, [W-C] function:1021/627,
 1215. constructor, [W-C] function:1022/628,
 1216. constructor, [W-C] function:1023/629,
 1217. constructor, [W-C] function:1024/630,
 1218. constructor, [W-C] function:1025/631,
 1219. constructor, [W-C] function:1026/632,
 1220. constructor, [W-C] function:1027/633,
 1221. constructor, [W-C] function:1028/634,
 1222. constructor, [W-C] function:1029/635,
 1223. constructor, [W-C] function:1030/636,
 1224. constructor, [W-C] function:1031/637,
 1225. constructor, [W-C] function:1032/638,
 1226. constructor, [W-C] function:1033/639,
 1227. constructor, [W-C] function:1034/640,
 1228. constructor, [W-C] function:1035/641,
 1229. constructor, [W-C] function:1036/642,
 1230. constructor, [W-C] function:1037/643,
 1231. constructor, [W-C] function:1038/644,
 1232. constructor, [W-C] function:1039/645,
 1233. constructor, [W-C] function:1040/646,
 1234. constructor, [W-C] function:1041/647,
 1235. constructor, [W-C] function:1042/648,
 1236. constructor, [W-C] function:1043/649,
 1237. constructor, [W-C] function:1044/650,
 1238. constructor, [W-C] function:1045/651,
 1239. constructor, [W-C] function:1046/652,
 1240. constructor, [W-C] function:1047/653,
 1241. constructor, [W-C] function:1048/654,
 1242. constructor, [W-C] function:1049/655,
 1243. constructor, [W-C] function:1050/656,
 1244. constructor, [W-C] function:1051/657,
 1245. constructor, [W-C] function:1052/658,
 1246. constructor, [W-C] function:1053/659,
 1247. constructor, [W-C] function:1054/660,
 1248. constructor, [W-C] function:1055/661,
 1249. constructor, [W-C] function:1056/662,
 1250. constructor, [W-C] function:1057/663,
 1251. constructor, [W-C] function:1058/664,
 1252. constructor, [W-C] function:1059/665,
 1253. constructor, [W-C] function:1060/666,
 1254. constructor, [W-C] function:1061/667,
 1255. constructor, [W-C] function:1062/668,
 1256. constructor, [W-C] function:1063/669,
 1257. constructor, [W-C] function:1064/670,
 1258. constructor, [W-C] function:1065/671,
 1259. constructor, [W-C] function:1066/672,
 1260. constructor, [W-C] function:1067/673,
 1261. constructor, [W-C] function:1068/674,
 1262. constructor, [W-C] function:1069/675,
 1263. constructor, [W-C] function:1070/676,
 1264. constructor, [W-C] function:1071/677,
 1265. constructor, [W-C] function:1072/678,
 1266. constructor, [W-C] function:1073/679,
 1267. constructor, [W-C] function:1074/680,
 1268. constructor, [W-C] function:1075/681,
 1269. constructor, [W-C] function:1076/682,
 1270. constructor, [W-C] function:1077/683,
 1271. constructor, [W-C] function:1078/684,
 1272. constructor, [W-C] function:1079/685,
 1273. constructor, [W-C] function:1080/686,
 1274. constructor, [W-C] function:1081/687,
 1275. constructor, [W-C] function:1082/688,
 1276. constructor, [W-C] function:1083/689,
 1277. constructor, [W-C] function:1084/690,
 1278. constructor, [W-C] function:1085/691,
 1279. constructor, [W-C] function:1086/692,
 1280. constructor, [W-C] function:1087/693,
 1281. constructor, [W-C] function:1088/694,
 1282. constructor, [W-C] function:1089/695,
 1283. constructor, [W-C] function:1090/696,
 1284. constructor, [W-C] function:1091/697,
 1285. constructor, [W-C] function:1092/698,
 1286. constructor, [W-C] function:1093/699,
 1287. constructor, [W-C] function:1094/700,
 1288. constructor, [W-C] function:1095/701,
 1289. constructor, [W-C] function:1096/702,
 1290. constructor, [W-C] function:1097/703,
 1291. constructor, [W-C] function:1098/704,
 1292. constructor, [W-C] function:1099/705,
 1293. constructor, [W-C] function:1100/706,
 1294. constructor, [W-C] function:1101/707,
 1295. constructor, [W-C] function:1102/708,
 1296. constructor, [W-C] function:1103/709,
 1297. constructor, [W-C] function:1104/710,
 1298. constructor, [W-C] function:1105/711,
 1299. constructor, [W-C] function:1106/712,
 1300. constructor, [W-C] function:1107/713,
 1301. constructor, [W-C] function:1108/714,
 1302. constructor, [W-C] function:1109/715,
 1303. constructor, [W-C] function:1110/716,
 1304. constructor, [W-C] function:1111/717,
 1305. constructor, [W-C] function:1112/718,
 1306. constructor, [W-C] function:1113/719,
 1307. constructor, [W-C] function:1114/720,
 1308. constructor, [W-C] function:1115/721,
 1309. constructor, [W-C] function:1116/722,
 1310. constructor, [W-C] function:1117/723,
 1311. constructor, [W-C] function:1118/724,
 1312. constructor, [W-C] function:1119/725,
 1313. constructor, [W-C] function:1120/726,
 1314. constructor, [W-C] function:1121/727,
 1315. constructor, [W-C] function:1122/728,
 1316. constructor, [W-C] function:1123/729,
 1317. constructor, [W-C] function:1124/730,
 1318. constructor, [W-C] function:1125/731,
 1319. constructor, [W-C] function:1126/732,
 1320. constructor, [W-C] function:1127/733,
 1321. constructor, [W-C] function:1128/734,
 1322. constructor, [W-C] function:1129/735,
 1323. constructor, [W-C] function:1130/736,
 1324. constructor, [W-C] function:1131/737,
 1325. constructor, [W-C] function:1132/738,
 1326. constructor, [W-C] function:1133/739,
 1327. constructor, [W-C] function:1134/740,
 1328. constructor, [W-C] function:1135/741,
 1329. constructor, [W-C] function:1136/742,
 1330. constructor, [W-C] function:1137/743,
 1331. constructor, [W-C] function:1138/744,
 1332. constructor, [W-C] function:1139/745,
 1333. constructor, [W-C] function:1140/746,
 1334. constructor, [W-C] function:1141/747,
 1335. constructor, [W-C] function:1142/748,
 1336. constructor, [W-C] function:1143/749,
 1337. constructor, [W-C] function:1144/750,
 1338. constructor, [W-C] function:1145/751,
 1339. constructor, [W-C] function:1146/752,
 1340. constructor, [W-C] function:1147/753,
 1341. constructor, [W-C] function:1148/754,
 1342. constructor, [W-C] function:1149/755,
 1343. constructor, [W-C] function:1150/756,
 1344. constructor, [W-C] function:1151/757,
 1345. constructor, [W-C] function:1152/758,
 1346. constructor, [W-C] function:1153/759,
 1347. constructor, [W-C] function:1154/760,
 1348. constructor, [W-C] function:1155/761,
 1349. constructor, [W-C] function:1156/762,
 1350. constructor, [W-C] function:1157/763,
 1351. constructor, [W-C] function:1158/764,
 1352. constructor, [W-C] function:1159/765,
 1353. constructor, [W-C] function:1160/766,
 1354. constructor, [W-C] function:1161/767,
 1355. constructor, [W-C] function:1162/768,
 1356. children, object:1375;
       exports, function:1376/782;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1377,
 1357. children, object:1378;
       exports, object:1379;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1380,
 1358. children, object:1381;
       exports, object:832;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1382,
 1359. children, object:1383;
       exports, function:873/590;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1384,
 1360. children, object:1385;
       exports, function:833/565;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1386,
 1361. children, object:1387;
       exports, function:834/566;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:983;
       paths, object:1388,
 1362. constructor, [W-C] function:1192/769,
 1363. constructor, [W-C] function:1193/770,
 1364. constructor, [W-C] function:1194/771,
 1365. constructor, [W-C] function:1195/772,
 1366. constructor, [W-C] function:1196/773,
 1367. constructor, [W-C] function:1197/774,
 1368. constructor, [W-C] function:1198/775,
 1369. constructor, [W-C] function:1199/776,
 1370. constructor, [W-C] function:1200/777,
 1371. constructor, [W-C] function:1201/778,
 1372. constructor, [W-C] function:1202/779,
 1373. constructor, [W-C] function:1203/780,
 1374. constructor, [W-C] function:1204/781,
 1375. length, [W--] int:0,
 1376. VERSION, string:1.3.3;
       _, function:1376/782;
       after, function:1389/783;
       all, function:1390/784;
       any, function:1391/785;
       bind, function:1392/786;
       bindAll, function:1393/787;
       chain, function:1394/788;
       clone, function:1395/789;
       collect, function:1396/790;
       compact, function:1397/791;
       compose, function:1398/792;
       contains, function:1399/793;
       debounce, function:1400/794;
       defaults, function:1401/795;
       defer, function:1402/796;
       delay, function:1403/797;
       detect, function:1404/798;
       difference, function:1405/799;
       each, function:1406/800;
       escape, function:1407/801;
       every, function:1390/784;
       extend, function:1408/802;
       filter, function:1409/803;
       find, function:1404/798;
       first, function:1410/804;
       flatten, function:1411/805;
       foldl, function:1412/806;
       foldr, function:1413/807;
       forEach, function:1406/800;
       functions, function:1414/808;
       groupBy, function:1415/809;
       has, function:1416/810;
       head, function:1410/804;
       identity, function:1417/811;
       include, function:1399/793;
       indexOf, function:1418/812;
       initial, function:1419/813;
       inject, function:1412/806;
       intersect, function:1420/814;
       intersection, function:1420/814;
       invoke, function:1421/815;
       isArguments, function:1422/816;
       isArray, function:59/53;
       isBoolean, function:1423/817;
       isDate, function:1424/818;
       isElement, function:1425/819;
       isEmpty, function:1426/820;
       isEqual, function:1427/821;
       isFinite, function:1428/822;
       isFunction, function:1429/823;
       isNaN, function:1430/824;
       isNull, function:1431/825;
       isNumber, function:1432/826;
       isObject, function:1433/827;
       isRegExp, function:1434/828;
       isString, function:1435/829;
       isUndefined, function:1436/830;
       keys, function:151/130;
       last, function:1437/831;
       lastIndexOf, function:1438/832;
       length, [--C] int:1;
       map, function:1396/790;
       max, function:1439/833;
       memoize, function:1440/834;
       methods, function:1414/808;
       min, function:1441/835;
       mixin, function:1442/836;
       name, [--C] string:;
       noConflict, function:1443/837;
       once, function:1444/838;
       pick, function:1445/839;
       pluck, function:1446/840;
       prototype, [W--] object:1447;
       range, function:1448/841;
       reduce, function:1412/806;
       reduceRight, function:1413/807;
       reject, function:1449/842;
       rest, function:1450/843;
       result, function:1451/844;
       select, function:1409/803;
       shuffle, function:1452/845;
       size, function:1453/846;
       some, function:1391/785;
       sortBy, function:1454/847;
       sortedIndex, function:1455/848;
       str, object:1379;
       tail, function:1450/843;
       take, function:1410/804;
       tap, function:1456/849;
       template, function:1457/850;
       templateSettings, object:1458;
       throttle, function:1459/851;
       times, function:1460/852;
       toArray, function:1461/853;
       union, function:1462/854;
       uniq, function:1463/855;
       unique, function:1463/855;
       uniqueId, function:1464/856;
       values, function:1465/857;
       without, function:1466/858;
       wrap, function:1467/859;
       zip, function:1468/860,
 1377. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1378. length, [W--] int:0,
 1379. VERSION, string:2.1.1;
       camelize, function:1469/861;
       capitalize, function:1470/862;
       center, function:1471/863;
       chars, function:1472/864;
       chop, function:1473/865;
       classify, function:1474/866;
       clean, function:1475/867;
       contains, function:1476/868;
       count, function:1477/869;
       dasherize, function:1478/870;
       endsWith, function:1479/871;
       escapeHTML, function:1480/872;
       escapeRegExp, function:1481/873;
       exports, function:1482/874;
       humanize, function:1483/875;
       include, function:1476/868;
       insert, function:1484/876;
       isBlank, function:1485/877;
       join, function:1486/878;
       lines, function:1487/879;
       ljust, function:1488/880;
       lpad, function:1489/881;
       lrpad, function:1471/863;
       lstrip, function:1490/882;
       ltrim, function:1490/882;
       pad, function:1491/883;
       prune, function:1492/884;
       repeat, function:1493/885;
       reverse, function:1494/886;
       rjust, function:1489/881;
       rpad, function:1488/880;
       rstrip, function:1495/887;
       rtrim, function:1495/887;
       slugify, function:1496/888;
       splice, function:1497/889;
       sprintf, function:1498/890;
       startsWith, function:1499/891;
       strLeft, function:1500/892;
       strLeftBack, function:1501/893;
       strRight, function:1502/894;
       strRightBack, function:1503/895;
       strip, function:1504/896;
       stripTags, function:1505/897;
       succ, function:1506/898;
       titleize, function:1507/899;
       toNumber, function:1508/900;
       toSentence, function:1509/901;
       trim, function:1504/896;
       truncate, function:1510/902;
       underscored, function:1511/903;
       unescapeHTML, function:1512/904;
       vsprintf, function:1513/905;
       words, function:1514/906,
 1380. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1381. length, [W--] int:0,
 1382. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1383. 0, object:1515;
       1, object:1516;
       10, object:1517;
       11, object:1518;
       2, object:1519;
       3, object:1520;
       4, object:1521;
       5, object:1522;
       6, object:1523;
       7, object:1524;
       8, object:1525;
       9, object:1526;
       length, [W--] int:12,
 1384. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1385. length, [W--] int:0,
 1386. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1387. length, [W--] int:0,
 1388. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1389. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1527,
 1390. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1528,
 1391. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1529,
 1392. length, [--C] int:2;
       name, [--C] string:bind;
       prototype, [W--] object:1530,
 1393. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1531,
 1394. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1532,
 1395. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1533,
 1396. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1534,
 1397. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1535,
 1398. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1536,
 1399. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1537,
 1400. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1538,
 1401. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1539,
 1402. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1540,
 1403. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1541,
 1404. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1542,
 1405. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1543,
 1406. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1544,
 1407. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1545,
 1408. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1546,
 1409. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1547,
 1410. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1548,
 1411. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1549,
 1412. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1550,
 1413. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1551,
 1414. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1552,
 1415. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1553,
 1416. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1554,
 1417. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1555,
 1418. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1556,
 1419. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1557,
 1420. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1558,
 1421. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1559,
 1422. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1560,
 1423. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1561,
 1424. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1562,
 1425. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1563,
 1426. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1564,
 1427. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1565,
 1428. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1566,
 1429. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1567,
 1430. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1568,
 1431. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1569,
 1432. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1570,
 1433. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1571,
 1434. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1572,
 1435. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1573,
 1436. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1574,
 1437. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1575,
 1438. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1576,
 1439. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1577,
 1440. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1578,
 1441. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1579,
 1442. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1580,
 1443. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1581,
 1444. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1582,
 1445. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1583,
 1446. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1584,
 1447. _, function:1585/907;
       after, function:1586/908;
       all, function:1587/909;
       any, function:1588/910;
       bind, function:1589/911;
       bindAll, function:1590/912;
       chain, function:1591/913;
       clone, function:1592/914;
       collect, function:1593/915;
       compact, function:1594/916;
       compose, function:1595/917;
       concat, function:1596/918;
       constructor, [W-C] function:1597/919;
       contains, function:1598/920;
       debounce, function:1599/921;
       defaults, function:1600/922;
       defer, function:1601/923;
       delay, function:1602/924;
       detect, function:1603/925;
       difference, function:1604/926;
       each, function:1605/927;
       escape, function:1606/928;
       every, function:1607/929;
       extend, function:1608/930;
       filter, function:1609/931;
       find, function:1610/932;
       first, function:1611/933;
       flatten, function:1612/934;
       foldl, function:1613/935;
       foldr, function:1614/936;
       forEach, function:1615/937;
       functions, function:1616/938;
       groupBy, function:1617/939;
       has, function:1618/940;
       head, function:1619/941;
       identity, function:1620/942;
       include, function:1621/943;
       indexOf, function:1622/944;
       initial, function:1623/945;
       inject, function:1624/946;
       intersect, function:1625/947;
       intersection, function:1626/948;
       invoke, function:1627/949;
       isArguments, function:1628/950;
       isArray, function:1629/951;
       isBoolean, function:1630/952;
       isDate, function:1631/953;
       isElement, function:1632/954;
       isEmpty, function:1633/955;
       isEqual, function:1634/956;
       isFinite, function:1635/957;
       isFunction, function:1636/958;
       isNaN, function:1637/959;
       isNull, function:1638/960;
       isNumber, function:1639/961;
       isObject, function:1640/962;
       isRegExp, function:1641/963;
       isString, function:1642/964;
       isUndefined, function:1643/965;
       join, function:1644/966;
       keys, function:1645/967;
       last, function:1646/968;
       lastIndexOf, function:1647/969;
       map, function:1648/970;
       max, function:1649/971;
       memoize, function:1650/972;
       methods, function:1651/973;
       min, function:1652/974;
       mixin, function:1653/975;
       noConflict, function:1654/976;
       once, function:1655/977;
       pick, function:1656/978;
       pluck, function:1657/979;
       pop, function:1658/980;
       push, function:1659/981;
       range, function:1660/982;
       reduce, function:1661/983;
       reduceRight, function:1662/984;
       reject, function:1663/985;
       rest, function:1664/986;
       result, function:1665/987;
       reverse, function:1666/988;
       select, function:1667/989;
       shift, function:1668/990;
       shuffle, function:1669/991;
       size, function:1670/992;
       slice, function:1671/993;
       some, function:1672/994;
       sort, function:1673/995;
       sortBy, function:1674/996;
       sortedIndex, function:1675/997;
       splice, function:1676/998;
       tail, function:1677/999;
       take, function:1678/1000;
       tap, function:1679/1001;
       template, function:1680/1002;
       throttle, function:1681/1003;
       times, function:1682/1004;
       toArray, function:1683/1005;
       union, function:1684/1006;
       uniq, function:1685/1007;
       unique, function:1686/1008;
       uniqueId, function:1687/1009;
       unshift, function:1688/1010;
       value, function:1689/1011;
       values, function:1690/1012;
       without, function:1691/1013;
       wrap, function:1692/1014;
       zip, function:1693/1015,
 1448. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1694,
 1449. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1695,
 1450. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1696,
 1451. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1697,
 1452. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1698,
 1453. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1699,
 1454. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1700,
 1455. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1701,
 1456. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1702,
 1457. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1703,
 1458. escape, object:1704;
       evaluate, object:1705;
       interpolate, object:1706,
 1459. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1707,
 1460. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1708,
 1461. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1709,
 1462. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1710,
 1463. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1711,
 1464. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1712,
 1465. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1713,
 1466. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1714,
 1467. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1715,
 1468. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1716,
 1469. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1717,
 1470. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1718,
 1471. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1719,
 1472. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1720,
 1473. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1721,
 1474. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1722,
 1475. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1723,
 1476. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1724,
 1477. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1725,
 1478. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1726,
 1479. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1727,
 1480. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1728,
 1481. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1729,
 1482. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1730,
 1483. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1731,
 1484. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1732,
 1485. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1733,
 1486. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1734,
 1487. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1735,
 1488. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1736,
 1489. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1737,
 1490. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1738,
 1491. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1739,
 1492. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1740,
 1493. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1741,
 1494. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1742,
 1495. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1743,
 1496. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1744,
 1497. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1745,
 1498. cache, object:1746;
       format, function:1747/1016;
       length, [--C] int:0;
       name, [--C] string:;
       parse, function:1748/1017;
       prototype, [W--] object:1749,
 1499. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1750,
 1500. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1751,
 1501. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1752,
 1502. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1753,
 1503. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1754,
 1504. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1755,
 1505. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1756,
 1506. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1757,
 1507. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1758,
 1508. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1759,
 1509. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1760,
 1510. length, [--C] int:3;
       name, [--C] string:;
       prototype, [W--] object:1761,
 1511. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1762,
 1512. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1763,
 1513. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1764,
 1514. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1765,
 1515. children, object:1766;
       exports, function:830/563;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1767,
 1516. children, object:1768;
       exports, function:1769/1018;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1770,
 1517. children, object:1771;
       exports, function:1772/1019;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1773,
 1518. children, object:1774;
       exports, function:1775/1020;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1776,
 1519. children, object:1777;
       exports, function:1778/1021;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1779,
 1520. children, object:1780;
       exports, function:1781/1022;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1782,
 1521. children, object:1783;
       exports, function:1784/1023;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1785,
 1522. children, object:1786;
       exports, function:1787/1024;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1788,
 1523. children, object:1789;
       exports, function:1790/1025;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1791,
 1524. children, object:1792;
       exports, function:1793/1026;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1794,
 1525. children, object:1795;
       exports, function:1796/1027;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1797,
 1526. children, object:1798;
       exports, function:1799/1028;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1359;
       paths, object:1800,
 1527. constructor, [W-C] function:1389/783,
 1528. constructor, [W-C] function:1390/784,
 1529. constructor, [W-C] function:1391/785,
 1530. constructor, [W-C] function:1392/786,
 1531. constructor, [W-C] function:1393/787,
 1532. constructor, [W-C] function:1394/788,
 1533. constructor, [W-C] function:1395/789,
 1534. constructor, [W-C] function:1396/790,
 1535. constructor, [W-C] function:1397/791,
 1536. constructor, [W-C] function:1398/792,
 1537. constructor, [W-C] function:1399/793,
 1538. constructor, [W-C] function:1400/794,
 1539. constructor, [W-C] function:1401/795,
 1540. constructor, [W-C] function:1402/796,
 1541. constructor, [W-C] function:1403/797,
 1542. constructor, [W-C] function:1404/798,
 1543. constructor, [W-C] function:1405/799,
 1544. constructor, [W-C] function:1406/800,
 1545. constructor, [W-C] function:1407/801,
 1546. constructor, [W-C] function:1408/802,
 1547. constructor, [W-C] function:1409/803,
 1548. constructor, [W-C] function:1410/804,
 1549. constructor, [W-C] function:1411/805,
 1550. constructor, [W-C] function:1412/806,
 1551. constructor, [W-C] function:1413/807,
 1552. constructor, [W-C] function:1414/808,
 1553. constructor, [W-C] function:1415/809,
 1554. constructor, [W-C] function:1416/810,
 1555. constructor, [W-C] function:1417/811,
 1556. constructor, [W-C] function:1418/812,
 1557. constructor, [W-C] function:1419/813,
 1558. constructor, [W-C] function:1420/814,
 1559. constructor, [W-C] function:1421/815,
 1560. constructor, [W-C] function:1422/816,
 1561. constructor, [W-C] function:1423/817,
 1562. constructor, [W-C] function:1424/818,
 1563. constructor, [W-C] function:1425/819,
 1564. constructor, [W-C] function:1426/820,
 1565. constructor, [W-C] function:1427/821,
 1566. constructor, [W-C] function:1428/822,
 1567. constructor, [W-C] function:1429/823,
 1568. constructor, [W-C] function:1430/824,
 1569. constructor, [W-C] function:1431/825,
 1570. constructor, [W-C] function:1432/826,
 1571. constructor, [W-C] function:1433/827,
 1572. constructor, [W-C] function:1434/828,
 1573. constructor, [W-C] function:1435/829,
 1574. constructor, [W-C] function:1436/830,
 1575. constructor, [W-C] function:1437/831,
 1576. constructor, [W-C] function:1438/832,
 1577. constructor, [W-C] function:1439/833,
 1578. constructor, [W-C] function:1440/834,
 1579. constructor, [W-C] function:1441/835,
 1580. constructor, [W-C] function:1442/836,
 1581. constructor, [W-C] function:1443/837,
 1582. constructor, [W-C] function:1444/838,
 1583. constructor, [W-C] function:1445/839,
 1584. constructor, [W-C] function:1446/840,
 1585. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1801,
 1586. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1802,
 1587. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1803,
 1588. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1804,
 1589. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1805,
 1590. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1806,
 1591. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1807,
 1592. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1808,
 1593. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1809,
 1594. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1810,
 1595. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1811,
 1596. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1812,
 1597. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1447,
 1598. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1813,
 1599. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1814,
 1600. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1815,
 1601. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1816,
 1602. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1817,
 1603. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1818,
 1604. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1819,
 1605. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1820,
 1606. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1821,
 1607. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1822,
 1608. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1823,
 1609. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1824,
 1610. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1825,
 1611. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1826,
 1612. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1827,
 1613. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1828,
 1614. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1829,
 1615. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1830,
 1616. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1831,
 1617. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1832,
 1618. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1833,
 1619. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1834,
 1620. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1835,
 1621. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1836,
 1622. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1837,
 1623. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1838,
 1624. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1839,
 1625. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1840,
 1626. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1841,
 1627. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1842,
 1628. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1843,
 1629. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1844,
 1630. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1845,
 1631. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1846,
 1632. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1847,
 1633. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1848,
 1634. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1849,
 1635. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1850,
 1636. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1851,
 1637. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1852,
 1638. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1853,
 1639. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1854,
 1640. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1855,
 1641. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1856,
 1642. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1857,
 1643. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1858,
 1644. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1859,
 1645. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1860,
 1646. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1861,
 1647. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1862,
 1648. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1863,
 1649. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1864,
 1650. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1865,
 1651. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1866,
 1652. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1867,
 1653. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1868,
 1654. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1869,
 1655. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1870,
 1656. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1871,
 1657. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1872,
 1658. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1873,
 1659. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1874,
 1660. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1875,
 1661. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1876,
 1662. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1877,
 1663. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1878,
 1664. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1879,
 1665. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1880,
 1666. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1881,
 1667. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1882,
 1668. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1883,
 1669. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1884,
 1670. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1885,
 1671. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1886,
 1672. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1887,
 1673. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1888,
 1674. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1889,
 1675. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1890,
 1676. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1891,
 1677. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1892,
 1678. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1893,
 1679. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1894,
 1680. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1895,
 1681. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1896,
 1682. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1897,
 1683. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1898,
 1684. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1899,
 1685. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1900,
 1686. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1901,
 1687. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1902,
 1688. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1903,
 1689. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1904,
 1690. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1905,
 1691. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1906,
 1692. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1907,
 1693. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1908,
 1694. constructor, [W-C] function:1448/841,
 1695. constructor, [W-C] function:1449/842,
 1696. constructor, [W-C] function:1450/843,
 1697. constructor, [W-C] function:1451/844,
 1698. constructor, [W-C] function:1452/845,
 1699. constructor, [W-C] function:1453/846,
 1700. constructor, [W-C] function:1454/847,
 1701. constructor, [W-C] function:1455/848,
 1702. constructor, [W-C] function:1456/849,
 1703. constructor, [W-C] function:1457/850,
 1704. global, [---] bool:true;
       ignoreCase, [---] bool:false;
       lastIndex, [W--] int:0;
       multiline, [---] bool:false;
       source, [---] string:<%-([\s\S]+?)%>,
 1705. global, [---] bool:true;
       ignoreCase, [---] bool:false;
       lastIndex, [W--] int:0;
       multiline, [---] bool:false;
       source, [---] string:<%([\s\S]+?)%>,
 1706. global, [---] bool:true;
       ignoreCase, [---] bool:false;
       lastIndex, [W--] int:0;
       multiline, [---] bool:false;
       source, [---] string:<%=([\s\S]+?)%>,
 1707. constructor, [W-C] function:1459/851,
 1708. constructor, [W-C] function:1460/852,
 1709. constructor, [W-C] function:1461/853,
 1710. constructor, [W-C] function:1462/854,
 1711. constructor, [W-C] function:1463/855,
 1712. constructor, [W-C] function:1464/856,
 1713. constructor, [W-C] function:1465/857,
 1714. constructor, [W-C] function:1466/858,
 1715. constructor, [W-C] function:1467/859,
 1716. constructor, [W-C] function:1468/860,
 1717. constructor, [W-C] function:1469/861,
 1718. constructor, [W-C] function:1470/862,
 1719. constructor, [W-C] function:1471/863,
 1720. constructor, [W-C] function:1472/864,
 1721. constructor, [W-C] function:1473/865,
 1722. constructor, [W-C] function:1474/866,
 1723. constructor, [W-C] function:1475/867,
 1724. constructor, [W-C] function:1476/868,
 1725. constructor, [W-C] function:1477/869,
 1726. constructor, [W-C] function:1478/870,
 1727. constructor, [W-C] function:1479/871,
 1728. constructor, [W-C] function:1480/872,
 1729. constructor, [W-C] function:1481/873,
 1730. constructor, [W-C] function:1482/874,
 1731. constructor, [W-C] function:1483/875,
 1732. constructor, [W-C] function:1484/876,
 1733. constructor, [W-C] function:1485/877,
 1734. constructor, [W-C] function:1486/878,
 1735. constructor, [W-C] function:1487/879,
 1736. constructor, [W-C] function:1488/880,
 1737. constructor, [W-C] function:1489/881,
 1738. constructor, [W-C] function:1490/882,
 1739. constructor, [W-C] function:1491/883,
 1740. constructor, [W-C] function:1492/884,
 1741. constructor, [W-C] function:1493/885,
 1742. constructor, [W-C] function:1494/886,
 1743. constructor, [W-C] function:1495/887,
 1744. constructor, [W-C] function:1496/888,
 1745. constructor, [W-C] function:1497/889,
 1746. ,
 1747. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1909,
 1748. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1910,
 1749. constructor, [W-C] function:1498/890,
 1750. constructor, [W-C] function:1499/891,
 1751. constructor, [W-C] function:1500/892,
 1752. constructor, [W-C] function:1501/893,
 1753. constructor, [W-C] function:1502/894,
 1754. constructor, [W-C] function:1503/895,
 1755. constructor, [W-C] function:1504/896,
 1756. constructor, [W-C] function:1505/897,
 1757. constructor, [W-C] function:1506/898,
 1758. constructor, [W-C] function:1507/899,
 1759. constructor, [W-C] function:1508/900,
 1760. constructor, [W-C] function:1509/901,
 1761. constructor, [W-C] function:1510/902,
 1762. constructor, [W-C] function:1511/903,
 1763. constructor, [W-C] function:1512/904,
 1764. constructor, [W-C] function:1513/905,
 1765. constructor, [W-C] function:1514/906,
 1766. length, [W--] int:0,
 1767. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/node_mod...;
       5, string:/local/node_modules;
       6, string:/node_modules;
       length, [W--] int:7,
 1768. length, [W--] int:0,
 1769. length, [--C] int:1;
       name, [--C] string:ActionHelp;
       prototype, [W--] object:1911;
       super_, function:830/563,
 1770. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1771. 0, object:1912;
       length, [W--] int:1,
 1772. length, [--C] int:1;
       name, [--C] string:ActionSubparsers;
       prototype, [W--] object:1913;
       super_, function:830/563,
 1773. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1774. length, [W--] int:0,
 1775. length, [--C] int:2;
       name, [--C] string:ArgumentGroup;
       prototype, [W--] object:1914;
       super_, function:873/590,
 1776. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1777. length, [W--] int:0,
 1778. length, [--C] int:1;
       name, [--C] string:ActionAppend;
       prototype, [W--] object:1915;
       super_, function:830/563,
 1779. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1780. length, [W--] int:0,
 1781. length, [--C] int:1;
       name, [--C] string:ActionAppendConstant...;
       prototype, [W--] object:1916;
       super_, function:830/563,
 1782. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/jkloos/n...;
       6, string:/local/home/node_mod...;
       7, string:/local/node_modules;
       8, string:/node_modules;
       length, [W--] int:9,
 1783. length, [W--] int:0,
 1784. length, [--C] int:1;
       name, [--C] string:ActionCount;
       prototype, [W--] object:1917;
       super_, function:830/563,
 1785. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1786. length, [W--] int:0,
 1787. length, [--C] int:1;
       name, [--C] string:ActionStore;
       prototype, [W--] object:1918;
       super_, function:830/563,
 1788. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1789. length, [W--] int:0,
 1790. length, [--C] int:1;
       name, [--C] string:ActionStoreConstant;
       prototype, [W--] object:1919;
       super_, function:830/563,
 1791. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/jkloos/n...;
       6, string:/local/home/node_mod...;
       7, string:/local/node_modules;
       8, string:/node_modules;
       length, [W--] int:9,
 1792. length, [W--] int:0,
 1793. length, [--C] int:1;
       name, [--C] string:ActionStoreTrue;
       prototype, [W--] object:1920;
       super_, function:1790/1025,
 1794. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/jkloos/n...;
       6, string:/local/home/node_mod...;
       7, string:/local/node_modules;
       8, string:/node_modules;
       length, [W--] int:9,
 1795. length, [W--] int:0,
 1796. length, [--C] int:1;
       name, [--C] string:ActionStoreFalse;
       prototype, [W--] object:1921;
       super_, function:1790/1025,
 1797. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/jkloos/n...;
       6, string:/local/home/node_mod...;
       7, string:/local/node_modules;
       8, string:/node_modules;
       length, [W--] int:9,
 1798. length, [W--] int:0,
 1799. length, [--C] int:1;
       name, [--C] string:ActionVersion;
       prototype, [W--] object:1922;
       super_, function:830/563,
 1800. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1801. constructor, [W-C] function:1585/907,
 1802. constructor, [W-C] function:1586/908,
 1803. constructor, [W-C] function:1587/909,
 1804. constructor, [W-C] function:1588/910,
 1805. constructor, [W-C] function:1589/911,
 1806. constructor, [W-C] function:1590/912,
 1807. constructor, [W-C] function:1591/913,
 1808. constructor, [W-C] function:1592/914,
 1809. constructor, [W-C] function:1593/915,
 1810. constructor, [W-C] function:1594/916,
 1811. constructor, [W-C] function:1595/917,
 1812. constructor, [W-C] function:1596/918,
 1813. constructor, [W-C] function:1598/920,
 1814. constructor, [W-C] function:1599/921,
 1815. constructor, [W-C] function:1600/922,
 1816. constructor, [W-C] function:1601/923,
 1817. constructor, [W-C] function:1602/924,
 1818. constructor, [W-C] function:1603/925,
 1819. constructor, [W-C] function:1604/926,
 1820. constructor, [W-C] function:1605/927,
 1821. constructor, [W-C] function:1606/928,
 1822. constructor, [W-C] function:1607/929,
 1823. constructor, [W-C] function:1608/930,
 1824. constructor, [W-C] function:1609/931,
 1825. constructor, [W-C] function:1610/932,
 1826. constructor, [W-C] function:1611/933,
 1827. constructor, [W-C] function:1612/934,
 1828. constructor, [W-C] function:1613/935,
 1829. constructor, [W-C] function:1614/936,
 1830. constructor, [W-C] function:1615/937,
 1831. constructor, [W-C] function:1616/938,
 1832. constructor, [W-C] function:1617/939,
 1833. constructor, [W-C] function:1618/940,
 1834. constructor, [W-C] function:1619/941,
 1835. constructor, [W-C] function:1620/942,
 1836. constructor, [W-C] function:1621/943,
 1837. constructor, [W-C] function:1622/944,
 1838. constructor, [W-C] function:1623/945,
 1839. constructor, [W-C] function:1624/946,
 1840. constructor, [W-C] function:1625/947,
 1841. constructor, [W-C] function:1626/948,
 1842. constructor, [W-C] function:1627/949,
 1843. constructor, [W-C] function:1628/950,
 1844. constructor, [W-C] function:1629/951,
 1845. constructor, [W-C] function:1630/952,
 1846. constructor, [W-C] function:1631/953,
 1847. constructor, [W-C] function:1632/954,
 1848. constructor, [W-C] function:1633/955,
 1849. constructor, [W-C] function:1634/956,
 1850. constructor, [W-C] function:1635/957,
 1851. constructor, [W-C] function:1636/958,
 1852. constructor, [W-C] function:1637/959,
 1853. constructor, [W-C] function:1638/960,
 1854. constructor, [W-C] function:1639/961,
 1855. constructor, [W-C] function:1640/962,
 1856. constructor, [W-C] function:1641/963,
 1857. constructor, [W-C] function:1642/964,
 1858. constructor, [W-C] function:1643/965,
 1859. constructor, [W-C] function:1644/966,
 1860. constructor, [W-C] function:1645/967,
 1861. constructor, [W-C] function:1646/968,
 1862. constructor, [W-C] function:1647/969,
 1863. constructor, [W-C] function:1648/970,
 1864. constructor, [W-C] function:1649/971,
 1865. constructor, [W-C] function:1650/972,
 1866. constructor, [W-C] function:1651/973,
 1867. constructor, [W-C] function:1652/974,
 1868. constructor, [W-C] function:1653/975,
 1869. constructor, [W-C] function:1654/976,
 1870. constructor, [W-C] function:1655/977,
 1871. constructor, [W-C] function:1656/978,
 1872. constructor, [W-C] function:1657/979,
 1873. constructor, [W-C] function:1658/980,
 1874. constructor, [W-C] function:1659/981,
 1875. constructor, [W-C] function:1660/982,
 1876. constructor, [W-C] function:1661/983,
 1877. constructor, [W-C] function:1662/984,
 1878. constructor, [W-C] function:1663/985,
 1879. constructor, [W-C] function:1664/986,
 1880. constructor, [W-C] function:1665/987,
 1881. constructor, [W-C] function:1666/988,
 1882. constructor, [W-C] function:1667/989,
 1883. constructor, [W-C] function:1668/990,
 1884. constructor, [W-C] function:1669/991,
 1885. constructor, [W-C] function:1670/992,
 1886. constructor, [W-C] function:1671/993,
 1887. constructor, [W-C] function:1672/994,
 1888. constructor, [W-C] function:1673/995,
 1889. constructor, [W-C] function:1674/996,
 1890. constructor, [W-C] function:1675/997,
 1891. constructor, [W-C] function:1676/998,
 1892. constructor, [W-C] function:1677/999,
 1893. constructor, [W-C] function:1678/1000,
 1894. constructor, [W-C] function:1679/1001,
 1895. constructor, [W-C] function:1680/1002,
 1896. constructor, [W-C] function:1681/1003,
 1897. constructor, [W-C] function:1682/1004,
 1898. constructor, [W-C] function:1683/1005,
 1899. constructor, [W-C] function:1684/1006,
 1900. constructor, [W-C] function:1685/1007,
 1901. constructor, [W-C] function:1686/1008,
 1902. constructor, [W-C] function:1687/1009,
 1903. constructor, [W-C] function:1688/1010,
 1904. constructor, [W-C] function:1689/1011,
 1905. constructor, [W-C] function:1690/1012,
 1906. constructor, [W-C] function:1691/1013,
 1907. constructor, [W-C] function:1692/1014,
 1908. constructor, [W-C] function:1693/1015,
 1909. constructor, [W-C] function:1747/1016,
 1910. constructor, [W-C] function:1748/1017,
 1911. call, function:1923/1029;
       constructor, [W-C] function:1769/1018,
 1912. children, object:1924;
       exports, function:1925/1030;
       filename, string:/local/home/jkloos/n...;
       id, string:/local/home/jkloos/n...;
       loaded, bool:true;
       parent, object:1517;
       paths, object:1926,
 1913. _getSubactions, function:1927/1031;
       addParser, function:1928/1032;
       call, function:1929/1033;
       constructor, [W-C] function:1772/1019,
 1914. _addAction, function:1930/1034;
       _removeAction, function:1931/1035;
       constructor, [W-C] function:1775/1020,
 1915. call, function:1932/1036;
       constructor, [W-C] function:1778/1021,
 1916. call, function:1933/1037;
       constructor, [W-C] function:1781/1022,
 1917. call, function:1934/1038;
       constructor, [W-C] function:1784/1023,
 1918. call, function:1935/1039;
       constructor, [W-C] function:1787/1024,
 1919. call, function:1936/1040;
       constructor, [W-C] function:1790/1025,
 1920. constructor, [W-C] function:1793/1026,
 1921. constructor, [W-C] function:1796/1027,
 1922. call, function:1937/1041;
       constructor, [W-C] function:1799/1028,
 1923. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1938,
 1924. length, [W--] int:0,
 1925. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1939,
 1926. 0, string:/local/home/jkloos/n...;
       1, string:/local/home/jkloos/n...;
       2, string:/local/home/jkloos/n...;
       3, string:/local/home/jkloos/n...;
       4, string:/local/home/jkloos/n...;
       5, string:/local/home/node_mod...;
       6, string:/local/node_modules;
       7, string:/node_modules;
       length, [W--] int:8,
 1927. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:1940,
 1928. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:1941,
 1929. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1942,
 1930. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1943,
 1931. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1944,
 1932. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1945,
 1933. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1946,
 1934. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1947,
 1935. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1948,
 1936. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1949,
 1937. length, [--C] int:4;
       name, [--C] string:;
       prototype, [W--] object:1950,
 1938. constructor, [W-C] function:1923/1029,
 1939. constructor, [W-C] function:1925/1030,
 1940. constructor, [W-C] function:1927/1031,
 1941. constructor, [W-C] function:1928/1032,
 1942. constructor, [W-C] function:1929/1033,
 1943. constructor, [W-C] function:1930/1034,
 1944. constructor, [W-C] function:1931/1035,
 1945. constructor, [W-C] function:1932/1036,
 1946. constructor, [W-C] function:1933/1037,
 1947. constructor, [W-C] function:1934/1038,
 1948. constructor, [W-C] function:1935/1039,
 1949. constructor, [W-C] function:1936/1040,
 1950. constructor, [W-C] function:1937/1041,
 1951. *J$SID*, [W--] int:1;
       length, [--C] int:0;
       name, [--C] string:outer;
       prototype, [W--] object:1952,
 1952. constructor, [W-C] function:1951/1042,
 1953. *J$SID*, [W--] int:1;
       length, [--C] int:0;
       name, [--C] string:throwing;
       prototype, [W--] object:1954,
 1954. constructor, [W-C] function:1953/1043,
 1955. *J$SID*, [W--] int:1;
       length, [--C] int:0;
       name, [--C] string:cons;
       prototype, [W--] object:1956,
 1956. constructor, [W-C] function:1955/1044,
 1957. Console, function:1958/1045;
       _stderr, [W-C] object:1959;
       _stdout, [W-C] object:1960;
       _times, [W-C] object:1961;
       assert, function:1962/1046;
       dir, function:1963/1047;
       error, function:1964/1048;
       info, function:1965/1049;
       log, function:1966/1050;
       time, function:1967/1051;
       timeEnd, function:1968/1052;
       trace, function:1969/1053;
       warn, function:1970/1054,
 1958. length, [--C] int:2;
       name, [--C] string:Console;
       prototype, [W--] object:1971,
 1959. _bytesDispatched, int:0;
       _connecting, bool:false;
       _events, object:1972;
       _eventsCount, int:3;
       _hadError, bool:false;
       _handle, object:1973;
       _host, null;
       _isStdio, bool:true;
       _maxListeners, undefined;
       _parent, null;
       _pendingData, null;
       _pendingEncoding, string:;
       _readableState, object:1974;
       _sockname, null;
       _type, string:tty;
       _writableState, object:1975;
       _writev, null;
       allowHalfOpen, bool:false;
       bytesRead, int:0;
       columns, int:190;
       destroy, function:1976/1055;
       destroySoon, function:1976/1055;
       destroyed, bool:false;
       domain, null;
       fd, int:2;
       readable, bool:false;
       rows, int:58;
       writable, bool:true,
 1960. _bytesDispatched, int:436;
       _connecting, bool:false;
       _events, object:1977;
       _eventsCount, int:3;
       _hadError, bool:false;
       _handle, object:1978;
       _host, null;
       _isStdio, bool:true;
       _maxListeners, undefined;
       _parent, null;
       _pendingData, null;
       _pendingEncoding, string:;
       _readableState, object:1979;
       _sockname, null;
       _type, string:pipe;
       _writableState, object:1980;
       _writev, null;
       allowHalfOpen, bool:false;
       bytesRead, int:0;
       destroy, function:1981/1056;
       destroySoon, function:1981/1056;
       destroyed, bool:false;
       domain, null;
       fd, int:1;
       readable, bool:false;
       writable, bool:true,
 1961. ,
 1962. length, [--C] int:1;
       name, [--C] string:bound ,
 1963. length, [--C] int:2;
       name, [--C] string:bound ,
 1964. length, [--C] int:0;
       name, [--C] string:bound ,
 1965. length, [--C] int:0;
       name, [--C] string:bound ,
 1966. length, [--C] int:0;
       name, [--C] string:bound ,
 1967. length, [--C] int:1;
       name, [--C] string:bound ,
 1968. length, [--C] int:1;
       name, [--C] string:bound ,
 1969. length, [--C] int:0;
       name, [--C] string:bound trace,
 1970. length, [--C] int:0;
       name, [--C] string:bound ,
 1971. assert, function:1982/1057;
       constructor, [W-C] function:1958/1045;
       dir, function:1983/1058;
       error, function:1984/1059;
       info, function:1985/1060;
       log, function:1985/1060;
       time, function:1986/1061;
       timeEnd, function:1987/1062;
       trace, function:1988/1063;
       warn, function:1984/1059,
 1972. _socketEnd, function:1989/1064;
       end, function:1990/1065;
       finish, function:1991/1066,
 1973. _externalStream, [-E-] object:1992;
       fd, [-E-] int:10;
       onread, function:1993/1067;
       owner, object:1959;
       writeQueueSize, int:0,
 1974. awaitDrain, int:0;
       buffer, object:1994;
       decoder, null;
       defaultEncoding, string:utf8;
       emittedReadable, bool:false;
       encoding, null;
       endEmitted, bool:false;
       ended, bool:false;
       flowing, null;
       highWaterMark, int:16384;
       length, int:0;
       needReadable, bool:false;
       objectMode, bool:false;
       pipes, null;
       pipesCount, int:0;
       ranOut, bool:false;
       readableListening, bool:false;
       reading, bool:false;
       readingMore, bool:false;
       sync, bool:true,
 1975. bufferProcessing, bool:false;
       bufferedRequest, null;
       corked, int:0;
       decodeStrings, bool:false;
       defaultEncoding, string:utf8;
       ended, bool:false;
       ending, bool:false;
       errorEmitted, bool:false;
       finished, bool:false;
       highWaterMark, int:16384;
       lastBufferedRequest, null;
       length, int:0;
       needDrain, bool:false;
       objectMode, bool:false;
       onwrite, function:1995/1068;
       pendingcb, int:0;
       prefinished, bool:false;
       sync, bool:true;
       writecb, null;
       writelen, int:0;
       writing, bool:false,
 1976. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:1996,
 1977. _socketEnd, function:1989/1064;
       end, function:1997/1069;
       finish, function:1991/1066,
 1978. _externalStream, [-E-] object:1998;
       fd, [-E-] int:1;
       onread, function:1993/1067;
       owner, object:1960;
       writeQueueSize, int:0,
 1979. awaitDrain, int:0;
       buffer, object:1999;
       decoder, null;
       defaultEncoding, string:utf8;
       emittedReadable, bool:false;
       encoding, null;
       endEmitted, bool:false;
       ended, bool:false;
       flowing, null;
       highWaterMark, int:16384;
       length, int:0;
       needReadable, bool:false;
       objectMode, bool:false;
       pipes, null;
       pipesCount, int:0;
       ranOut, bool:false;
       readableListening, bool:false;
       reading, bool:false;
       readingMore, bool:false;
       sync, bool:true,
 1980. bufferProcessing, bool:false;
       bufferedRequest, null;
       corked, int:0;
       decodeStrings, bool:false;
       defaultEncoding, string:utf8;
       ended, bool:false;
       ending, bool:false;
       errorEmitted, bool:false;
       finished, bool:false;
       highWaterMark, int:16384;
       lastBufferedRequest, null;
       length, int:0;
       needDrain, bool:false;
       objectMode, bool:false;
       onwrite, function:2000/1070;
       pendingcb, int:16;
       prefinished, bool:false;
       sync, bool:false;
       writecb, null;
       writelen, int:0;
       writing, bool:false,
 1981. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2001,
 1982. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2002,
 1983. length, [--C] int:2;
       name, [--C] string:;
       prototype, [W--] object:2003,
 1984. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:2004,
 1985. length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:2005,
 1986. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2006,
 1987. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2007,
 1988. length, [--C] int:0;
       name, [--C] string:trace;
       prototype, [W--] object:2008,
 1989. length, [--C] int:0;
       name, [--C] string:onSocketEnd;
       prototype, [W--] object:2009,
 1990. length, [--C] int:0;
       listener, function:2010/1071;
       name, [--C] string:g;
       prototype, [W--] object:2011,
 1991. length, [--C] int:0;
       name, [--C] string:onSocketFinish;
       prototype, [W--] object:2012,
 1992. ,
 1993. length, [--C] int:2;
       name, [--C] string:onread;
       prototype, [W--] object:2013,
 1994. length, [W--] int:0,
 1995. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2014,
 1996. constructor, [W-C] function:1976/1055,
 1997. length, [--C] int:0;
       listener, function:2010/1071;
       name, [--C] string:g;
       prototype, [W--] object:2015,
 1998. ,
 1999. length, [W--] int:0,
 2000. length, [--C] int:1;
       name, [--C] string:;
       prototype, [W--] object:2016,
 2001. constructor, [W-C] function:1981/1056,
 2002. constructor, [W-C] function:1982/1057,
 2003. constructor, [W-C] function:1983/1058,
 2004. constructor, [W-C] function:1984/1059,
 2005. constructor, [W-C] function:1985/1060,
 2006. constructor, [W-C] function:1986/1061,
 2007. constructor, [W-C] function:1987/1062,
 2008. constructor, [W-C] function:1988/1063,
 2009. constructor, [W-C] function:1989/1064,
 2010. length, [--C] int:0;
       name, [--C] string:onend;
       prototype, [W--] object:2017,
 2011. constructor, [W-C] function:1990/1065,
 2012. constructor, [W-C] function:1991/1066,
 2013. constructor, [W-C] function:1993/1067,
 2014. constructor, [W-C] function:1995/1068,
 2015. constructor, [W-C] function:1997/1069,
 2016. constructor, [W-C] function:2000/1070,
 2017. constructor, [W-C] function:2010/1071,
 2018. length, [W-C] int:0,
 2019. length, [W-C] int:0,
 2020. *J$SID*, [W--] int:1;
       length, [--C] int:0;
       name, [--C] string:inner;
       prototype, [W--] object:2021,
 2021. constructor, [W-C] function:2020/1072,
 2022. length, [W-C] int:0,
 2023. length, [W-C] int:0,
 2024. 0, int:7;
       length, [W-C] int:1,
 2025. length, [W-C] int:0,
 2026. length, [W-C] int:0,
 2027. 0, string:Generic error;
       length, [W-C] int:1,
 2028. message, [W-C] string:Generic error;
       stack, [W-C] undefined { get = function:2029/1073, set = function:2030/1074 },
 2029. length, [--C] int:0;
       name, [--C] string:;
       prototype, [---] object:2031,
 2030. length, [--C] int:1;
       name, [--C] string:;
       prototype, [---] object:2032,
 2031. constructor, [W-C] function:2029/1073,
 2032. constructor, [W-C] function:2030/1074,
 2033. exception, object:2028,
 2034. exception, object:2028,
 2035. ,
 2036. length, [W-C] int:0,
 2037. ,
 2038. length, [W-C] int:0,
 2039. *J$SID*, [W--] int:1;
       length, [--C] int:0;
       name, [--C] string:;
       prototype, [W--] object:2040,
 2040. constructor, [W-C] function:2039/1075,
 2041. meth, function:2039/1075,
 2042. length, [W-C] int:0,
 2043. length, [W-C] int:0,
 [TraceTypes.CScriptEnter;
  (TraceTypes.CDeclare
     { TraceTypes.name = "a"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CDeclare
     { TraceTypes.name = "x"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral
     { TraceTypes.value = function:1951/1042; hasGetterSetter = false });
  (TraceTypes.CDeclare
     { TraceTypes.name = "outer"; value = function:1951/1042;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral
     { TraceTypes.value = function:1953/1043; hasGetterSetter = false });
  (TraceTypes.CDeclare
     { TraceTypes.name = "throwing"; value = function:1953/1043;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CDeclare
     { TraceTypes.name = "c"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral
     { TraceTypes.value = function:1955/1044; hasGetterSetter = false });
  (TraceTypes.CDeclare
     { TraceTypes.name = "cons"; value = function:1955/1044;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral { TraceTypes.value = int:5; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "a"; lhs = undefined; value = int:5;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CLiteral { TraceTypes.value = int:0; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "x"; lhs = undefined; value = int:0;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CRead { TraceTypes.name = "console"; value = object:1957 });
  (TraceTypes.CGetField
     { TraceTypes.base = object:1957; offset = "log";
       value = function:1966/1050 });
  (TraceTypes.CRead { TraceTypes.name = "outer"; value = function:1951/1042 });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:1951/1042; base = object:0;
       args = object:2018; call_type = TraceTypes.Function });
  (TraceTypes.CFunEnter
     { TraceTypes.f = function:1951/1042; this = object:0; args = object:2019 });
  (TraceTypes.CDeclare
     { TraceTypes.name = "arguments"; value = object:2019;
       declaration_type = TraceTypes.ArgumentArray });
  (TraceTypes.CDeclare
     { TraceTypes.name = "x"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral
     { TraceTypes.value = function:2020/1072; hasGetterSetter = false });
  (TraceTypes.CDeclare
     { TraceTypes.name = "inner"; value = function:2020/1072;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CDeclare
     { TraceTypes.name = "y"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CDeclare
     { TraceTypes.name = "z"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral { TraceTypes.value = int:1; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "x"; lhs = undefined; value = int:1;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CLiteral { TraceTypes.value = int:2; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "y"; lhs = undefined; value = int:2;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CLiteral { TraceTypes.value = int:3; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "z"; lhs = undefined; value = int:3;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CRead { TraceTypes.name = "inner"; value = function:2020/1072 });
  (TraceTypes.CReturn function:2020/1072); TraceTypes.CEndExpression;
  (TraceTypes.CFunExit
     { TraceTypes.ret = function:2020/1072; exc = undefined });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:1951/1042; base = object:0;
       args = object:2018; result = function:2020/1072;
       call_type = TraceTypes.Function });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:2020/1072; base = object:0;
       args = object:2022; call_type = TraceTypes.Function });
  (TraceTypes.CFunEnter
     { TraceTypes.f = function:2020/1072; this = object:0; args = object:2023 });
  (TraceTypes.CDeclare
     { TraceTypes.name = "arguments"; value = object:2023;
       declaration_type = TraceTypes.ArgumentArray });
  (TraceTypes.CDeclare
     { TraceTypes.name = "z"; value = undefined;
       declaration_type = TraceTypes.Var });
  (TraceTypes.CLiteral { TraceTypes.value = int:4; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "z"; lhs = undefined; value = int:4;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CRead { TraceTypes.name = "x"; value = int:1 });
  (TraceTypes.CRead { TraceTypes.name = "y"; value = int:2 });
  (TraceTypes.CBinary
     { TraceTypes.op = "+"; left = int:1; right = int:2; result = int:3 });
  (TraceTypes.CRead { TraceTypes.name = "z"; value = int:4 });
  (TraceTypes.CBinary
     { TraceTypes.op = "+"; left = int:3; right = int:4; result = int:7 });
  (TraceTypes.CReturn int:7); TraceTypes.CEndExpression;
  (TraceTypes.CFunExit { TraceTypes.ret = int:7; exc = undefined });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:2020/1072; base = object:0;
       args = object:2022; result = int:7; call_type = TraceTypes.Function });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:1966/1050; base = object:1957;
       args = object:2024; call_type = TraceTypes.Method });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:1966/1050; base = object:1957;
       args = object:2024; result = undefined; call_type = TraceTypes.Method });
  TraceTypes.CEndExpression;
  (TraceTypes.CLiteral { TraceTypes.value = int:1; hasGetterSetter = false });
  (TraceTypes.CUnary { TraceTypes.op = "-"; arg = int:1; result = int:-1 });
  (TraceTypes.CLiteral { TraceTypes.value = int:2; hasGetterSetter = false });
  (TraceTypes.CBinary
     { TraceTypes.op = "+"; left = int:-1; right = int:2; result = int:1 });
  (TraceTypes.CLiteral { TraceTypes.value = int:0; hasGetterSetter = false });
  (TraceTypes.CBinary
     { TraceTypes.op = ">"; left = int:1; right = int:0; result = bool:true });
  (TraceTypes.CConditional bool:true); TraceTypes.CEndExpression;
  (TraceTypes.CLiteral
     { TraceTypes.value = string:0;; hasGetterSetter = false });
  TraceTypes.CScriptEnter;
  (TraceTypes.CLiteral { TraceTypes.value = int:0; hasGetterSetter = false });
  TraceTypes.CEndExpression; TraceTypes.CScriptExit;
  TraceTypes.CEndExpression;
  (TraceTypes.CLiteral
     { TraceTypes.value = string:throwing(); hasGetterSetter = false });
  TraceTypes.CScriptEnter;
  (TraceTypes.CRead
     { TraceTypes.name = "throwing"; value = function:1953/1043 });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:1953/1043; base = object:0;
       args = object:2025; call_type = TraceTypes.Function });
  (TraceTypes.CFunEnter
     { TraceTypes.f = function:1953/1043; this = object:0; args = object:2026 });
  (TraceTypes.CDeclare
     { TraceTypes.name = "arguments"; value = object:2026;
       declaration_type = TraceTypes.ArgumentArray });
  (TraceTypes.CRead { TraceTypes.name = "Error"; value = function:8/7 });
  (TraceTypes.CLiteral
     { TraceTypes.value = string:Generic error; hasGetterSetter = false });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:8/7; base = object:0; args = object:2027;
       call_type = TraceTypes.Constructor });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:8/7; base = object:0; args = object:2027;
       result = object:2028; call_type = TraceTypes.Constructor });
  (TraceTypes.CThrow object:2028); TraceTypes.CEndExpression;
  (TraceTypes.CFunExit { TraceTypes.ret = undefined; exc = object:2033 });
  (TraceTypes.CScriptExc object:2034);
  (TraceTypes.CDeclare
     { TraceTypes.name = "e"; value = object:2028;
       declaration_type = TraceTypes.CatchParam });
  (TraceTypes.CLiteral
     { TraceTypes.value = object:2035; hasGetterSetter = false });
  (TraceTypes.CWrite
     { TraceTypes.name = "c"; lhs = undefined; value = object:2035;
       isSuccessful = true }); TraceTypes.CEndExpression;
  (TraceTypes.CRead { TraceTypes.name = "c"; value = object:2035 });
  (TraceTypes.CRead { TraceTypes.name = "e"; value = object:2028 });
  (TraceTypes.CPutField
     { TraceTypes.base = object:2035; offset = "exn"; value = object:2028 });
  TraceTypes.CEndExpression;
  (TraceTypes.CRead { TraceTypes.name = "cons"; value = function:1955/1044 });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:1955/1044; base = object:0;
       args = object:2036; call_type = TraceTypes.Constructor });
  (TraceTypes.CFunEnter
     { TraceTypes.f = function:1955/1044; this = object:2037;
       args = object:2038 });
  (TraceTypes.CDeclare
     { TraceTypes.name = "arguments"; value = object:2038;
       declaration_type = TraceTypes.ArgumentArray });
  (TraceTypes.CLiteral
     { TraceTypes.value = function:2039/1075; hasGetterSetter = false });
  (TraceTypes.CLiteral
     { TraceTypes.value = object:2041; hasGetterSetter = false });
  (TraceTypes.CReturn object:2041); TraceTypes.CEndExpression;
  (TraceTypes.CFunExit { TraceTypes.ret = object:2041; exc = undefined });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:1955/1044; base = object:0;
       args = object:2036; result = object:2041;
       call_type = TraceTypes.Constructor });
  (TraceTypes.CGetField
     { TraceTypes.base = object:2041; offset = "meth";
       value = function:2039/1075 });
  (TraceTypes.CFunPre
     { TraceTypes.f = function:2039/1075; base = object:2041;
       args = object:2042; call_type = TraceTypes.Method });
  (TraceTypes.CFunEnter
     { TraceTypes.f = function:2039/1075; this = object:2041;
       args = object:2043 });
  (TraceTypes.CDeclare
     { TraceTypes.name = "arguments"; value = object:2043;
       declaration_type = TraceTypes.ArgumentArray });
  (TraceTypes.CRead { TraceTypes.name = "this"; value = object:2041 });
  (TraceTypes.CLiteral { TraceTypes.value = int:1; hasGetterSetter = false });
  (TraceTypes.CPutField
     { TraceTypes.base = object:2041; offset = "x"; value = int:1 });
  TraceTypes.CEndExpression;
  (TraceTypes.CFunExit { TraceTypes.ret = undefined; exc = undefined });
  (TraceTypes.CFunPost
     { TraceTypes.f = function:2039/1075; base = object:2041;
       args = object:2042; result = undefined; call_type = TraceTypes.Method });
  TraceTypes.CEndExpression; TraceTypes.CScriptExit], global, object:0, true)

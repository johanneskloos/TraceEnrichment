OASISFormat: 0.4
Name:        js-trace-enrichment
Version:     0.1
Synopsis:    Trace enrichment for JavaScript execution traces.
Authors:     Johannes Kloos
License:     MIT
Plugins:     META (0.4), StdFiles (0.4)
FilesAB:     xhr/compilationConfig.ml.ab
OCamlVersion: >= 4.02.1
AlphaFeatures: no_automatic_syntax

Library "js-enrichment"
  Path:       lib
  BuildTools: ocamlbuild
  Install:    true
  XMETAEnable: true
  XMETADescription: Trace enrichment for JavaScript traces
  BuildDepends: yojson, str, lwt.ppx, lwt, fmt, batteries, logs, logs.fmt,
    ppx_deriving, ppx_deriving.show, ppx_deriving.ord, ppx_deriving.eq,
    ppx_deriving.make, containers, containers.data
  Modules:    CalculatePointsTo, CalculateVersions, CleanTrace, 
    LocalFacts, PointsTo, Reference, RichTrace, Streaming, Trace,
    TraceTypes, Types, Debug, StringMap, IntMap, IntIntMap,
    IntIntSet, Log, ExtMap, Pairs, CalculateNameBindings, EnrichTrace

Document "js-enrichment-api"
  Type:       ocamlbuild (0.4)
  BuildTools: ocamldoc, ocamlbuild
  Title:      API reference for js-enrichment
  XOcamlbuildPath: lib
  XOcamlbuildModules:    CalculatePointsTo, CalculateVersions, CleanTrace, 
    LocalFacts, PointsTo, Reference, RichTrace, Streaming, Trace,
    TraceTypes, Types, Debug, StringMap, IntMap, IntIntMap,
    IntIntSet

Library "js-enrichment-xhr"
  Path:       xhr
  BuildTools: ocamlbuild
  Install:    true
  XMETAEnable: true
  FindLibParent: js-enrichment
  XMETADescription: Trace enrichment server for JavaScript traces
  BuildDepends: yojson, str, lwt.ppx, lwt, fmt, batteries, cohttp, camltemplate, uuidm, conduit, logs
  Modules:    Config, Common, CompilationConfig, TraceCollector, TraceStream, JalangiInterface, TraceStreamServer, Files
  DataFiles:  ../tracer/*.html, ../tracer/*.js
  
#Library "js-enrichment.test"
#  Path:       lib
#  BuildTools: ocamlbuild
#  Install:    true
#  XMETAEnable: true
#  XMETADescription: Trace enrichment for JavaScript traces - test data
#  BuildDepends: yojson, str, lwt, kaputt, js-enrichment, fmt, batteries, logs
#  Modules:    TestBaseData

Flag prettyprint
  Description: build the pretty-printers for traces.
  Default:     false

Executable "pptrace"
  Path:         tools
  BuildTools:   ocamlbuild
  MainIs:       pptrace.ml
  Install$:     flag(prettyprint)
  BuildDepends: js-enrichment
  CompiledObject: best

Executable "pprichtrace"
  Path:         tools
  BuildTools:   ocamlbuild
  MainIs:       pprichtrace.ml
  Install$:     flag(prettyprint)
  BuildDepends: js-enrichment
  CompiledObject: best

Executable "ppcleantrace"
  Path:         tools
  BuildTools:   ocamlbuild
  MainIs:       ppcleantrace.ml
  Install$:     flag(prettyprint)
  BuildDepends: js-enrichment
  CompiledObject: best

Executable "ppenriched"
  Path:         tools
  BuildTools:   ocamlbuild
  MainIs:       ppenriched.ml
  Install$:     flag(prettyprint)
  BuildDepends: js-enrichment
  CompiledObject: best

#Executable "richtrace_bench"
  Path:         tools
  BuildTools:   ocamlbuild
  MainIs:       richtrace_bench.ml
  Install:      false
  BuildDepends: js-enrichment
  CompiledObject: best

#Executable "unittests"
#  Path:       lib
#  BuildTools: ocamlbuild
#  Install:    false
#  Build$:     flag(tests)
#  MainIs:     unittests.ml
#  BuildDepends: kaputt, lwt, yojson, str, fmt, batteries, logs, logs.fmt

Test "unittests"
  Command:    $unittests
  Run:        true

Executable "cleantrace_test"
  Install:    false
  Build$:     flag(tests)
  MainIs:     cleantrace_test.ml
  BuildDepends: js-enrichment
  Path:       lib
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "richtrace_test"
  Install:    false
  Build$:     flag(tests)
  MainIs:     richtrace_test.ml
  BuildDepends: js-enrichment
  Path:       lib
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "synthesize_test"
  Install:    false
  Build$:     flag(tests)
  MainIs:     cleanTrace_unit_synthesize.ml
  BuildDepends: js-enrichment, kaputt
  Path:       lib
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "traceStreamTest"
  Install:    false
  Build$:     flag(tests)
  MainIs:     traceStreamTest.ml
  BuildDepends: js-enrichment, js-enrichment.js-enrichment-xhr, kaputt, lwt, lwt.unix
  Path:       xhr
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "jalangiInterfaceTest"
  Install:    false
  Build$:     flag(tests)
  MainIs:     jalangiInterfaceTest.ml
  BuildDepends: js-enrichment, js-enrichment.js-enrichment-xhr, kaputt, lwt, lwt.unix, camltemplate
  Path:       xhr
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "traceCollectorTest"
  Install:    false
  Build$:     flag(tests)
  MainIs:     traceCollectorTest.ml
  BuildDepends: js-enrichment, js-enrichment.js-enrichment-xhr,
        ppx_deriving.std, ppx_deriving_yojson,
        lwt, lwt.unix, cohttp, cohttp.lwt, camltemplate
  Path:       xhr
  BuildTools: ocamlbuild
  CompiledObject: best

Executable "traceStreamServerTest"
  Install:    false
  Build$:     flag(tests)
  MainIs:     traceStreamServerTest.ml
  BuildDepends: js-enrichment, js-enrichment.js-enrichment-xhr,
        ppx_deriving.std, ppx_deriving_yojson,
        lwt, lwt.unix, cohttp, cohttp.lwt, camltemplate
  Path:       xhr
  BuildTools: ocamlbuild
  CompiledObject: best

Test "synthesize_test"
  Command:    $synthesize_test
  Run:        true

